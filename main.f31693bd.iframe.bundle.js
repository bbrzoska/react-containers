(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{10:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return KEY_CODES})),__webpack_require__.d(__webpack_exports__,"b",(function(){return composeEventHandlers})),__webpack_require__.d(__webpack_exports__,"c",(function(){return getControlledValue}));__webpack_require__(2873),__webpack_require__(2874),__webpack_require__(753),__webpack_require__(1714),__webpack_require__(0);function composeEventHandlers(){for(var _len=arguments.length,fns=new Array(_len),_key=0;_key<_len;_key++)fns[_key]=arguments[_key];return function(event){for(var _len2=arguments.length,args=new Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++)args[_key2-1]=arguments[_key2];return fns.some((function(fn){return fn&&fn.apply(void 0,[event].concat(args)),event&&event.defaultPrevented}))}}function getControlledValue(){for(var _len=arguments.length,values=new Array(_len),_key=0;_key<_len;_key++)values[_key]=arguments[_key];for(var _i=0,_values=values;_i<_values.length;_i++){var value=_values[_i];if(void 0!==value)return value}}var KEY_CODES={ALT:18,BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SHIFT:16,SPACE:32,TAB:9,UP:38}},1720:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Container",(function(){return focusjail_stories_Container})),__webpack_require__.d(__webpack_exports__,"Hook",(function(){return focusjail_stories_Hook}));var _parameters,esm_extends=__webpack_require__(558),react=__webpack_require__(0),react_default=__webpack_require__.n(react),objectWithoutPropertiesLoose=__webpack_require__(771),prop_types=__webpack_require__(2),prop_types_default=__webpack_require__.n(prop_types),index_esm=__webpack_require__(10),dist_index_esm=__webpack_require__(772),activeElement=__webpack_require__(1133),_excluded=["onKeyDown"],useFocusJail_useFocusJail=function useFocusJail(_temp){var _ref=void 0===_temp?{containerRef:Object(react.createRef)()}:_temp,_ref$focusOnMount=_ref.focusOnMount,focusOnMount=void 0===_ref$focusOnMount||_ref$focusOnMount,_ref$restoreFocus=_ref.restoreFocus,restoreFocus=void 0===_ref$restoreFocus||_ref$restoreFocus,environment=_ref.environment,focusElem=_ref.focusElem,containerRef=_ref.containerRef,restoreFocusElement=Object(react.useRef)(null),_useState=Object(react.useState)(containerRef.current),currentRef=_useState[0],setCurrentRef=_useState[1];Object(react.useEffect)((function(){containerRef.current!==currentRef&&setCurrentRef(containerRef.current)}));var focusElement=Object(react.useCallback)((function(element){focusElem?focusElem(element):element&&element.focus()}),[focusElem]),getInitialFocusNode=function getInitialFocusNode(){var doc=environment||document,activeElem=Object(activeElement.a)(doc),containerElem=currentRef;return containerElem.contains(activeElem)?activeElem:containerElem};return Object(react.useEffect)((function(){return restoreFocusElement.current=Object(activeElement.a)(environment||document),focusOnMount&&focusElement(currentRef),function(){var isBodyInactive=restoreFocusElement.current!==document.body,hasActiveElement=null!==restoreFocusElement.current;isBodyInactive&&hasActiveElement&&restoreFocus&&focusElement(restoreFocusElement.current)}}),[focusOnMount,restoreFocus,environment,focusElement,currentRef]),{getContainerProps:function getContainerProps(_temp2){var _ref2=void 0===_temp2?{}:_temp2,onKeyDown=_ref2.onKeyDown,other=Object(objectWithoutPropertiesLoose.a)(_ref2,_excluded);return Object(esm_extends.a)({onKeyDown:Object(index_esm.b)(onKeyDown,(function(event){if(event.keyCode===index_esm.a.TAB){!function validateContainerRef(){if(!currentRef)throw new Error("Accessibility Error: You must apply the ref prop to your containing element.")}();var tabbableNodes=function getTabbableNodes(){var elements=Object(dist_index_esm.a)(currentRef);return{firstItem:elements[0]||getInitialFocusNode(),lastItem:elements[elements.length-1]||getInitialFocusNode()}}();!event.shiftKey||event.target!==tabbableNodes.firstItem&&event.target!==currentRef||(focusElement(tabbableNodes.lastItem),event.preventDefault()),event.shiftKey||event.target!==tabbableNodes.lastItem||(focusElement(tabbableNodes.firstItem),event.preventDefault())}})),"data-garden-container-id":"containers.focusjail","data-garden-container-version":"storybook"},other)},focusElement:focusElement}},FocusJailContainer_excluded=["children","render"],FocusJailContainer_FocusJailContainer=function FocusJailContainer(_ref){var children=_ref.children,_ref$render=_ref.render,render=void 0===_ref$render?children:_ref$render,options=Object(objectWithoutPropertiesLoose.a)(_ref,FocusJailContainer_excluded);return react_default.a.createElement(react_default.a.Fragment,null,render(useFocusJail_useFocusJail(options)))};FocusJailContainer_FocusJailContainer.propTypes={children:prop_types_default.a.func,render:prop_types_default.a.func,focusOnMount:prop_types_default.a.bool,environment:prop_types_default.a.any,containerRef:prop_types_default.a.any.isRequired,focusElem:prop_types_default.a.func};try{FocusJailContainer_FocusJailContainer.displayName="FocusJailContainer",FocusJailContainer_FocusJailContainer.__docgenInfo={description:"",displayName:"FocusJailContainer",props:{render:{defaultValue:null,description:"A render prop function which receives a focus jail prop getter",name:"render",required:!1,type:{name:"((options: IUseFocusJailReturnValue) => ReactNode)"}},children:{defaultValue:null,description:"A children render prop function which receives a focus jail prop getter",name:"children",required:!1,type:{name:"(((options: IUseFocusJailReturnValue) => ReactNode) & (boolean | ReactChild | ReactFragment | ReactPortal | null))"}},focusOnMount:{defaultValue:null,description:"Focuses on the `containerRef` element after mounting",name:"focusOnMount",required:!1,type:{name:"boolean"}},restoreFocus:{defaultValue:null,description:"Determines whether to return keyboard focus to the last active element upon unmounting",name:"restoreFocus",required:!1,type:{name:"boolean"}},environment:{defaultValue:null,description:"The global environment where the focus jail is rendered",name:"environment",required:!1,type:{name:"Document"}},focusElem:{defaultValue:null,description:"A callback function that receives the focused element",name:"focusElem",required:!1,type:{name:"((element: HTMLElement) => any)"}},containerRef:{defaultValue:null,description:"A [ref](https://reactjs.org/docs/refs-and-the-dom.html) pointing to the focus jail's container element",name:"containerRef",required:!0,type:{name:"RefObject<HTMLElement>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/focusjail/src/FocusJailContainer.tsx#FocusJailContainer"]={docgenInfo:FocusJailContainer_FocusJailContainer.__docgenInfo,name:"FocusJailContainer",path:"packages/focusjail/src/FocusJailContainer.tsx#FocusJailContainer"})}catch(__react_docgen_typescript_loader_error){}var focusjail_stories_Container=function Container(_ref){var focusOnMount=_ref.focusOnMount,containerRef=Object(react.createRef)();return react_default.a.createElement(FocusJailContainer_FocusJailContainer,{containerRef:containerRef,focusOnMount:focusOnMount},(function(_ref2){var getContainerProps=_ref2.getContainerProps;return react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement("input",null),react_default.a.createElement("div",getContainerProps({ref:containerRef,tabIndex:-1}),react_default.a.createElement("p",null,"Focus is locked within the parent element"),react_default.a.createElement("input",null),react_default.a.createElement("button",null,"Focusable Items")))}))},focusjail_stories_Hook=function Hook(_ref3){var focusOnMount=_ref3.focusOnMount,containerRef=Object(react.useRef)(null),getContainerProps=useFocusJail_useFocusJail({focusOnMount:focusOnMount,containerRef:containerRef}).getContainerProps;return react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement("input",null),react_default.a.createElement("div",getContainerProps({ref:containerRef,tabIndex:-1}),react_default.a.createElement("p",null,"Focus is locked within the parent element"),react_default.a.createElement("input",null),react_default.a.createElement("button",null,"Focusable Items")))};focusjail_stories_Container.storyName="FocusJailContainer",focusjail_stories_Container.args={focusOnMount:!0},focusjail_stories_Hook.storyName="useFocusJail",focusjail_stories_Hook.args={focusOnMount:!0},focusjail_stories_Hook.parameters={docs:{description:{story:"The `useFocusJail` hook allows you to trap focus to a container element. Useful\n      for modals and widgets. Garden uses this in react-components for the modals package."}}};__webpack_exports__.default={title:"FocusJail Container",component:FocusJailContainer_FocusJailContainer,parameters:(_parameters={storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React, { useRef, createRef } from \'react\';\\nimport { FocusJailContainer, useFocusJail } from \'./src\';\\n\\nexport const Container = ({ focusOnMount }) => {\\n  const containerRef = createRef<HTMLElement>();\\n\\n  return (\\n    <FocusJailContainer containerRef={containerRef} focusOnMount={focusOnMount}>\\n      {({ getContainerProps }) => (\\n        <>\\n          <input />\\n          <div {...getContainerProps({ ref: containerRef, tabIndex: -1 })}>\\n            <p>Focus is locked within the parent element</p>\\n            <input />\\n            <button>Focusable Items</button>\\n          </div>\\n        </>\\n      )}\\n    </FocusJailContainer>\\n  );\\n};\\n\\nexport const Hook = ({ focusOnMount }) => {\\n  const containerRef = useRef(null);\\n  const { getContainerProps } = useFocusJail({\\n    focusOnMount,\\n    containerRef\\n  });\\n\\n  return (\\n    <>\\n      <input />\\n      <div {...getContainerProps({ ref: containerRef, tabIndex: -1 })}>\\n        <p>Focus is locked within the parent element</p>\\n        <input />\\n        <button>Focusable Items</button>\\n      </div>\\n    </>\\n  );\\n};\\n\\nContainer.storyName = \'FocusJailContainer\';\\n\\nContainer.args = {\\n  focusOnMount: true\\n};\\n\\nHook.storyName = \'useFocusJail\';\\n\\nHook.args = {\\n  focusOnMount: true\\n};\\n\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`useFocusJail\\\\` hook allows you to trap focus to a container element. Useful\\n      for modals and widgets. Garden uses this in react-components for the modals package.`\\n    }\\n  }\\n};\\n\\nexport default {\\n  title: \'FocusJail Container\',\\n  component: FocusJailContainer,\\n  parameters: {\\n    layout: \'centered\',\\n    componentSubtitle: `A container component which wraps the useFocusJail hook.`\\n  }\\n};\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Container":{"startLoc":{"col":25,"line":11},"endLoc":{"col":1,"line":28},"startBody":{"col":25,"line":11},"endBody":{"col":1,"line":28}},"Hook":{"startLoc":{"col":20,"line":30},"endLoc":{"col":1,"line":47},"startBody":{"col":20,"line":30},"endBody":{"col":1,"line":47}}};\n    \n/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React, { useRef, createRef } from \'react\';\nimport { FocusJailContainer, useFocusJail } from \'./src\';\n\nexport const Container = ({ focusOnMount }) => {\n  const containerRef = createRef<HTMLElement>();\n\n  return (\n    <FocusJailContainer containerRef={containerRef} focusOnMount={focusOnMount}>\n      {({ getContainerProps }) => (\n        <>\n          <input />\n          <div {...getContainerProps({ ref: containerRef, tabIndex: -1 })}>\n            <p>Focus is locked within the parent element</p>\n            <input />\n            <button>Focusable Items</button>\n          </div>\n        </>\n      )}\n    </FocusJailContainer>\n  );\n};;\n\nexport const Hook = ({ focusOnMount }) => {\n  const containerRef = useRef(null);\n  const { getContainerProps } = useFocusJail({\n    focusOnMount,\n    containerRef\n  });\n\n  return (\n    <>\n      <input />\n      <div {...getContainerProps({ ref: containerRef, tabIndex: -1 })}>\n        <p>Focus is locked within the parent element</p>\n        <input />\n        <button>Focusable Items</button>\n      </div>\n    </>\n  );\n};\n\nContainer.storyName = \'FocusJailContainer\';\n\nContainer.args = {\n  focusOnMount: true\n};\n\nHook.storyName = \'useFocusJail\';\n\nHook.args = {\n  focusOnMount: true\n};\n\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`useFocusJail\\` hook allows you to trap focus to a container element. Useful\n      for modals and widgets. Garden uses this in react-components for the modals package.`\n    }\n  }\n};\n\nexport default {\n  title: \'FocusJail Container\',\n  component: FocusJailContainer,\n  parameters: {"storySource":{"source":"/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React, { useRef, createRef } from \'react\';\\nimport { FocusJailContainer, useFocusJail } from \'./src\';\\n\\nexport const Container = ({ focusOnMount }) => {\\n  const containerRef = createRef<HTMLElement>();\\n\\n  return (\\n    <FocusJailContainer containerRef={containerRef} focusOnMount={focusOnMount}>\\n      {({ getContainerProps }) => (\\n        <>\\n          <input />\\n          <div {...getContainerProps({ ref: containerRef, tabIndex: -1 })}>\\n            <p>Focus is locked within the parent element</p>\\n            <input />\\n            <button>Focusable Items</button>\\n          </div>\\n        </>\\n      )}\\n    </FocusJailContainer>\\n  );\\n};\\n\\nexport const Hook = ({ focusOnMount }) => {\\n  const containerRef = useRef(null);\\n  const { getContainerProps } = useFocusJail({\\n    focusOnMount,\\n    containerRef\\n  });\\n\\n  return (\\n    <>\\n      <input />\\n      <div {...getContainerProps({ ref: containerRef, tabIndex: -1 })}>\\n        <p>Focus is locked within the parent element</p>\\n        <input />\\n        <button>Focusable Items</button>\\n      </div>\\n    </>\\n  );\\n};\\n\\nContainer.storyName = \'FocusJailContainer\';\\n\\nContainer.args = {\\n  focusOnMount: true\\n};\\n\\nHook.storyName = \'useFocusJail\';\\n\\nHook.args = {\\n  focusOnMount: true\\n};\\n\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`useFocusJail\\\\` hook allows you to trap focus to a container element. Useful\\n      for modals and widgets. Garden uses this in react-components for the modals package.`\\n    }\\n  }\\n};\\n\\nexport default {\\n  title: \'FocusJail Container\',\\n  component: FocusJailContainer,\\n  parameters: {\\n    layout: \'centered\',\\n    componentSubtitle: `A container component which wraps the useFocusJail hook.`\\n  }\\n};\\n","locationsMap":{"container":{"startLoc":{"col":25,"line":11},"endLoc":{"col":1,"line":28},"startBody":{"col":25,"line":11},"endBody":{"col":1,"line":28}},"hook":{"startLoc":{"col":20,"line":30},"endLoc":{"col":1,"line":47},"startBody":{"col":20,"line":30},"endBody":{"col":1,"line":47}}}},\n    layout: \'centered\',\n    componentSubtitle: `A container component which wraps the useFocusJail hook.`\n  },};\n',locationsMap:{container:{startLoc:{col:25,line:19},endLoc:{col:1,line:36},startBody:{col:25,line:19},endBody:{col:1,line:36}},hook:{startLoc:{col:20,line:38},endLoc:{col:1,line:55},startBody:{col:20,line:38},endBody:{col:1,line:55}}}}},_parameters.storySource={source:"/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React, { useRef, createRef } from 'react';\nimport { FocusJailContainer, useFocusJail } from './src';\n\nexport const Container = ({ focusOnMount }) => {\n  const containerRef = createRef<HTMLElement>();\n\n  return (\n    <FocusJailContainer containerRef={containerRef} focusOnMount={focusOnMount}>\n      {({ getContainerProps }) => (\n        <>\n          <input />\n          <div {...getContainerProps({ ref: containerRef, tabIndex: -1 })}>\n            <p>Focus is locked within the parent element</p>\n            <input />\n            <button>Focusable Items</button>\n          </div>\n        </>\n      )}\n    </FocusJailContainer>\n  );\n};\n\nexport const Hook = ({ focusOnMount }) => {\n  const containerRef = useRef(null);\n  const { getContainerProps } = useFocusJail({\n    focusOnMount,\n    containerRef\n  });\n\n  return (\n    <>\n      <input />\n      <div {...getContainerProps({ ref: containerRef, tabIndex: -1 })}>\n        <p>Focus is locked within the parent element</p>\n        <input />\n        <button>Focusable Items</button>\n      </div>\n    </>\n  );\n};\n\nContainer.storyName = 'FocusJailContainer';\n\nContainer.args = {\n  focusOnMount: true\n};\n\nHook.storyName = 'useFocusJail';\n\nHook.args = {\n  focusOnMount: true\n};\n\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`useFocusJail\\` hook allows you to trap focus to a container element. Useful\n      for modals and widgets. Garden uses this in react-components for the modals package.`\n    }\n  }\n};\n\nexport default {\n  title: 'FocusJail Container',\n  component: FocusJailContainer,\n  parameters: {\n    layout: 'centered',\n    componentSubtitle: `A container component which wraps the useFocusJail hook.`\n  }\n};\n",locationsMap:{container:{startLoc:{col:25,line:11},endLoc:{col:1,line:28},startBody:{col:25,line:11},endBody:{col:1,line:28}},hook:{startLoc:{col:20,line:30},endLoc:{col:1,line:47},startBody:{col:20,line:30},endBody:{col:1,line:47}}}},_parameters.layout="centered",_parameters.componentSubtitle="A container component which wraps the useFocusJail hook.",_parameters)};focusjail_stories_Container.parameters=Object(esm_extends.a)({storySource:{source:"({ focusOnMount }) => {\n  const containerRef = createRef<HTMLElement>();\n\n  return (\n    <FocusJailContainer containerRef={containerRef} focusOnMount={focusOnMount}>\n      {({ getContainerProps }) => (\n        <>\n          <input />\n          <div {...getContainerProps({ ref: containerRef, tabIndex: -1 })}>\n            <p>Focus is locked within the parent element</p>\n            <input />\n            <button>Focusable Items</button>\n          </div>\n        </>\n      )}\n    </FocusJailContainer>\n  );\n}"}},focusjail_stories_Container.parameters),focusjail_stories_Hook.parameters=Object(esm_extends.a)({storySource:{source:"({ focusOnMount }) => {\n  const containerRef = useRef(null);\n  const { getContainerProps } = useFocusJail({\n    focusOnMount,\n    containerRef\n  });\n\n  return (\n    <>\n      <input />\n      <div {...getContainerProps({ ref: containerRef, tabIndex: -1 })}>\n        <p>Focus is locked within the parent element</p>\n        <input />\n        <button>Focusable Items</button>\n      </div>\n    </>\n  );\n}"}},focusjail_stories_Hook.parameters);try{focusjail_stories_Container.displayName="Container",focusjail_stories_Container.__docgenInfo={description:"",displayName:"Container",props:{focusOnMount:{defaultValue:null,description:"",name:"focusOnMount",required:!0,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/focusjail/focusjail.stories.tsx#Container"]={docgenInfo:focusjail_stories_Container.__docgenInfo,name:"Container",path:"packages/focusjail/focusjail.stories.tsx#Container"})}catch(__react_docgen_typescript_loader_error){}try{focusjail_stories_Hook.displayName="Hook",focusjail_stories_Hook.__docgenInfo={description:"",displayName:"Hook",props:{focusOnMount:{defaultValue:null,description:"",name:"focusOnMount",required:!0,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/focusjail/focusjail.stories.tsx#Hook"]={docgenInfo:focusjail_stories_Hook.__docgenInfo,name:"Hook",path:"packages/focusjail/focusjail.stories.tsx#Hook"})}catch(__react_docgen_typescript_loader_error){}},1749:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return useSelection}));__webpack_require__(550);var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(557),_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(232),react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(0),_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(10),_excluded=["role"],_excluded2=["selectedAriaKey","role","onFocus","onKeyDown","onClick","item","focusRef","refKey"];function stateReducer(state,action){switch(action.type){case"END":case"HOME":case"FOCUS":case"INCREMENT":case"DECREMENT":return Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__.a)({},state,{focusedItem:action.payload});case"MOUSE_SELECT":return Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__.a)({},state,{selectedItem:action.payload,focusedItem:void 0});case"KEYBOARD_SELECT":return Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__.a)({},state,{selectedItem:action.payload});case"EXIT_WIDGET":return Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__.a)({},state,{focusedItem:void 0});default:return state}}function useSelection(_temp){var _ref=void 0===_temp?{}:_temp,_ref$direction=_ref.direction,direction=void 0===_ref$direction?"horizontal":_ref$direction,_ref$defaultFocusedIn=_ref.defaultFocusedIndex,defaultFocusedIndex=void 0===_ref$defaultFocusedIn?0:_ref$defaultFocusedIn,defaultSelectedIndex=_ref.defaultSelectedIndex,rtl=_ref.rtl,selectedItem=_ref.selectedItem,focusedItem=_ref.focusedItem,onSelect=_ref.onSelect,onFocus=_ref.onFocus,isSelectedItemControlled=void 0!==selectedItem,isFocusedItemControlled=void 0!==focusedItem,refs=[],items=[],_useReducer=Object(react__WEBPACK_IMPORTED_MODULE_3__.useReducer)(stateReducer,{selectedItem:selectedItem,focusedItem:focusedItem}),state=_useReducer[0],dispatch=_useReducer[1],controlledFocusedItem=Object(_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_4__.c)(focusedItem,state.focusedItem),controlledSelectedItem=Object(_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_4__.c)(selectedItem,state.selectedItem);Object(react__WEBPACK_IMPORTED_MODULE_3__.useEffect)((function(){if(void 0!==controlledFocusedItem){var focusedIndex=items.indexOf(controlledFocusedItem);refs[focusedIndex]&&refs[focusedIndex].current.focus()}}),[controlledFocusedItem]),Object(react__WEBPACK_IMPORTED_MODULE_3__.useEffect)((function(){void 0===selectedItem&&void 0!==defaultSelectedIndex&&(onSelect&&onSelect(items[defaultSelectedIndex]),isSelectedItemControlled||dispatch({type:"KEYBOARD_SELECT",payload:items[defaultSelectedIndex]}))}),[]);return{focusedItem:controlledFocusedItem,selectedItem:controlledSelectedItem,getItemProps:function getItemProps(_temp3,propGetterName){var _extends2,_ref3=void 0===_temp3?{}:_temp3,_ref3$selectedAriaKey=_ref3.selectedAriaKey,selectedAriaKey=void 0===_ref3$selectedAriaKey?"aria-selected":_ref3$selectedAriaKey,_ref3$role=_ref3.role,role=void 0===_ref3$role?"option":_ref3$role,onFocusCallback=_ref3.onFocus,onKeyDown=_ref3.onKeyDown,onClick=_ref3.onClick,item=_ref3.item,focusRef=_ref3.focusRef,_ref3$refKey=_ref3.refKey,refKey=void 0===_ref3$refKey?"ref":_ref3$refKey,other=Object(_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__.a)(_ref3,_excluded2);if(void 0===propGetterName&&(propGetterName="getItemProps"),void 0===item)throw new Error('Accessibility Error: You must provide an "item" option to "'+propGetterName+'()"');if(void 0===focusRef)throw new Error('Accessibility Error: You must provide a "focusRef" option to "'+propGetterName+'()"');refs.push(focusRef),items.push(item);var isSelected=controlledSelectedItem===item,tabIndex=(void 0===controlledFocusedItem?isSelected:controlledFocusedItem===item)||void 0===controlledSelectedItem&&void 0===controlledFocusedItem&&items.indexOf(item)===defaultFocusedIndex?0:-1,verticalDirection="vertical"===direction||"both"===direction,horizontalDirection="horizontal"===direction||"both"===direction;return Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__.a)(((_extends2={role:role,tabIndex:tabIndex})[selectedAriaKey]=selectedAriaKey?isSelected:void 0,_extends2[refKey]=focusRef,_extends2.onFocus=Object(_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_4__.b)(onFocusCallback,(function(){onFocus&&onFocus(item),isFocusedItemControlled||dispatch({type:"FOCUS",payload:item})})),_extends2.onBlur=function onBlur(e){0===e.target.tabIndex&&(isFocusedItemControlled||dispatch({type:"EXIT_WIDGET"}),onFocus&&onFocus())},_extends2.onClick=Object(_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_4__.b)(onClick,(function(){onSelect&&onSelect(item),onFocus&&onFocus(),isSelectedItemControlled||dispatch({type:"MOUSE_SELECT",payload:item})})),_extends2.onKeyDown=Object(_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_4__.b)(onKeyDown,(function(e){var nextIndex,currentIndex;currentIndex=isFocusedItemControlled?items.indexOf(focusedItem):items.indexOf(state.focusedItem||state.selectedItem);var onIncrement=function onIncrement(){nextIndex=currentIndex+1,currentIndex===items.length-1&&(nextIndex=0),!isFocusedItemControlled&&dispatch({type:"INCREMENT",payload:items[nextIndex]}),onFocus&&onFocus(items[nextIndex])},onDecrement=function onDecrement(){nextIndex=currentIndex-1,0===currentIndex&&(nextIndex=items.length-1),!isFocusedItemControlled&&dispatch({type:"DECREMENT",payload:items[nextIndex]}),onFocus&&onFocus(items[nextIndex])};e.ctrlKey||e.metaKey||e.shiftKey||e.altKey||(e.keyCode===_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_4__.a.UP&&verticalDirection||e.keyCode===_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_4__.a.LEFT&&horizontalDirection?(rtl&&!verticalDirection?onIncrement():onDecrement(),e.preventDefault()):e.keyCode===_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_4__.a.DOWN&&verticalDirection||e.keyCode===_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_4__.a.RIGHT&&horizontalDirection?(rtl&&!verticalDirection?onDecrement():onIncrement(),e.preventDefault()):e.keyCode===_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_4__.a.HOME?(isFocusedItemControlled||dispatch({type:"HOME",payload:items[0]}),onFocus&&onFocus(items[0]),e.preventDefault()):e.keyCode===_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_4__.a.END?(isFocusedItemControlled||dispatch({type:"END",payload:items[items.length-1]}),onFocus&&onFocus(items[items.length-1]),e.preventDefault()):e.keyCode!==_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_4__.a.SPACE&&e.keyCode!==_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_4__.a.ENTER||(onSelect&&onSelect(item),isSelectedItemControlled||dispatch({type:"KEYBOARD_SELECT",payload:item}),e.preventDefault()))})),_extends2),other)},getContainerProps:function getContainerProps(_temp2){var _ref2=void 0===_temp2?{}:_temp2,_ref2$role=_ref2.role,role=void 0===_ref2$role?"listbox":_ref2$role,other=Object(_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__.a)(_ref2,_excluded);return Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__.a)({role:role,"data-garden-container-id":"containers.selection","data-garden-container-version":"storybook"},other)}}}},1784:function(module,exports,__webpack_require__){__webpack_require__(1785),__webpack_require__(2124),__webpack_require__(2125),__webpack_require__(2889),__webpack_require__(2890),__webpack_require__(2891),__webpack_require__(2907),__webpack_require__(2892),__webpack_require__(2893),__webpack_require__(2731),__webpack_require__(2831),__webpack_require__(2908),module.exports=__webpack_require__(2866)},1828:function(module,exports){},2125:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(1259)},2757:function(module,exports){},2759:function(module,exports){},2788:function(module,exports){},2789:function(module,exports){},2866:function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__(1259).configure)([__webpack_require__(2867)],module,!1)}).call(this,__webpack_require__(393)(module))},2867:function(module,exports,__webpack_require__){var map={"./accordion/accordion.stories.tsx":2896,"./breadcrumb/breadcrumb.stories.tsx":2897,"./buttongroup/buttongroup.stories.tsx":2898,"./buttongroup/node_modules/@zendeskgarden/container-selection/selection.stories.tsx":756,"./field/field.stories.tsx":2899,"./focusjail/focusjail.stories.tsx":1720,"./focusvisible/focusvisible.stories.tsx":2900,"./grid/grid.stories.tsx":2901,"./keyboardfocus/keyboardfocus.stories.tsx":2902,"./modal/modal.stories.tsx":2894,"./modal/node_modules/@zendeskgarden/container-focusjail/focusjail.stories.tsx":1720,"./pagination/node_modules/@zendeskgarden/container-selection/selection.stories.tsx":756,"./pagination/pagination.stories.tsx":2903,"./schedule/schedule.stories.tsx":2904,"./scrollregion/scrollregion.stories.tsx":2905,"./selection/selection.stories.tsx":756,"./tabs/node_modules/@zendeskgarden/container-selection/selection.stories.tsx":756,"./tabs/tabs.stories.tsx":2906,"./tooltip/tooltip.stories.tsx":2895};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=2867},2894:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Container",(function(){return modal_stories_Container})),__webpack_require__.d(__webpack_exports__,"Hook",(function(){return modal_stories_Hook}));var esm_extends=__webpack_require__(260),react=__webpack_require__(0),react_default=__webpack_require__.n(react),objectWithoutPropertiesLoose=__webpack_require__(292),prop_types=__webpack_require__(2),prop_types_default=__webpack_require__.n(prop_types),hooks=__webpack_require__(2933),index_esm=__webpack_require__(10),dist_index_esm=(__webpack_require__(1717),__webpack_require__(1121),__webpack_require__(550),__webpack_require__(772));function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}function activeElement(doc){void 0===doc&&(doc=function ownerDocument(node){return node&&node.ownerDocument||document}());try{var active=doc.activeElement;return active&&active.nodeName?active:null}catch(e){return doc.body}}var _excluded$1=["onKeyDown"],index_esm_useFocusJail=function useFocusJail(_temp){var _ref=void 0===_temp?{containerRef:Object(react.createRef)()}:_temp,_ref$focusOnMount=_ref.focusOnMount,focusOnMount=void 0===_ref$focusOnMount||_ref$focusOnMount,_ref$restoreFocus=_ref.restoreFocus,restoreFocus=void 0===_ref$restoreFocus||_ref$restoreFocus,environment=_ref.environment,focusElem=_ref.focusElem,containerRef=_ref.containerRef,restoreFocusElement=Object(react.useRef)(null),_useState=Object(react.useState)(containerRef.current),currentRef=_useState[0],setCurrentRef=_useState[1];Object(react.useEffect)((function(){containerRef.current!==currentRef&&setCurrentRef(containerRef.current)}));var focusElement=Object(react.useCallback)((function(element){focusElem?focusElem(element):element&&element.focus()}),[focusElem]),getInitialFocusNode=function getInitialFocusNode(){var activeElem=activeElement(environment||document),containerElem=currentRef;return containerElem.contains(activeElem)?activeElem:containerElem};return Object(react.useEffect)((function(){return restoreFocusElement.current=activeElement(environment||document),focusOnMount&&focusElement(currentRef),function(){var isBodyInactive=restoreFocusElement.current!==document.body,hasActiveElement=null!==restoreFocusElement.current;isBodyInactive&&hasActiveElement&&restoreFocus&&focusElement(restoreFocusElement.current)}}),[focusOnMount,restoreFocus,environment,focusElement,currentRef]),{getContainerProps:function getContainerProps(_temp2){var _ref2=void 0===_temp2?{}:_temp2,onKeyDown=_ref2.onKeyDown,other=_objectWithoutPropertiesLoose(_ref2,_excluded$1);return _extends({onKeyDown:Object(index_esm.b)(onKeyDown,(function(event){if(event.keyCode===index_esm.a.TAB){!function validateContainerRef(){if(!currentRef)throw new Error("Accessibility Error: You must apply the ref prop to your containing element.")}();var tabbableNodes=function getTabbableNodes(){var elements=Object(dist_index_esm.a)(currentRef);return{firstItem:elements[0]||getInitialFocusNode(),lastItem:elements[elements.length-1]||getInitialFocusNode()}}();!event.shiftKey||event.target!==tabbableNodes.firstItem&&event.target!==currentRef||(focusElement(tabbableNodes.lastItem),event.preventDefault()),event.shiftKey||event.target!==tabbableNodes.lastItem||(focusElement(tabbableNodes.firstItem),event.preventDefault())}})),"data-garden-container-id":"containers.focusjail","data-garden-container-version":"1.4.7"},other)},focusElement:focusElement}},_excluded=["children","render"],index_esm_FocusJailContainer=function FocusJailContainer(_ref){var children=_ref.children,_ref$render=_ref.render,render=void 0===_ref$render?children:_ref$render,options=_objectWithoutPropertiesLoose(_ref,_excluded);return react_default.a.createElement(react_default.a.Fragment,null,render(index_esm_useFocusJail(options)))};index_esm_FocusJailContainer.propTypes={children:prop_types_default.a.func,render:prop_types_default.a.func,focusOnMount:prop_types_default.a.bool,environment:prop_types_default.a.any,containerRef:prop_types_default.a.any.isRequired,focusElem:prop_types_default.a.func},index_esm_FocusJailContainer.__docgenInfo={description:"",methods:[],displayName:"FocusJailContainer",props:{children:{type:{name:"func"},required:!1,description:""},render:{type:{name:"func"},required:!1,description:""},focusOnMount:{type:{name:"bool"},required:!1,description:""},environment:{type:{name:"any"},required:!1,description:""},containerRef:{type:{name:"any"},required:!0,description:""},focusElem:{type:{name:"func"},required:!1,description:""}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/focusjail/dist/index.esm.js"]={name:"FocusJailContainer",docgenInfo:index_esm_FocusJailContainer.__docgenInfo,path:"packages/focusjail/dist/index.esm.js"});var useModal_excluded=["onMouseUp"],_excluded2=["role","onKeyDown","onMouseDown"],_excluded3=["id"],_excluded4=["id"],_excluded5=["onClick"];function useModal(_temp){var _ref=void 0===_temp?{}:_temp,onClose=_ref.onClose,modalRef=_ref.modalRef,_id=_ref.id,focusOnMount=_ref.focusOnMount,restoreFocus=_ref.restoreFocus,environment=_ref.environment,seed=Object(hooks.a)(),idPrefix=Object(react.useState)(_id||seed("modal_storybook"))[0],titleId=idPrefix+"--title",contentId=idPrefix+"--content",isModalMousedDownRef=Object(react.useRef)(!1),closeModal=function closeModal(event){onClose&&onClose(event)},getContainerProps=index_esm_useFocusJail({containerRef:modalRef,focusOnMount:focusOnMount,restoreFocus:restoreFocus,environment:environment}).getContainerProps;return{getBackdropProps:function getBackdropProps(_temp2){var _ref2=void 0===_temp2?{}:_temp2,onMouseUp=_ref2.onMouseUp,other=Object(objectWithoutPropertiesLoose.a)(_ref2,useModal_excluded);return Object(esm_extends.a)({onMouseUp:Object(index_esm.b)(onMouseUp,(function(event){var isModalContainer="containers.modal"===event.target.getAttribute("data-garden-container-id");!isModalMousedDownRef.current&&isModalContainer&&closeModal(event),isModalMousedDownRef.current=!1})),"data-garden-container-id":"containers.modal","data-garden-container-version":"storybook"},other)},getModalProps:function getModalProps(props){return getContainerProps(function getModalProps(_temp3){var _ref3=void 0===_temp3?{}:_temp3,_ref3$role=_ref3.role,role=void 0===_ref3$role?"dialog":_ref3$role,onKeyDown=_ref3.onKeyDown,onMouseDown=_ref3.onMouseDown,other=Object(objectWithoutPropertiesLoose.a)(_ref3,_excluded2);return Object(esm_extends.a)({role:role,tabIndex:-1,"aria-modal":!0,"aria-labelledby":titleId,"aria-describedby":contentId,onMouseDown:Object(index_esm.b)(onMouseDown,(function(){isModalMousedDownRef.current=!0})),onKeyDown:Object(index_esm.b)(onKeyDown,(function(event){event.keyCode===index_esm.a.ESCAPE&&closeModal(event)}))},other)}(props))},getTitleProps:function getTitleProps(_temp4){var _ref4=void 0===_temp4?{}:_temp4,_ref4$id=_ref4.id,id=void 0===_ref4$id?titleId:_ref4$id,other=Object(objectWithoutPropertiesLoose.a)(_ref4,_excluded3);return Object(esm_extends.a)({id:id},other)},getContentProps:function getContentProps(_temp5){var _ref5=void 0===_temp5?{}:_temp5,_ref5$id=_ref5.id,id=void 0===_ref5$id?contentId:_ref5$id,other=Object(objectWithoutPropertiesLoose.a)(_ref5,_excluded4);return Object(esm_extends.a)({id:id},other)},getCloseProps:function getCloseProps(_temp6){var _ref6=void 0===_temp6?{}:_temp6,onClick=_ref6.onClick,other=Object(objectWithoutPropertiesLoose.a)(_ref6,_excluded5);return Object(esm_extends.a)({"aria-label":"Close modal",onClick:Object(index_esm.b)(onClick,(function(event){closeModal(event)}))},other)},closeModal:closeModal}}var _parameters,ModalContainer_excluded=["children","render"],ModalContainer_ModalContainer=function ModalContainer(_ref){var children=_ref.children,_ref$render=_ref.render,render=void 0===_ref$render?children:_ref$render,options=Object(objectWithoutPropertiesLoose.a)(_ref,ModalContainer_excluded);return react_default.a.createElement(react_default.a.Fragment,null,render(useModal(options)))};ModalContainer_ModalContainer.propTypes={children:prop_types_default.a.func,render:prop_types_default.a.func,onClose:prop_types_default.a.func,modalRef:prop_types_default.a.any.isRequired,id:prop_types_default.a.string,focusOnMount:prop_types_default.a.bool,restoreFocus:prop_types_default.a.bool,environment:prop_types_default.a.any};try{ModalContainer_ModalContainer.displayName="ModalContainer",ModalContainer_ModalContainer.__docgenInfo={description:"",displayName:"ModalContainer",props:{render:{defaultValue:null,description:"A render prop function",name:"render",required:!1,type:{name:"((options: IUseModalReturnValue) => ReactNode)"}},children:{defaultValue:null,description:"A children render prop function",name:"children",required:!1,type:{name:"(((options: IUseModalReturnValue) => ReactNode) & (boolean | ReactChild | ReactFragment | ReactPortal | null))"}},onClose:{defaultValue:null,description:"A callback when a close action has been completed",name:"onClose",required:!1,type:{name:"((event: KeyboardEvent | MouseEvent) => void)"}},modalRef:{defaultValue:null,description:"A ref pointing to a DOM element which contains the modal content",name:"modalRef",required:!0,type:{name:"RefObject<HTMLElement>"}},id:{defaultValue:null,description:"An ID that is applied to modal elements",name:"id",required:!1,type:{name:"string"}},focusOnMount:{defaultValue:null,description:"Determines if the modal's focus jail container should focus on mount",name:"focusOnMount",required:!1,type:{name:"boolean"}},restoreFocus:{defaultValue:null,description:"Determines whether to return keyboard focus to the element that triggered the modal",name:"restoreFocus",required:!1,type:{name:"boolean"}},environment:{defaultValue:null,description:"The environment where the focus jail is rendered",name:"environment",required:!1,type:{name:"Document"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/modal/src/ModalContainer.tsx#ModalContainer"]={docgenInfo:ModalContainer_ModalContainer.__docgenInfo,name:"ModalContainer",path:"packages/modal/src/ModalContainer.tsx#ModalContainer"})}catch(__react_docgen_typescript_loader_error){}var modal_stories_Container=function Container(){var _useState=Object(react.useState)(!1),isModalVisible=_useState[0],setModalVisibility=_useState[1],modalRef=Object(react.useRef)(null);return react_default.a.createElement("div",{style:{height:"60vh",display:"flex",alignItems:"center"}},react_default.a.createElement("button",{onClick:function onClick(){return setModalVisibility(!isModalVisible)}},"Open Modal"),react_default.a.createElement(ModalContainer_ModalContainer,{modalRef:modalRef,onClose:function onClose(){return setModalVisibility(!1)}},(function(_ref){var getBackdropProps=_ref.getBackdropProps,getModalProps=_ref.getModalProps,getTitleProps=_ref.getTitleProps,getContentProps=_ref.getContentProps,getCloseProps=_ref.getCloseProps;return isModalVisible&&react_default.a.createElement("div",getBackdropProps({style:{background:"rgba(0,0,0,0.2)",position:"fixed",top:"0",right:"0",bottom:"0",left:"0",display:"flex",justifyContent:"center",alignItems:"center"}}),react_default.a.createElement("div",getModalProps({ref:modalRef,style:{padding:"20px",background:"#fff",minWidth:"500px",minHeight:"400px",position:"relative"}}),react_default.a.createElement("h1",getTitleProps(),"Example header"),react_default.a.createElement("section",getContentProps(),react_default.a.createElement("p",null,"Modal contents"),react_default.a.createElement("input",{placeholder:"focusable content"}),react_default.a.createElement("button",null,"Submit")),react_default.a.createElement("button",getCloseProps({"aria-label":"Schließen Sie Modal",style:{position:"absolute",top:"20px",right:"20px",cursor:"pointer"}}),"X")))})))},modal_stories_Hook=function Hook(_ref2){var restoreFocus=_ref2.restoreFocus,_useState2=Object(react.useState)(!1),isModalVisible=_useState2[0],setModalVisibility=_useState2[1],modalRef=Object(react.useRef)(null),_useModal=useModal({onClose:function onClose(){return setModalVisibility(!1)},modalRef:modalRef,restoreFocus:restoreFocus,environment:window.document}),getBackdropProps=_useModal.getBackdropProps,getModalProps=_useModal.getModalProps,getTitleProps=_useModal.getTitleProps,getContentProps=_useModal.getContentProps,getCloseProps=_useModal.getCloseProps;return react_default.a.createElement("div",{style:{height:"60vh",display:"flex",alignItems:"center"}},react_default.a.createElement("button",{onClick:function onClick(){return setModalVisibility(!isModalVisible)}},"Open Modal"),isModalVisible&&react_default.a.createElement("div",getBackdropProps({style:{background:"rgba(0,0,0,0.2)",position:"fixed",top:"0",right:"0",bottom:"0",left:"0",display:"flex",justifyContent:"center",alignItems:"center"}}),react_default.a.createElement("div",getModalProps({ref:modalRef,style:{padding:"20px",background:"#fff",minWidth:"500px",minHeight:"400px",position:"relative"}}),react_default.a.createElement("h1",getTitleProps(),"Example header"),react_default.a.createElement("section",getContentProps(),react_default.a.createElement("p",null,"Modal contents"),react_default.a.createElement("input",{placeholder:"focusable content"}),react_default.a.createElement("button",null,"Submit")),react_default.a.createElement("button",getCloseProps({"aria-label":"Schließen Sie Modal",style:{position:"absolute",top:"20px",right:"20px",cursor:"pointer"}}),"X"))))};modal_stories_Container.storyName="ModalContainer",modal_stories_Hook.storyName="useModal",modal_stories_Hook.args={restoreFocus:!0},modal_stories_Hook.parameters={docs:{description:{story:"The `useModal` hook implements the [modal pattern](https://www.w3.org/TR/wai-aria-practices-1.1/#dialog_modal) and can be used to build a modal component."}}};__webpack_exports__.default={title:"Modal Container",component:ModalContainer_ModalContainer,parameters:(_parameters={storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React, { useState, useRef } from 'react';\\nimport { ModalContainer, useModal } from './src';\\n\\nexport const Container = () => {\\n  const [isModalVisible, setModalVisibility] = useState(false);\\n  const modalRef = useRef(null);\\n\\n  return (\\n    <div style={{ height: '60vh', display: 'flex', alignItems: 'center' }}>\\n      <button onClick={() => setModalVisibility(!isModalVisible)}>Open Modal</button>\\n      <ModalContainer modalRef={modalRef} onClose={() => setModalVisibility(false)}>\\n        {({ getBackdropProps, getModalProps, getTitleProps, getContentProps, getCloseProps }) => {\\n          return (\\n            isModalVisible && (\\n              <div\\n                {...getBackdropProps({\\n                  style: {\\n                    background: 'rgba(0,0,0,0.2)',\\n                    position: 'fixed',\\n                    top: '0',\\n                    right: '0',\\n                    bottom: '0',\\n                    left: '0',\\n                    display: 'flex',\\n                    justifyContent: 'center',\\n                    alignItems: 'center'\\n                  }\\n                })}\\n              >\\n                <div\\n                  {...getModalProps({\\n                    ref: modalRef,\\n                    style: {\\n                      padding: '20px',\\n                      background: '#fff',\\n                      minWidth: '500px',\\n                      minHeight: '400px',\\n                      position: 'relative'\\n                    }\\n                  })}\\n                >\\n                  <h1 {...getTitleProps()}>Example header</h1>\\n                  <section {...getContentProps()}>\\n                    <p>Modal contents</p>\\n                    <input placeholder=\\\"focusable content\\\" />\\n                    <button>Submit</button>\\n                  </section>\\n                  <button\\n                    {...(getCloseProps({\\n                      'aria-label': 'Schließen Sie Modal',\\n                      style: {\\n                        position: 'absolute',\\n                        top: '20px',\\n                        right: '20px',\\n                        cursor: 'pointer'\\n                      }\\n                    }) as any)}\\n                  >\\n                    X\\n                  </button>\\n                </div>\\n              </div>\\n            )\\n          );\\n        }}\\n      </ModalContainer>\\n    </div>\\n  );\\n};\\n\\nexport const Hook = ({ restoreFocus }) => {\\n  const [isModalVisible, setModalVisibility] = useState(false);\\n  const modalRef = useRef(null);\\n  const { getBackdropProps, getModalProps, getTitleProps, getContentProps, getCloseProps } =\\n    useModal({\\n      onClose: () => setModalVisibility(false),\\n      modalRef,\\n      restoreFocus,\\n      environment: window.document\\n    });\\n\\n  return (\\n    <div style={{ height: '60vh', display: 'flex', alignItems: 'center' }}>\\n      <button onClick={() => setModalVisibility(!isModalVisible)}>Open Modal</button>\\n      {isModalVisible && (\\n        <div\\n          {...getBackdropProps({\\n            style: {\\n              background: 'rgba(0,0,0,0.2)',\\n              position: 'fixed',\\n              top: '0',\\n              right: '0',\\n              bottom: '0',\\n              left: '0',\\n              display: 'flex',\\n              justifyContent: 'center',\\n              alignItems: 'center'\\n            }\\n          })}\\n        >\\n          <div\\n            {...getModalProps({\\n              ref: modalRef,\\n              style: {\\n                padding: '20px',\\n                background: '#fff',\\n                minWidth: '500px',\\n                minHeight: '400px',\\n                position: 'relative'\\n              }\\n            })}\\n          >\\n            <h1 {...getTitleProps()}>Example header</h1>\\n            <section {...getContentProps()}>\\n              <p>Modal contents</p>\\n              <input placeholder=\\\"focusable content\\\" />\\n              <button>Submit</button>\\n            </section>\\n            <button\\n              {...(getCloseProps({\\n                'aria-label': 'Schließen Sie Modal',\\n                style: { position: 'absolute', top: '20px', right: '20px', cursor: 'pointer' }\\n              }) as any)}\\n            >\\n              X\\n            </button>\\n          </div>\\n        </div>\\n      )}\\n    </div>\\n  );\\n};\\n\\nContainer.storyName = 'ModalContainer';\\n\\nHook.storyName = 'useModal';\\n\\nHook.args = {\\n  restoreFocus: true\\n};\\n\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`useModal\\\\` hook implements the [modal pattern](https://www.w3.org/TR/wai-aria-practices-1.1/#dialog_modal) and can be used to build a modal component.`\\n    }\\n  }\\n};\\n\\nexport default {\\n  title: 'Modal Container',\\n  component: ModalContainer,\\n  parameters: {\\n    layout: 'centered',\\n    componentSubtitle: `A container component which wraps the useModal.`\\n  }\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Container\":{\"startLoc\":{\"col\":25,\"line\":11},\"endLoc\":{\"col\":1,\"line\":76},\"startBody\":{\"col\":25,\"line\":11},\"endBody\":{\"col\":1,\"line\":76}},\"Hook\":{\"startLoc\":{\"col\":20,\"line\":78},\"endLoc\":{\"col\":1,\"line\":139},\"startBody\":{\"col\":20,\"line\":78},\"endBody\":{\"col\":1,\"line\":139}}};\n    \n/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React, { useState, useRef } from 'react';\nimport { ModalContainer, useModal } from './src';\n\nexport const Container = () => {\n  const [isModalVisible, setModalVisibility] = useState(false);\n  const modalRef = useRef(null);\n\n  return (\n    <div style={{ height: '60vh', display: 'flex', alignItems: 'center' }}>\n      <button onClick={() => setModalVisibility(!isModalVisible)}>Open Modal</button>\n      <ModalContainer modalRef={modalRef} onClose={() => setModalVisibility(false)}>\n        {({ getBackdropProps, getModalProps, getTitleProps, getContentProps, getCloseProps }) => {\n          return (\n            isModalVisible && (\n              <div\n                {...getBackdropProps({\n                  style: {\n                    background: 'rgba(0,0,0,0.2)',\n                    position: 'fixed',\n                    top: '0',\n                    right: '0',\n                    bottom: '0',\n                    left: '0',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center'\n                  }\n                })}\n              >\n                <div\n                  {...getModalProps({\n                    ref: modalRef,\n                    style: {\n                      padding: '20px',\n                      background: '#fff',\n                      minWidth: '500px',\n                      minHeight: '400px',\n                      position: 'relative'\n                    }\n                  })}\n                >\n                  <h1 {...getTitleProps()}>Example header</h1>\n                  <section {...getContentProps()}>\n                    <p>Modal contents</p>\n                    <input placeholder=\"focusable content\" />\n                    <button>Submit</button>\n                  </section>\n                  <button\n                    {...(getCloseProps({\n                      'aria-label': 'Schließen Sie Modal',\n                      style: {\n                        position: 'absolute',\n                        top: '20px',\n                        right: '20px',\n                        cursor: 'pointer'\n                      }\n                    }) as any)}\n                  >\n                    X\n                  </button>\n                </div>\n              </div>\n            )\n          );\n        }}\n      </ModalContainer>\n    </div>\n  );\n};;\n\nexport const Hook = ({ restoreFocus }) => {\n  const [isModalVisible, setModalVisibility] = useState(false);\n  const modalRef = useRef(null);\n  const { getBackdropProps, getModalProps, getTitleProps, getContentProps, getCloseProps } =\n    useModal({\n      onClose: () => setModalVisibility(false),\n      modalRef,\n      restoreFocus,\n      environment: window.document\n    });\n\n  return (\n    <div style={{ height: '60vh', display: 'flex', alignItems: 'center' }}>\n      <button onClick={() => setModalVisibility(!isModalVisible)}>Open Modal</button>\n      {isModalVisible && (\n        <div\n          {...getBackdropProps({\n            style: {\n              background: 'rgba(0,0,0,0.2)',\n              position: 'fixed',\n              top: '0',\n              right: '0',\n              bottom: '0',\n              left: '0',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center'\n            }\n          })}\n        >\n          <div\n            {...getModalProps({\n              ref: modalRef,\n              style: {\n                padding: '20px',\n                background: '#fff',\n                minWidth: '500px',\n                minHeight: '400px',\n                position: 'relative'\n              }\n            })}\n          >\n            <h1 {...getTitleProps()}>Example header</h1>\n            <section {...getContentProps()}>\n              <p>Modal contents</p>\n              <input placeholder=\"focusable content\" />\n              <button>Submit</button>\n            </section>\n            <button\n              {...(getCloseProps({\n                'aria-label': 'Schließen Sie Modal',\n                style: { position: 'absolute', top: '20px', right: '20px', cursor: 'pointer' }\n              }) as any)}\n            >\n              X\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nContainer.storyName = 'ModalContainer';\n\nHook.storyName = 'useModal';\n\nHook.args = {\n  restoreFocus: true\n};\n\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`useModal\\` hook implements the [modal pattern](https://www.w3.org/TR/wai-aria-practices-1.1/#dialog_modal) and can be used to build a modal component.`\n    }\n  }\n};\n\nexport default {\n  title: 'Modal Container',\n  component: ModalContainer,\n  parameters: {\"storySource\":{\"source\":\"/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React, { useState, useRef } from 'react';\\nimport { ModalContainer, useModal } from './src';\\n\\nexport const Container = () => {\\n  const [isModalVisible, setModalVisibility] = useState(false);\\n  const modalRef = useRef(null);\\n\\n  return (\\n    <div style={{ height: '60vh', display: 'flex', alignItems: 'center' }}>\\n      <button onClick={() => setModalVisibility(!isModalVisible)}>Open Modal</button>\\n      <ModalContainer modalRef={modalRef} onClose={() => setModalVisibility(false)}>\\n        {({ getBackdropProps, getModalProps, getTitleProps, getContentProps, getCloseProps }) => {\\n          return (\\n            isModalVisible && (\\n              <div\\n                {...getBackdropProps({\\n                  style: {\\n                    background: 'rgba(0,0,0,0.2)',\\n                    position: 'fixed',\\n                    top: '0',\\n                    right: '0',\\n                    bottom: '0',\\n                    left: '0',\\n                    display: 'flex',\\n                    justifyContent: 'center',\\n                    alignItems: 'center'\\n                  }\\n                })}\\n              >\\n                <div\\n                  {...getModalProps({\\n                    ref: modalRef,\\n                    style: {\\n                      padding: '20px',\\n                      background: '#fff',\\n                      minWidth: '500px',\\n                      minHeight: '400px',\\n                      position: 'relative'\\n                    }\\n                  })}\\n                >\\n                  <h1 {...getTitleProps()}>Example header</h1>\\n                  <section {...getContentProps()}>\\n                    <p>Modal contents</p>\\n                    <input placeholder=\\\"focusable content\\\" />\\n                    <button>Submit</button>\\n                  </section>\\n                  <button\\n                    {...(getCloseProps({\\n                      'aria-label': 'Schließen Sie Modal',\\n                      style: {\\n                        position: 'absolute',\\n                        top: '20px',\\n                        right: '20px',\\n                        cursor: 'pointer'\\n                      }\\n                    }) as any)}\\n                  >\\n                    X\\n                  </button>\\n                </div>\\n              </div>\\n            )\\n          );\\n        }}\\n      </ModalContainer>\\n    </div>\\n  );\\n};\\n\\nexport const Hook = ({ restoreFocus }) => {\\n  const [isModalVisible, setModalVisibility] = useState(false);\\n  const modalRef = useRef(null);\\n  const { getBackdropProps, getModalProps, getTitleProps, getContentProps, getCloseProps } =\\n    useModal({\\n      onClose: () => setModalVisibility(false),\\n      modalRef,\\n      restoreFocus,\\n      environment: window.document\\n    });\\n\\n  return (\\n    <div style={{ height: '60vh', display: 'flex', alignItems: 'center' }}>\\n      <button onClick={() => setModalVisibility(!isModalVisible)}>Open Modal</button>\\n      {isModalVisible && (\\n        <div\\n          {...getBackdropProps({\\n            style: {\\n              background: 'rgba(0,0,0,0.2)',\\n              position: 'fixed',\\n              top: '0',\\n              right: '0',\\n              bottom: '0',\\n              left: '0',\\n              display: 'flex',\\n              justifyContent: 'center',\\n              alignItems: 'center'\\n            }\\n          })}\\n        >\\n          <div\\n            {...getModalProps({\\n              ref: modalRef,\\n              style: {\\n                padding: '20px',\\n                background: '#fff',\\n                minWidth: '500px',\\n                minHeight: '400px',\\n                position: 'relative'\\n              }\\n            })}\\n          >\\n            <h1 {...getTitleProps()}>Example header</h1>\\n            <section {...getContentProps()}>\\n              <p>Modal contents</p>\\n              <input placeholder=\\\"focusable content\\\" />\\n              <button>Submit</button>\\n            </section>\\n            <button\\n              {...(getCloseProps({\\n                'aria-label': 'Schließen Sie Modal',\\n                style: { position: 'absolute', top: '20px', right: '20px', cursor: 'pointer' }\\n              }) as any)}\\n            >\\n              X\\n            </button>\\n          </div>\\n        </div>\\n      )}\\n    </div>\\n  );\\n};\\n\\nContainer.storyName = 'ModalContainer';\\n\\nHook.storyName = 'useModal';\\n\\nHook.args = {\\n  restoreFocus: true\\n};\\n\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`useModal\\\\` hook implements the [modal pattern](https://www.w3.org/TR/wai-aria-practices-1.1/#dialog_modal) and can be used to build a modal component.`\\n    }\\n  }\\n};\\n\\nexport default {\\n  title: 'Modal Container',\\n  component: ModalContainer,\\n  parameters: {\\n    layout: 'centered',\\n    componentSubtitle: `A container component which wraps the useModal.`\\n  }\\n};\\n\",\"locationsMap\":{\"container\":{\"startLoc\":{\"col\":25,\"line\":11},\"endLoc\":{\"col\":1,\"line\":76},\"startBody\":{\"col\":25,\"line\":11},\"endBody\":{\"col\":1,\"line\":76}},\"hook\":{\"startLoc\":{\"col\":20,\"line\":78},\"endLoc\":{\"col\":1,\"line\":139},\"startBody\":{\"col\":20,\"line\":78},\"endBody\":{\"col\":1,\"line\":139}}}},\n    layout: 'centered',\n    componentSubtitle: `A container component which wraps the useModal.`\n  },};\n",locationsMap:{container:{startLoc:{col:25,line:19},endLoc:{col:1,line:84},startBody:{col:25,line:19},endBody:{col:1,line:84}},hook:{startLoc:{col:20,line:86},endLoc:{col:1,line:147},startBody:{col:20,line:86},endBody:{col:1,line:147}}}}},_parameters.storySource={source:"/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React, { useState, useRef } from 'react';\nimport { ModalContainer, useModal } from './src';\n\nexport const Container = () => {\n  const [isModalVisible, setModalVisibility] = useState(false);\n  const modalRef = useRef(null);\n\n  return (\n    <div style={{ height: '60vh', display: 'flex', alignItems: 'center' }}>\n      <button onClick={() => setModalVisibility(!isModalVisible)}>Open Modal</button>\n      <ModalContainer modalRef={modalRef} onClose={() => setModalVisibility(false)}>\n        {({ getBackdropProps, getModalProps, getTitleProps, getContentProps, getCloseProps }) => {\n          return (\n            isModalVisible && (\n              <div\n                {...getBackdropProps({\n                  style: {\n                    background: 'rgba(0,0,0,0.2)',\n                    position: 'fixed',\n                    top: '0',\n                    right: '0',\n                    bottom: '0',\n                    left: '0',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center'\n                  }\n                })}\n              >\n                <div\n                  {...getModalProps({\n                    ref: modalRef,\n                    style: {\n                      padding: '20px',\n                      background: '#fff',\n                      minWidth: '500px',\n                      minHeight: '400px',\n                      position: 'relative'\n                    }\n                  })}\n                >\n                  <h1 {...getTitleProps()}>Example header</h1>\n                  <section {...getContentProps()}>\n                    <p>Modal contents</p>\n                    <input placeholder=\"focusable content\" />\n                    <button>Submit</button>\n                  </section>\n                  <button\n                    {...(getCloseProps({\n                      'aria-label': 'Schließen Sie Modal',\n                      style: {\n                        position: 'absolute',\n                        top: '20px',\n                        right: '20px',\n                        cursor: 'pointer'\n                      }\n                    }) as any)}\n                  >\n                    X\n                  </button>\n                </div>\n              </div>\n            )\n          );\n        }}\n      </ModalContainer>\n    </div>\n  );\n};\n\nexport const Hook = ({ restoreFocus }) => {\n  const [isModalVisible, setModalVisibility] = useState(false);\n  const modalRef = useRef(null);\n  const { getBackdropProps, getModalProps, getTitleProps, getContentProps, getCloseProps } =\n    useModal({\n      onClose: () => setModalVisibility(false),\n      modalRef,\n      restoreFocus,\n      environment: window.document\n    });\n\n  return (\n    <div style={{ height: '60vh', display: 'flex', alignItems: 'center' }}>\n      <button onClick={() => setModalVisibility(!isModalVisible)}>Open Modal</button>\n      {isModalVisible && (\n        <div\n          {...getBackdropProps({\n            style: {\n              background: 'rgba(0,0,0,0.2)',\n              position: 'fixed',\n              top: '0',\n              right: '0',\n              bottom: '0',\n              left: '0',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center'\n            }\n          })}\n        >\n          <div\n            {...getModalProps({\n              ref: modalRef,\n              style: {\n                padding: '20px',\n                background: '#fff',\n                minWidth: '500px',\n                minHeight: '400px',\n                position: 'relative'\n              }\n            })}\n          >\n            <h1 {...getTitleProps()}>Example header</h1>\n            <section {...getContentProps()}>\n              <p>Modal contents</p>\n              <input placeholder=\"focusable content\" />\n              <button>Submit</button>\n            </section>\n            <button\n              {...(getCloseProps({\n                'aria-label': 'Schließen Sie Modal',\n                style: { position: 'absolute', top: '20px', right: '20px', cursor: 'pointer' }\n              }) as any)}\n            >\n              X\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nContainer.storyName = 'ModalContainer';\n\nHook.storyName = 'useModal';\n\nHook.args = {\n  restoreFocus: true\n};\n\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`useModal\\` hook implements the [modal pattern](https://www.w3.org/TR/wai-aria-practices-1.1/#dialog_modal) and can be used to build a modal component.`\n    }\n  }\n};\n\nexport default {\n  title: 'Modal Container',\n  component: ModalContainer,\n  parameters: {\n    layout: 'centered',\n    componentSubtitle: `A container component which wraps the useModal.`\n  }\n};\n",locationsMap:{container:{startLoc:{col:25,line:11},endLoc:{col:1,line:76},startBody:{col:25,line:11},endBody:{col:1,line:76}},hook:{startLoc:{col:20,line:78},endLoc:{col:1,line:139},startBody:{col:20,line:78},endBody:{col:1,line:139}}}},_parameters.layout="centered",_parameters.componentSubtitle="A container component which wraps the useModal.",_parameters)};modal_stories_Container.parameters=Object(esm_extends.a)({storySource:{source:"() => {\n  const [isModalVisible, setModalVisibility] = useState(false);\n  const modalRef = useRef(null);\n\n  return (\n    <div style={{ height: '60vh', display: 'flex', alignItems: 'center' }}>\n      <button onClick={() => setModalVisibility(!isModalVisible)}>Open Modal</button>\n      <ModalContainer modalRef={modalRef} onClose={() => setModalVisibility(false)}>\n        {({ getBackdropProps, getModalProps, getTitleProps, getContentProps, getCloseProps }) => {\n          return (\n            isModalVisible && (\n              <div\n                {...getBackdropProps({\n                  style: {\n                    background: 'rgba(0,0,0,0.2)',\n                    position: 'fixed',\n                    top: '0',\n                    right: '0',\n                    bottom: '0',\n                    left: '0',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center'\n                  }\n                })}\n              >\n                <div\n                  {...getModalProps({\n                    ref: modalRef,\n                    style: {\n                      padding: '20px',\n                      background: '#fff',\n                      minWidth: '500px',\n                      minHeight: '400px',\n                      position: 'relative'\n                    }\n                  })}\n                >\n                  <h1 {...getTitleProps()}>Example header</h1>\n                  <section {...getContentProps()}>\n                    <p>Modal contents</p>\n                    <input placeholder=\"focusable content\" />\n                    <button>Submit</button>\n                  </section>\n                  <button\n                    {...(getCloseProps({\n                      'aria-label': 'Schließen Sie Modal',\n                      style: {\n                        position: 'absolute',\n                        top: '20px',\n                        right: '20px',\n                        cursor: 'pointer'\n                      }\n                    }) as any)}\n                  >\n                    X\n                  </button>\n                </div>\n              </div>\n            )\n          );\n        }}\n      </ModalContainer>\n    </div>\n  );\n}"}},modal_stories_Container.parameters),modal_stories_Hook.parameters=Object(esm_extends.a)({storySource:{source:"({ restoreFocus }) => {\n  const [isModalVisible, setModalVisibility] = useState(false);\n  const modalRef = useRef(null);\n  const { getBackdropProps, getModalProps, getTitleProps, getContentProps, getCloseProps } =\n    useModal({\n      onClose: () => setModalVisibility(false),\n      modalRef,\n      restoreFocus,\n      environment: window.document\n    });\n\n  return (\n    <div style={{ height: '60vh', display: 'flex', alignItems: 'center' }}>\n      <button onClick={() => setModalVisibility(!isModalVisible)}>Open Modal</button>\n      {isModalVisible && (\n        <div\n          {...getBackdropProps({\n            style: {\n              background: 'rgba(0,0,0,0.2)',\n              position: 'fixed',\n              top: '0',\n              right: '0',\n              bottom: '0',\n              left: '0',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center'\n            }\n          })}\n        >\n          <div\n            {...getModalProps({\n              ref: modalRef,\n              style: {\n                padding: '20px',\n                background: '#fff',\n                minWidth: '500px',\n                minHeight: '400px',\n                position: 'relative'\n              }\n            })}\n          >\n            <h1 {...getTitleProps()}>Example header</h1>\n            <section {...getContentProps()}>\n              <p>Modal contents</p>\n              <input placeholder=\"focusable content\" />\n              <button>Submit</button>\n            </section>\n            <button\n              {...(getCloseProps({\n                'aria-label': 'Schließen Sie Modal',\n                style: { position: 'absolute', top: '20px', right: '20px', cursor: 'pointer' }\n              }) as any)}\n            >\n              X\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"}},modal_stories_Hook.parameters);try{modal_stories_Hook.displayName="Hook",modal_stories_Hook.__docgenInfo={description:"",displayName:"Hook",props:{restoreFocus:{defaultValue:null,description:"",name:"restoreFocus",required:!0,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/modal/modal.stories.tsx#Hook"]={docgenInfo:modal_stories_Hook.__docgenInfo,name:"Hook",path:"packages/modal/modal.stories.tsx#Hook"})}catch(__react_docgen_typescript_loader_error){}},2895:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Container",(function(){return tooltip_stories_Container})),__webpack_require__.d(__webpack_exports__,"Hook",(function(){return tooltip_stories_Hook})),__webpack_require__.d(__webpack_exports__,"WithPopper",(function(){return tooltip_stories_WithPopper})),__webpack_require__.d(__webpack_exports__,"FocusableTooltip",(function(){return tooltip_stories_FocusableTooltip}));var esm_extends=__webpack_require__(261),react=__webpack_require__(0),react_default=__webpack_require__.n(react),objectWithoutPropertiesLoose=__webpack_require__(560),prop_types=__webpack_require__(2),prop_types_default=__webpack_require__.n(prop_types),hooks=(__webpack_require__(755),__webpack_require__(1123),__webpack_require__(2935)),index_esm=__webpack_require__(10),_excluded=["tabIndex","onMouseEnter","onMouseLeave","onFocus","onBlur","onKeyDown"],_excluded2=["role","onMouseEnter","onMouseLeave"],useTooltip_useTooltip=function useTooltip(_temp){var openTooltipTimeoutId,closeTooltipTimeoutId,_ref=void 0===_temp?{}:_temp,_ref$delayMillisecond=_ref.delayMilliseconds,delayMilliseconds=void 0===_ref$delayMillisecond?500:_ref$delayMillisecond,id=_ref.id,isVisible=_ref.isVisible,_useState=Object(react.useState)(isVisible),visibility=_useState[0],setVisibility=_useState[1],seed=Object(hooks.a)(),_id=Object(react.useState)(id||seed("tooltip_storybook"))[0],isMounted=Object(react.useRef)(!1),openTooltip=function openTooltip(delayMs){void 0===delayMs&&(delayMs=delayMilliseconds),clearTimeout(closeTooltipTimeoutId);var timerId=setTimeout((function(){isMounted.current&&setVisibility(!0)}),delayMs);openTooltipTimeoutId=Number(timerId)},closeTooltip=function closeTooltip(delayMs){void 0===delayMs&&(delayMs=delayMilliseconds),clearTimeout(openTooltipTimeoutId);var timerId=setTimeout((function(){isMounted.current&&setVisibility(!1)}),delayMs);closeTooltipTimeoutId=Number(timerId)};Object(react.useEffect)((function(){return isMounted.current=!0,function(){isMounted.current=!1}}),[]),Object(react.useEffect)((function(){return function(){clearTimeout(openTooltipTimeoutId),clearTimeout(closeTooltipTimeoutId)}}),[closeTooltipTimeoutId,openTooltipTimeoutId]);return{isVisible:visibility,getTooltipProps:function getTooltipProps(_temp3){var _ref3=void 0===_temp3?{}:_temp3,_ref3$role=_ref3.role,role=void 0===_ref3$role?"tooltip":_ref3$role,onMouseEnter=_ref3.onMouseEnter,onMouseLeave=_ref3.onMouseLeave,other=Object(objectWithoutPropertiesLoose.a)(_ref3,_excluded2);return Object(esm_extends.a)({role:role,onMouseEnter:Object(index_esm.b)(onMouseEnter,(function(){return openTooltip()})),onMouseLeave:Object(index_esm.b)(onMouseLeave,(function(){return closeTooltip()})),"aria-hidden":!visibility,id:_id},other)},getTriggerProps:function getTriggerProps(_temp2){var _ref2=void 0===_temp2?{}:_temp2,_ref2$tabIndex=_ref2.tabIndex,tabIndex=void 0===_ref2$tabIndex?0:_ref2$tabIndex,onMouseEnter=_ref2.onMouseEnter,onMouseLeave=_ref2.onMouseLeave,onFocus=_ref2.onFocus,onBlur=_ref2.onBlur,onKeyDown=_ref2.onKeyDown,other=Object(objectWithoutPropertiesLoose.a)(_ref2,_excluded);return Object(esm_extends.a)({tabIndex:tabIndex,onMouseEnter:Object(index_esm.b)(onMouseEnter,(function(){return openTooltip()})),onMouseLeave:Object(index_esm.b)(onMouseLeave,(function(){return closeTooltip()})),onFocus:Object(index_esm.b)(onFocus,(function(){return openTooltip()})),onBlur:Object(index_esm.b)(onBlur,(function(){return closeTooltip(0)})),onKeyDown:Object(index_esm.b)(onKeyDown,(function(event){event.keyCode===index_esm.a.ESCAPE&&visibility&&closeTooltip(0)})),"aria-describedby":_id,"data-garden-container-id":"containers.tooltip","data-garden-container-version":"storybook"},other)},openTooltip:openTooltip,closeTooltip:closeTooltip}},TooltipContainer_excluded=["children","render"],TooltipContainer_TooltipContainer=function TooltipContainer(_ref){var children=_ref.children,_ref$render=_ref.render,render=void 0===_ref$render?children:_ref$render,options=Object(objectWithoutPropertiesLoose.a)(_ref,TooltipContainer_excluded);return react_default.a.createElement(react_default.a.Fragment,null,render(useTooltip_useTooltip(options)))};TooltipContainer_TooltipContainer.propTypes={children:prop_types_default.a.func,render:prop_types_default.a.func,delayMilliseconds:prop_types_default.a.number,isVisible:prop_types_default.a.bool};try{TooltipContainer_TooltipContainer.displayName="TooltipContainer",TooltipContainer_TooltipContainer.__docgenInfo={description:"",displayName:"TooltipContainer",props:{render:{defaultValue:null,description:"A render prop function which receives tooltip state and prop getters",name:"render",required:!1,type:{name:"((options: IUseTooltipReturnValue) => ReactNode)"}},children:{defaultValue:null,description:"A children render prop function which receives tooltip state and prop getters",name:"children",required:!1,type:{name:"(((options: IUseTooltipReturnValue) => ReactNode) & (boolean | ReactChild | ReactFragment | ReactPortal | null))"}},delayMilliseconds:{defaultValue:null,description:"Milliseconds of delay before open/close of tooltip is initiated",name:"delayMilliseconds",required:!1,type:{name:"number"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},isVisible:{defaultValue:null,description:"Control visibility state of the tooltip",name:"isVisible",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/tooltip/src/TooltipContainer.tsx#TooltipContainer"]={docgenInfo:TooltipContainer_TooltipContainer.__docgenInfo,name:"TooltipContainer",path:"packages/tooltip/src/TooltipContainer.tsx#TooltipContainer"})}catch(__react_docgen_typescript_loader_error){}var _parameters,helpers_esm_extends=__webpack_require__(777),popper=__webpack_require__(1756);var tooltip_stories_Container=function Container(_ref){var delayMilliseconds=_ref.delayMilliseconds,tooltipRef=Object(react.useRef)(null);return react_default.a.createElement(TooltipContainer_TooltipContainer,{delayMilliseconds:delayMilliseconds},(function(_ref2){var isVisible=_ref2.isVisible,getTooltipProps=_ref2.getTooltipProps,getTriggerProps=_ref2.getTriggerProps,styles={visibility:isVisible?"visible":"hidden",background:"#1f73b7",padding:"10px",margin:"6px 0",color:"#fff"};return react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement("div",getTooltipProps({ref:tooltipRef,style:styles}),"Tooltip"),react_default.a.createElement("button",getTriggerProps(),"Trigger"))}))},tooltip_stories_Hook=function Hook(_ref3){var delayMilliseconds=_ref3.delayMilliseconds,tooltipRef=Object(react.useRef)(null),_useTooltip=useTooltip_useTooltip({delayMilliseconds:delayMilliseconds}),isVisible=_useTooltip.isVisible,getTooltipProps=_useTooltip.getTooltipProps,getTriggerProps=_useTooltip.getTriggerProps,styles={visibility:isVisible?"visible":"hidden",background:"#1f73b7",padding:"10px",margin:"6px 0",color:"#fff"};return react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement("button",getTriggerProps(),"Trigger"),react_default.a.createElement("div",getTooltipProps({ref:tooltipRef,style:styles}),"Tooltip"))},tooltip_stories_WithPopper=function WithPopper(_ref4){var delayMilliseconds=_ref4.delayMilliseconds,tooltipRef=Object(react.useRef)(null),triggerRef=Object(react.useRef)(null),_useTooltip2=useTooltip_useTooltip({delayMilliseconds:delayMilliseconds}),isVisible=_useTooltip2.isVisible,getTooltipProps=_useTooltip2.getTooltipProps,getTriggerProps=_useTooltip2.getTriggerProps,style=function usePopper(options){var props=Object(helpers_esm_extends.a)({},{placement:"top",eventsEnabled:!0,positionFixed:!1},options),referenceRef=props.referenceRef,popperRef=props.popperRef,modifiers=props.modifiers,popperPlacement=props.placement,eventsEnabled=props.eventsEnabled,positionFixed=props.positionFixed,_useState=Object(react.useState)((function(){return{data:void 0,placement:void 0}})),state=_useState[0],setState=_useState[1],popperInstanceRef=Object(react.useRef)();return Object(react.useEffect)((function(){return referenceRef.current&&popperRef.current&&(popperInstanceRef.current=new popper.a(referenceRef.current,popperRef.current,{placement:popperPlacement,eventsEnabled:eventsEnabled,positionFixed:positionFixed,modifiers:Object(helpers_esm_extends.a)({},modifiers,{applyStyle:{enabled:!1},updateStateModifier:{enabled:!0,order:900,fn:function fn(data){var placement=data.placement;return setState({data:data,placement:placement}),data}}})})),function(){popperInstanceRef.current&&(popperInstanceRef.current.destroy(),popperInstanceRef.current=null)}}),[popperRef,referenceRef,modifiers,popperPlacement,positionFixed,eventsEnabled]),{style:popperRef.current&&state.data?Object(helpers_esm_extends.a)({},state.data.styles):{position:"absolute",top:0,left:0,opacity:0,pointerEvents:"none"},placement:state.placement,outOfBoundaries:state.data&&state.data.hide,scheduleUpdate:popperInstanceRef.current&&popperInstanceRef.current.scheduleUpdate}}({referenceRef:triggerRef,popperRef:tooltipRef}).style,styles=Object(esm_extends.a)({},style,{visibility:isVisible?"visible":"hidden",background:"#1f73b7",padding:"10px",margin:"6px 0",color:"#fff"});return react_default.a.createElement("div",{style:{display:"flex",alignItems:"center",height:"150px"}},react_default.a.createElement("div",getTooltipProps({ref:tooltipRef,style:styles}),"Tooltip"),react_default.a.createElement("button",getTriggerProps({ref:triggerRef}),"Trigger"))},tooltip_stories_FocusableTooltip=function FocusableTooltip(_ref5){var delayMilliseconds=_ref5.delayMilliseconds,tooltipRef=Object(react.useRef)(null),_useTooltip3=useTooltip_useTooltip({delayMilliseconds:delayMilliseconds}),isVisible=_useTooltip3.isVisible,getTooltipProps=_useTooltip3.getTooltipProps,getTriggerProps=_useTooltip3.getTriggerProps,openTooltip=_useTooltip3.openTooltip,closeTooltip=_useTooltip3.closeTooltip,styles={visibility:isVisible?"visible":"hidden",background:"#000",padding:"10px",margin:"6px 0",color:"#fff"};return react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement("button",getTriggerProps(),"Trigger"),react_default.a.createElement("div",getTooltipProps({ref:tooltipRef,style:styles,onFocus:function onFocus(){return openTooltip()},onBlur:function onBlur(){return closeTooltip(0)}}),"Focusable tooltip, tab to this ",react_default.a.createElement("button",null,"button")))};tooltip_stories_Container.storyName="TooltipContainer",tooltip_stories_Container.args={delayMilliseconds:500},tooltip_stories_Hook.storyName="useTooltip",tooltip_stories_Hook.args={delayMilliseconds:500},tooltip_stories_Hook.parameters={docs:{description:{story:"The `useTooltip` hook implements the [tooltip pattern](https://www.w3.org/TR/wai-aria-practices-1.1/#tooltip) and can be used to build a tooltip component."}}},tooltip_stories_WithPopper.storyName="positioning via Popper.js",tooltip_stories_WithPopper.args={delayMilliseconds:500},tooltip_stories_WithPopper.parameters={docs:{description:{story:"This story demonstrate the `useTooltip` hook in combination with Popper.js for positioning. And it's broken"}}},tooltip_stories_FocusableTooltip.storyName="with focusable tooltip",tooltip_stories_FocusableTooltip.args={delayMilliseconds:500},tooltip_stories_FocusableTooltip.parameters={docs:{description:{story:"This story demonstrates focusable content within the tooltip."}}};__webpack_exports__.default={title:"Tooltip Container",component:TooltipContainer_TooltipContainer,parameters:(_parameters={storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React, { useRef } from 'react';\\nimport { TooltipContainer, useTooltip } from './src';\\nimport { usePopper } from '../../utils/usePopper';\\n\\nexport const Container = ({ delayMilliseconds }) => {\\n  const tooltipRef = useRef(null);\\n\\n  return (\\n    <TooltipContainer delayMilliseconds={delayMilliseconds}>\\n      {({ isVisible, getTooltipProps, getTriggerProps }) => {\\n        const styles: React.CSSProperties = {\\n          visibility: isVisible ? 'visible' : 'hidden',\\n          background: '#1f73b7',\\n          padding: '10px',\\n          margin: '6px 0',\\n          color: '#fff'\\n        };\\n\\n        return (\\n          <>\\n            <div\\n              {...getTooltipProps({\\n                ref: tooltipRef,\\n                style: styles\\n              })}\\n            >\\n              Tooltip\\n            </div>\\n            <button {...getTriggerProps()}>Trigger</button>\\n          </>\\n        );\\n      }}\\n    </TooltipContainer>\\n  );\\n};\\n\\nexport const Hook = ({ delayMilliseconds }) => {\\n  const tooltipRef = useRef(null);\\n\\n  const { isVisible, getTooltipProps, getTriggerProps } = useTooltip({\\n    delayMilliseconds\\n  });\\n\\n  const styles: React.CSSProperties = {\\n    visibility: isVisible ? 'visible' : 'hidden',\\n    background: '#1f73b7',\\n    padding: '10px',\\n    margin: '6px 0',\\n    color: '#fff'\\n  };\\n\\n  return (\\n    <>\\n      <button {...getTriggerProps()}>Trigger</button>\\n      <div\\n        {...getTooltipProps({\\n          ref: tooltipRef,\\n          style: styles\\n        })}\\n      >\\n        Tooltip\\n      </div>\\n    </>\\n  );\\n};\\n\\nexport const WithPopper = ({ delayMilliseconds }) => {\\n  const tooltipRef = useRef(null);\\n  const triggerRef = useRef(null);\\n\\n  const { isVisible, getTooltipProps, getTriggerProps } = useTooltip({\\n    delayMilliseconds\\n  });\\n  const { style } = usePopper({ referenceRef: triggerRef, popperRef: tooltipRef });\\n\\n  const styles: CSSStyleDeclaration | React.CSSProperties = {\\n    ...style,\\n    visibility: isVisible ? 'visible' : 'hidden',\\n    background: '#1f73b7',\\n    padding: '10px',\\n    margin: '6px 0',\\n    color: '#fff'\\n  };\\n\\n  return (\\n    <div style={{ display: 'flex', alignItems: 'center', height: '150px' }}>\\n      <div {...getTooltipProps({ ref: tooltipRef, style: styles })}>Tooltip</div>\\n      <button {...(getTriggerProps({ ref: triggerRef }) as any)}>Trigger</button>\\n    </div>\\n  );\\n};\\n\\nexport const FocusableTooltip = ({ delayMilliseconds }) => {\\n  const tooltipRef = useRef(null);\\n\\n  const { isVisible, getTooltipProps, getTriggerProps, openTooltip, closeTooltip } = useTooltip({\\n    delayMilliseconds\\n  });\\n\\n  const styles: React.CSSProperties = {\\n    visibility: isVisible ? 'visible' : 'hidden',\\n    background: '#000',\\n    padding: '10px',\\n    margin: '6px 0',\\n    color: '#fff'\\n  };\\n\\n  return (\\n    <>\\n      <button {...getTriggerProps()}>Trigger</button>\\n      <div\\n        {...getTooltipProps({\\n          ref: tooltipRef,\\n          style: styles,\\n          onFocus: () => openTooltip(),\\n          onBlur: () => closeTooltip(0)\\n        })}\\n      >\\n        Focusable tooltip, tab to this <button>button</button>\\n      </div>\\n    </>\\n  );\\n};\\n\\nContainer.storyName = 'TooltipContainer';\\n\\nContainer.args = {\\n  delayMilliseconds: 500\\n};\\n\\nHook.storyName = 'useTooltip';\\n\\nHook.args = {\\n  delayMilliseconds: 500\\n};\\n\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`useTooltip\\\\` hook implements the [tooltip pattern](https://www.w3.org/TR/wai-aria-practices-1.1/#tooltip) and can be used to build a tooltip component.`\\n    }\\n  }\\n};\\n\\nWithPopper.storyName = 'positioning via Popper.js';\\n\\nWithPopper.args = {\\n  delayMilliseconds: 500\\n};\\n\\nWithPopper.parameters = {\\n  docs: {\\n    description: {\\n      story: `This story demonstrate the \\\\`useTooltip\\\\` hook in combination with Popper.js for positioning. And it's broken`\\n    }\\n  }\\n};\\n\\nFocusableTooltip.storyName = 'with focusable tooltip';\\n\\nFocusableTooltip.args = {\\n  delayMilliseconds: 500\\n};\\n\\nFocusableTooltip.parameters = {\\n  docs: { description: { story: `This story demonstrates focusable content within the tooltip.` } }\\n};\\n\\nexport default {\\n  title: 'Tooltip Container',\\n  component: TooltipContainer,\\n  parameters: {\\n    layout: 'centered',\\n    componentSubtitle: `A container component which wraps the useTooltip hook.`\\n  }\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Container\":{\"startLoc\":{\"col\":25,\"line\":12},\"endLoc\":{\"col\":1,\"line\":42},\"startBody\":{\"col\":25,\"line\":12},\"endBody\":{\"col\":1,\"line\":42}},\"Hook\":{\"startLoc\":{\"col\":20,\"line\":44},\"endLoc\":{\"col\":1,\"line\":72},\"startBody\":{\"col\":20,\"line\":44},\"endBody\":{\"col\":1,\"line\":72}},\"WithPopper\":{\"startLoc\":{\"col\":26,\"line\":74},\"endLoc\":{\"col\":1,\"line\":98},\"startBody\":{\"col\":26,\"line\":74},\"endBody\":{\"col\":1,\"line\":98}},\"FocusableTooltip\":{\"startLoc\":{\"col\":32,\"line\":100},\"endLoc\":{\"col\":1,\"line\":130},\"startBody\":{\"col\":32,\"line\":100},\"endBody\":{\"col\":1,\"line\":130}}};\n    \n/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React, { useRef } from 'react';\nimport { TooltipContainer, useTooltip } from './src';\nimport { usePopper } from '../../utils/usePopper';\n\nexport const Container = ({ delayMilliseconds }) => {\n  const tooltipRef = useRef(null);\n\n  return (\n    <TooltipContainer delayMilliseconds={delayMilliseconds}>\n      {({ isVisible, getTooltipProps, getTriggerProps }) => {\n        const styles: React.CSSProperties = {\n          visibility: isVisible ? 'visible' : 'hidden',\n          background: '#1f73b7',\n          padding: '10px',\n          margin: '6px 0',\n          color: '#fff'\n        };\n\n        return (\n          <>\n            <div\n              {...getTooltipProps({\n                ref: tooltipRef,\n                style: styles\n              })}\n            >\n              Tooltip\n            </div>\n            <button {...getTriggerProps()}>Trigger</button>\n          </>\n        );\n      }}\n    </TooltipContainer>\n  );\n};;\n\nexport const Hook = ({ delayMilliseconds }) => {\n  const tooltipRef = useRef(null);\n\n  const { isVisible, getTooltipProps, getTriggerProps } = useTooltip({\n    delayMilliseconds\n  });\n\n  const styles: React.CSSProperties = {\n    visibility: isVisible ? 'visible' : 'hidden',\n    background: '#1f73b7',\n    padding: '10px',\n    margin: '6px 0',\n    color: '#fff'\n  };\n\n  return (\n    <>\n      <button {...getTriggerProps()}>Trigger</button>\n      <div\n        {...getTooltipProps({\n          ref: tooltipRef,\n          style: styles\n        })}\n      >\n        Tooltip\n      </div>\n    </>\n  );\n};;\n\nexport const WithPopper = ({ delayMilliseconds }) => {\n  const tooltipRef = useRef(null);\n  const triggerRef = useRef(null);\n\n  const { isVisible, getTooltipProps, getTriggerProps } = useTooltip({\n    delayMilliseconds\n  });\n  const { style } = usePopper({ referenceRef: triggerRef, popperRef: tooltipRef });\n\n  const styles: CSSStyleDeclaration | React.CSSProperties = {\n    ...style,\n    visibility: isVisible ? 'visible' : 'hidden',\n    background: '#1f73b7',\n    padding: '10px',\n    margin: '6px 0',\n    color: '#fff'\n  };\n\n  return (\n    <div style={{ display: 'flex', alignItems: 'center', height: '150px' }}>\n      <div {...getTooltipProps({ ref: tooltipRef, style: styles })}>Tooltip</div>\n      <button {...(getTriggerProps({ ref: triggerRef }) as any)}>Trigger</button>\n    </div>\n  );\n};;\n\nexport const FocusableTooltip = ({ delayMilliseconds }) => {\n  const tooltipRef = useRef(null);\n\n  const { isVisible, getTooltipProps, getTriggerProps, openTooltip, closeTooltip } = useTooltip({\n    delayMilliseconds\n  });\n\n  const styles: React.CSSProperties = {\n    visibility: isVisible ? 'visible' : 'hidden',\n    background: '#000',\n    padding: '10px',\n    margin: '6px 0',\n    color: '#fff'\n  };\n\n  return (\n    <>\n      <button {...getTriggerProps()}>Trigger</button>\n      <div\n        {...getTooltipProps({\n          ref: tooltipRef,\n          style: styles,\n          onFocus: () => openTooltip(),\n          onBlur: () => closeTooltip(0)\n        })}\n      >\n        Focusable tooltip, tab to this <button>button</button>\n      </div>\n    </>\n  );\n};\n\nContainer.storyName = 'TooltipContainer';\n\nContainer.args = {\n  delayMilliseconds: 500\n};\n\nHook.storyName = 'useTooltip';\n\nHook.args = {\n  delayMilliseconds: 500\n};\n\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`useTooltip\\` hook implements the [tooltip pattern](https://www.w3.org/TR/wai-aria-practices-1.1/#tooltip) and can be used to build a tooltip component.`\n    }\n  }\n};\n\nWithPopper.storyName = 'positioning via Popper.js';\n\nWithPopper.args = {\n  delayMilliseconds: 500\n};\n\nWithPopper.parameters = {\n  docs: {\n    description: {\n      story: `This story demonstrate the \\`useTooltip\\` hook in combination with Popper.js for positioning. And it's broken`\n    }\n  }\n};\n\nFocusableTooltip.storyName = 'with focusable tooltip';\n\nFocusableTooltip.args = {\n  delayMilliseconds: 500\n};\n\nFocusableTooltip.parameters = {\n  docs: { description: { story: `This story demonstrates focusable content within the tooltip.` } }\n};\n\nexport default {\n  title: 'Tooltip Container',\n  component: TooltipContainer,\n  parameters: {\"storySource\":{\"source\":\"/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React, { useRef } from 'react';\\nimport { TooltipContainer, useTooltip } from './src';\\nimport { usePopper } from '../../utils/usePopper';\\n\\nexport const Container = ({ delayMilliseconds }) => {\\n  const tooltipRef = useRef(null);\\n\\n  return (\\n    <TooltipContainer delayMilliseconds={delayMilliseconds}>\\n      {({ isVisible, getTooltipProps, getTriggerProps }) => {\\n        const styles: React.CSSProperties = {\\n          visibility: isVisible ? 'visible' : 'hidden',\\n          background: '#1f73b7',\\n          padding: '10px',\\n          margin: '6px 0',\\n          color: '#fff'\\n        };\\n\\n        return (\\n          <>\\n            <div\\n              {...getTooltipProps({\\n                ref: tooltipRef,\\n                style: styles\\n              })}\\n            >\\n              Tooltip\\n            </div>\\n            <button {...getTriggerProps()}>Trigger</button>\\n          </>\\n        );\\n      }}\\n    </TooltipContainer>\\n  );\\n};\\n\\nexport const Hook = ({ delayMilliseconds }) => {\\n  const tooltipRef = useRef(null);\\n\\n  const { isVisible, getTooltipProps, getTriggerProps } = useTooltip({\\n    delayMilliseconds\\n  });\\n\\n  const styles: React.CSSProperties = {\\n    visibility: isVisible ? 'visible' : 'hidden',\\n    background: '#1f73b7',\\n    padding: '10px',\\n    margin: '6px 0',\\n    color: '#fff'\\n  };\\n\\n  return (\\n    <>\\n      <button {...getTriggerProps()}>Trigger</button>\\n      <div\\n        {...getTooltipProps({\\n          ref: tooltipRef,\\n          style: styles\\n        })}\\n      >\\n        Tooltip\\n      </div>\\n    </>\\n  );\\n};\\n\\nexport const WithPopper = ({ delayMilliseconds }) => {\\n  const tooltipRef = useRef(null);\\n  const triggerRef = useRef(null);\\n\\n  const { isVisible, getTooltipProps, getTriggerProps } = useTooltip({\\n    delayMilliseconds\\n  });\\n  const { style } = usePopper({ referenceRef: triggerRef, popperRef: tooltipRef });\\n\\n  const styles: CSSStyleDeclaration | React.CSSProperties = {\\n    ...style,\\n    visibility: isVisible ? 'visible' : 'hidden',\\n    background: '#1f73b7',\\n    padding: '10px',\\n    margin: '6px 0',\\n    color: '#fff'\\n  };\\n\\n  return (\\n    <div style={{ display: 'flex', alignItems: 'center', height: '150px' }}>\\n      <div {...getTooltipProps({ ref: tooltipRef, style: styles })}>Tooltip</div>\\n      <button {...(getTriggerProps({ ref: triggerRef }) as any)}>Trigger</button>\\n    </div>\\n  );\\n};\\n\\nexport const FocusableTooltip = ({ delayMilliseconds }) => {\\n  const tooltipRef = useRef(null);\\n\\n  const { isVisible, getTooltipProps, getTriggerProps, openTooltip, closeTooltip } = useTooltip({\\n    delayMilliseconds\\n  });\\n\\n  const styles: React.CSSProperties = {\\n    visibility: isVisible ? 'visible' : 'hidden',\\n    background: '#000',\\n    padding: '10px',\\n    margin: '6px 0',\\n    color: '#fff'\\n  };\\n\\n  return (\\n    <>\\n      <button {...getTriggerProps()}>Trigger</button>\\n      <div\\n        {...getTooltipProps({\\n          ref: tooltipRef,\\n          style: styles,\\n          onFocus: () => openTooltip(),\\n          onBlur: () => closeTooltip(0)\\n        })}\\n      >\\n        Focusable tooltip, tab to this <button>button</button>\\n      </div>\\n    </>\\n  );\\n};\\n\\nContainer.storyName = 'TooltipContainer';\\n\\nContainer.args = {\\n  delayMilliseconds: 500\\n};\\n\\nHook.storyName = 'useTooltip';\\n\\nHook.args = {\\n  delayMilliseconds: 500\\n};\\n\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`useTooltip\\\\` hook implements the [tooltip pattern](https://www.w3.org/TR/wai-aria-practices-1.1/#tooltip) and can be used to build a tooltip component.`\\n    }\\n  }\\n};\\n\\nWithPopper.storyName = 'positioning via Popper.js';\\n\\nWithPopper.args = {\\n  delayMilliseconds: 500\\n};\\n\\nWithPopper.parameters = {\\n  docs: {\\n    description: {\\n      story: `This story demonstrate the \\\\`useTooltip\\\\` hook in combination with Popper.js for positioning. And it's broken`\\n    }\\n  }\\n};\\n\\nFocusableTooltip.storyName = 'with focusable tooltip';\\n\\nFocusableTooltip.args = {\\n  delayMilliseconds: 500\\n};\\n\\nFocusableTooltip.parameters = {\\n  docs: { description: { story: `This story demonstrates focusable content within the tooltip.` } }\\n};\\n\\nexport default {\\n  title: 'Tooltip Container',\\n  component: TooltipContainer,\\n  parameters: {\\n    layout: 'centered',\\n    componentSubtitle: `A container component which wraps the useTooltip hook.`\\n  }\\n};\\n\",\"locationsMap\":{\"container\":{\"startLoc\":{\"col\":25,\"line\":12},\"endLoc\":{\"col\":1,\"line\":42},\"startBody\":{\"col\":25,\"line\":12},\"endBody\":{\"col\":1,\"line\":42}},\"hook\":{\"startLoc\":{\"col\":20,\"line\":44},\"endLoc\":{\"col\":1,\"line\":72},\"startBody\":{\"col\":20,\"line\":44},\"endBody\":{\"col\":1,\"line\":72}},\"with-popper\":{\"startLoc\":{\"col\":26,\"line\":74},\"endLoc\":{\"col\":1,\"line\":98},\"startBody\":{\"col\":26,\"line\":74},\"endBody\":{\"col\":1,\"line\":98}},\"focusable-tooltip\":{\"startLoc\":{\"col\":32,\"line\":100},\"endLoc\":{\"col\":1,\"line\":130},\"startBody\":{\"col\":32,\"line\":100},\"endBody\":{\"col\":1,\"line\":130}}}},\n    layout: 'centered',\n    componentSubtitle: `A container component which wraps the useTooltip hook.`\n  },};\n",locationsMap:{container:{startLoc:{col:25,line:20},endLoc:{col:1,line:50},startBody:{col:25,line:20},endBody:{col:1,line:50}},hook:{startLoc:{col:20,line:52},endLoc:{col:1,line:80},startBody:{col:20,line:52},endBody:{col:1,line:80}},"with-popper":{startLoc:{col:26,line:82},endLoc:{col:1,line:106},startBody:{col:26,line:82},endBody:{col:1,line:106}},"focusable-tooltip":{startLoc:{col:32,line:108},endLoc:{col:1,line:138},startBody:{col:32,line:108},endBody:{col:1,line:138}}}}},_parameters.storySource={source:"/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React, { useRef } from 'react';\nimport { TooltipContainer, useTooltip } from './src';\nimport { usePopper } from '../../utils/usePopper';\n\nexport const Container = ({ delayMilliseconds }) => {\n  const tooltipRef = useRef(null);\n\n  return (\n    <TooltipContainer delayMilliseconds={delayMilliseconds}>\n      {({ isVisible, getTooltipProps, getTriggerProps }) => {\n        const styles: React.CSSProperties = {\n          visibility: isVisible ? 'visible' : 'hidden',\n          background: '#1f73b7',\n          padding: '10px',\n          margin: '6px 0',\n          color: '#fff'\n        };\n\n        return (\n          <>\n            <div\n              {...getTooltipProps({\n                ref: tooltipRef,\n                style: styles\n              })}\n            >\n              Tooltip\n            </div>\n            <button {...getTriggerProps()}>Trigger</button>\n          </>\n        );\n      }}\n    </TooltipContainer>\n  );\n};\n\nexport const Hook = ({ delayMilliseconds }) => {\n  const tooltipRef = useRef(null);\n\n  const { isVisible, getTooltipProps, getTriggerProps } = useTooltip({\n    delayMilliseconds\n  });\n\n  const styles: React.CSSProperties = {\n    visibility: isVisible ? 'visible' : 'hidden',\n    background: '#1f73b7',\n    padding: '10px',\n    margin: '6px 0',\n    color: '#fff'\n  };\n\n  return (\n    <>\n      <button {...getTriggerProps()}>Trigger</button>\n      <div\n        {...getTooltipProps({\n          ref: tooltipRef,\n          style: styles\n        })}\n      >\n        Tooltip\n      </div>\n    </>\n  );\n};\n\nexport const WithPopper = ({ delayMilliseconds }) => {\n  const tooltipRef = useRef(null);\n  const triggerRef = useRef(null);\n\n  const { isVisible, getTooltipProps, getTriggerProps } = useTooltip({\n    delayMilliseconds\n  });\n  const { style } = usePopper({ referenceRef: triggerRef, popperRef: tooltipRef });\n\n  const styles: CSSStyleDeclaration | React.CSSProperties = {\n    ...style,\n    visibility: isVisible ? 'visible' : 'hidden',\n    background: '#1f73b7',\n    padding: '10px',\n    margin: '6px 0',\n    color: '#fff'\n  };\n\n  return (\n    <div style={{ display: 'flex', alignItems: 'center', height: '150px' }}>\n      <div {...getTooltipProps({ ref: tooltipRef, style: styles })}>Tooltip</div>\n      <button {...(getTriggerProps({ ref: triggerRef }) as any)}>Trigger</button>\n    </div>\n  );\n};\n\nexport const FocusableTooltip = ({ delayMilliseconds }) => {\n  const tooltipRef = useRef(null);\n\n  const { isVisible, getTooltipProps, getTriggerProps, openTooltip, closeTooltip } = useTooltip({\n    delayMilliseconds\n  });\n\n  const styles: React.CSSProperties = {\n    visibility: isVisible ? 'visible' : 'hidden',\n    background: '#000',\n    padding: '10px',\n    margin: '6px 0',\n    color: '#fff'\n  };\n\n  return (\n    <>\n      <button {...getTriggerProps()}>Trigger</button>\n      <div\n        {...getTooltipProps({\n          ref: tooltipRef,\n          style: styles,\n          onFocus: () => openTooltip(),\n          onBlur: () => closeTooltip(0)\n        })}\n      >\n        Focusable tooltip, tab to this <button>button</button>\n      </div>\n    </>\n  );\n};\n\nContainer.storyName = 'TooltipContainer';\n\nContainer.args = {\n  delayMilliseconds: 500\n};\n\nHook.storyName = 'useTooltip';\n\nHook.args = {\n  delayMilliseconds: 500\n};\n\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`useTooltip\\` hook implements the [tooltip pattern](https://www.w3.org/TR/wai-aria-practices-1.1/#tooltip) and can be used to build a tooltip component.`\n    }\n  }\n};\n\nWithPopper.storyName = 'positioning via Popper.js';\n\nWithPopper.args = {\n  delayMilliseconds: 500\n};\n\nWithPopper.parameters = {\n  docs: {\n    description: {\n      story: `This story demonstrate the \\`useTooltip\\` hook in combination with Popper.js for positioning. And it's broken`\n    }\n  }\n};\n\nFocusableTooltip.storyName = 'with focusable tooltip';\n\nFocusableTooltip.args = {\n  delayMilliseconds: 500\n};\n\nFocusableTooltip.parameters = {\n  docs: { description: { story: `This story demonstrates focusable content within the tooltip.` } }\n};\n\nexport default {\n  title: 'Tooltip Container',\n  component: TooltipContainer,\n  parameters: {\n    layout: 'centered',\n    componentSubtitle: `A container component which wraps the useTooltip hook.`\n  }\n};\n",locationsMap:{container:{startLoc:{col:25,line:12},endLoc:{col:1,line:42},startBody:{col:25,line:12},endBody:{col:1,line:42}},hook:{startLoc:{col:20,line:44},endLoc:{col:1,line:72},startBody:{col:20,line:44},endBody:{col:1,line:72}},"with-popper":{startLoc:{col:26,line:74},endLoc:{col:1,line:98},startBody:{col:26,line:74},endBody:{col:1,line:98}},"focusable-tooltip":{startLoc:{col:32,line:100},endLoc:{col:1,line:130},startBody:{col:32,line:100},endBody:{col:1,line:130}}}},_parameters.layout="centered",_parameters.componentSubtitle="A container component which wraps the useTooltip hook.",_parameters)};tooltip_stories_Container.parameters=Object(esm_extends.a)({storySource:{source:"({ delayMilliseconds }) => {\n  const tooltipRef = useRef(null);\n\n  return (\n    <TooltipContainer delayMilliseconds={delayMilliseconds}>\n      {({ isVisible, getTooltipProps, getTriggerProps }) => {\n        const styles: React.CSSProperties = {\n          visibility: isVisible ? 'visible' : 'hidden',\n          background: '#1f73b7',\n          padding: '10px',\n          margin: '6px 0',\n          color: '#fff'\n        };\n\n        return (\n          <>\n            <div\n              {...getTooltipProps({\n                ref: tooltipRef,\n                style: styles\n              })}\n            >\n              Tooltip\n            </div>\n            <button {...getTriggerProps()}>Trigger</button>\n          </>\n        );\n      }}\n    </TooltipContainer>\n  );\n}"}},tooltip_stories_Container.parameters),tooltip_stories_Hook.parameters=Object(esm_extends.a)({storySource:{source:"({ delayMilliseconds }) => {\n  const tooltipRef = useRef(null);\n\n  const { isVisible, getTooltipProps, getTriggerProps } = useTooltip({\n    delayMilliseconds\n  });\n\n  const styles: React.CSSProperties = {\n    visibility: isVisible ? 'visible' : 'hidden',\n    background: '#1f73b7',\n    padding: '10px',\n    margin: '6px 0',\n    color: '#fff'\n  };\n\n  return (\n    <>\n      <button {...getTriggerProps()}>Trigger</button>\n      <div\n        {...getTooltipProps({\n          ref: tooltipRef,\n          style: styles\n        })}\n      >\n        Tooltip\n      </div>\n    </>\n  );\n}"}},tooltip_stories_Hook.parameters),tooltip_stories_WithPopper.parameters=Object(esm_extends.a)({storySource:{source:"({ delayMilliseconds }) => {\n  const tooltipRef = useRef(null);\n  const triggerRef = useRef(null);\n\n  const { isVisible, getTooltipProps, getTriggerProps } = useTooltip({\n    delayMilliseconds\n  });\n  const { style } = usePopper({ referenceRef: triggerRef, popperRef: tooltipRef });\n\n  const styles: CSSStyleDeclaration | React.CSSProperties = {\n    ...style,\n    visibility: isVisible ? 'visible' : 'hidden',\n    background: '#1f73b7',\n    padding: '10px',\n    margin: '6px 0',\n    color: '#fff'\n  };\n\n  return (\n    <div style={{ display: 'flex', alignItems: 'center', height: '150px' }}>\n      <div {...getTooltipProps({ ref: tooltipRef, style: styles })}>Tooltip</div>\n      <button {...(getTriggerProps({ ref: triggerRef }) as any)}>Trigger</button>\n    </div>\n  );\n}"}},tooltip_stories_WithPopper.parameters),tooltip_stories_FocusableTooltip.parameters=Object(esm_extends.a)({storySource:{source:"({ delayMilliseconds }) => {\n  const tooltipRef = useRef(null);\n\n  const { isVisible, getTooltipProps, getTriggerProps, openTooltip, closeTooltip } = useTooltip({\n    delayMilliseconds\n  });\n\n  const styles: React.CSSProperties = {\n    visibility: isVisible ? 'visible' : 'hidden',\n    background: '#000',\n    padding: '10px',\n    margin: '6px 0',\n    color: '#fff'\n  };\n\n  return (\n    <>\n      <button {...getTriggerProps()}>Trigger</button>\n      <div\n        {...getTooltipProps({\n          ref: tooltipRef,\n          style: styles,\n          onFocus: () => openTooltip(),\n          onBlur: () => closeTooltip(0)\n        })}\n      >\n        Focusable tooltip, tab to this <button>button</button>\n      </div>\n    </>\n  );\n}"}},tooltip_stories_FocusableTooltip.parameters);try{tooltip_stories_Container.displayName="Container",tooltip_stories_Container.__docgenInfo={description:"",displayName:"Container",props:{delayMilliseconds:{defaultValue:null,description:"",name:"delayMilliseconds",required:!0,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/tooltip/tooltip.stories.tsx#Container"]={docgenInfo:tooltip_stories_Container.__docgenInfo,name:"Container",path:"packages/tooltip/tooltip.stories.tsx#Container"})}catch(__react_docgen_typescript_loader_error){}try{tooltip_stories_Hook.displayName="Hook",tooltip_stories_Hook.__docgenInfo={description:"",displayName:"Hook",props:{delayMilliseconds:{defaultValue:null,description:"",name:"delayMilliseconds",required:!0,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/tooltip/tooltip.stories.tsx#Hook"]={docgenInfo:tooltip_stories_Hook.__docgenInfo,name:"Hook",path:"packages/tooltip/tooltip.stories.tsx#Hook"})}catch(__react_docgen_typescript_loader_error){}try{tooltip_stories_WithPopper.displayName="WithPopper",tooltip_stories_WithPopper.__docgenInfo={description:"",displayName:"WithPopper",props:{delayMilliseconds:{defaultValue:null,description:"",name:"delayMilliseconds",required:!0,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/tooltip/tooltip.stories.tsx#WithPopper"]={docgenInfo:tooltip_stories_WithPopper.__docgenInfo,name:"WithPopper",path:"packages/tooltip/tooltip.stories.tsx#WithPopper"})}catch(__react_docgen_typescript_loader_error){}try{tooltip_stories_FocusableTooltip.displayName="FocusableTooltip",tooltip_stories_FocusableTooltip.__docgenInfo={description:"",displayName:"FocusableTooltip",props:{delayMilliseconds:{defaultValue:null,description:"",name:"delayMilliseconds",required:!0,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/tooltip/tooltip.stories.tsx#FocusableTooltip"]={docgenInfo:tooltip_stories_FocusableTooltip.__docgenInfo,name:"FocusableTooltip",path:"packages/tooltip/tooltip.stories.tsx#FocusableTooltip"})}catch(__react_docgen_typescript_loader_error){}},2896:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Container",(function(){return accordion_stories_Container})),__webpack_require__.d(__webpack_exports__,"Hook",(function(){return accordion_stories_Hook}));__webpack_require__(290),__webpack_require__(1122),__webpack_require__(550);var esm_extends=__webpack_require__(343),react=__webpack_require__(0),react_default=__webpack_require__.n(react),objectWithoutPropertiesLoose=__webpack_require__(425),prop_types=__webpack_require__(2),prop_types_default=__webpack_require__.n(prop_types),hooks=(__webpack_require__(753),__webpack_require__(1716),__webpack_require__(2869),__webpack_require__(2932)),index_esm=__webpack_require__(10),_excluded=["role","ariaLevel"],_excluded2=["index","role","tabIndex"],_excluded3=["index","role"];function useAccordion(_temp){var _ref=void 0===_temp?{}:_temp,idPrefix=_ref.idPrefix,expandedSections=_ref.expandedSections,onChange=_ref.onChange,_ref$expandable=_ref.expandable,expandable=void 0===_ref$expandable||_ref$expandable,_ref$collapsible=_ref.collapsible,collapsible=void 0===_ref$collapsible||_ref$collapsible,isControlled=null!=expandedSections,seed=Object(hooks.a)(),prefix=Object(react.useState)(idPrefix||seed("accordion_storybook"))[0],TRIGGER_ID=prefix+"--trigger",PANEL_ID=prefix+"--panel",_useState2=Object(react.useState)([0]),expandedState=_useState2[0],setExpandedState=_useState2[1],controlledExpandedState=Object(index_esm.c)(expandedSections,expandedState),_useState3=Object(react.useState)(collapsible?[]:expandedState),disabledState=_useState3[0],setDisabledState=_useState3[1],sectionIndices=[],toggle=function toggle(index){var expanded=[],disabled=[];sectionIndices.forEach((function(sectionIndex){var isExpanded=!1;sectionIndex===index?isExpanded=!collapsible||-1===expandedState.indexOf(sectionIndex):expandable&&(isExpanded=-1!==expandedState.indexOf(sectionIndex)),isExpanded&&(expanded.push(sectionIndex),collapsible||disabled.push(sectionIndex))})),onChange&&onChange(index),!1===isControlled&&setExpandedState(expanded),setDisabledState(disabled)};return{getHeaderProps:function getHeaderProps(_temp2){var _ref2=void 0===_temp2?{}:_temp2,_ref2$role=_ref2.role,role=void 0===_ref2$role?"heading":_ref2$role,ariaLevel=_ref2.ariaLevel,props=Object(objectWithoutPropertiesLoose.a)(_ref2,_excluded);if(void 0===ariaLevel)throw new Error("Accessibility Error: You must apply the `ariaLevel` prop to the element that contains your heading.");return Object(esm_extends.a)({role:role,"aria-level":ariaLevel,"data-garden-container-id":"containers.accordion","data-garden-container-version":"storybook"},props)},getTriggerProps:function getTriggerProps(_temp3){var _ref3=void 0===_temp3?{}:_temp3,index=_ref3.index,_ref3$role=_ref3.role,role=void 0===_ref3$role?"button":_ref3$role,_ref3$tabIndex=_ref3.tabIndex,tabIndex=void 0===_ref3$tabIndex?0:_ref3$tabIndex,props=Object(objectWithoutPropertiesLoose.a)(_ref3,_excluded2);if(void 0===index)throw new Error("Accessibility Error: You must provide an `index` option to `getTriggerProps()`");return sectionIndices.push(index),Object(esm_extends.a)({id:TRIGGER_ID+":"+index,role:role,tabIndex:tabIndex,"aria-controls":PANEL_ID+":"+index,"aria-disabled":-1!==disabledState.indexOf(index),"aria-expanded":isControlled?controlledExpandedState.includes(index):expandedState.includes(index),onClick:Object(index_esm.b)(props.onClick,(function(){return toggle(index)})),onKeyDown:Object(index_esm.b)(props.onKeyDown,(function(event){event.keyCode!==index_esm.a.SPACE&&event.keyCode!==index_esm.a.ENTER||(toggle(index),event.preventDefault())}))},props)},getPanelProps:function getPanelProps(_temp4){var _ref4=void 0===_temp4?{}:_temp4,index=_ref4.index,_ref4$role=_ref4.role,role=void 0===_ref4$role?"region":_ref4$role,props=Object(objectWithoutPropertiesLoose.a)(_ref4,_excluded3);if(void 0===index)throw new Error("Accessibility Error: You must provide an `index` option to `getSectionProps()`");return Object(esm_extends.a)({id:PANEL_ID+":"+index,role:role,"aria-hidden":isControlled?!controlledExpandedState.includes(index):!expandedState.includes(index),"aria-labelledby":TRIGGER_ID+":"+index},props)},expandedSections:controlledExpandedState,disabledSections:disabledState}}var _parameters,AccordionContainer_excluded=["children","render"],AccordionContainer_AccordionContainer=function AccordionContainer(props){var children=props.children,_props$render=props.render,render=void 0===_props$render?children:_props$render,options=Object(objectWithoutPropertiesLoose.a)(props,AccordionContainer_excluded);return react_default.a.createElement(react_default.a.Fragment,null,render(useAccordion(options)))};AccordionContainer_AccordionContainer.defaultProps={expandable:!0,collapsible:!0},AccordionContainer_AccordionContainer.propTypes={children:prop_types_default.a.func,render:prop_types_default.a.func,expandedSections:prop_types_default.a.array,expandable:prop_types_default.a.bool,collapsible:prop_types_default.a.bool,idPrefix:prop_types_default.a.string};try{AccordionContainer_AccordionContainer.displayName="AccordionContainer",AccordionContainer_AccordionContainer.__docgenInfo={description:"",displayName:"AccordionContainer",props:{render:{defaultValue:null,description:"A render prop function which receives accordion state and prop getters",name:"render",required:!1,type:{name:"((options: IUseAccordionReturnValue) => ReactNode)"}},children:{defaultValue:null,description:"A children render prop function which receives accordion state and prop getters",name:"children",required:!1,type:{name:"(((options: IUseAccordionReturnValue) => ReactNode) & (boolean | ReactChild | ReactFragment | ReactPortal | null))"}},idPrefix:{defaultValue:null,description:"Prefixes IDs for the accordion trigger and panels",name:"idPrefix",required:!1,type:{name:"string"}},expandedSections:{defaultValue:null,description:"Determines which sections are expanded in a controlled accordion",name:"expandedSections",required:!1,type:{name:"number[]"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((expanded: number) => any)"}},expandable:{defaultValue:{value:"true"},description:"Determines if multiple panels can be expanded at the same time in an uncontrolled accordion",name:"expandable",required:!1,type:{name:"boolean"}},collapsible:{defaultValue:{value:"true"},description:"Determines if panels can be collapsed in an uncontrolled accordion",name:"collapsible",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/accordion/src/AccordionContainer.tsx#AccordionContainer"]={docgenInfo:AccordionContainer_AccordionContainer.__docgenInfo,name:"AccordionContainer",path:"packages/accordion/src/AccordionContainer.tsx#AccordionContainer"})}catch(__react_docgen_typescript_loader_error){}var visuallyHidden={position:"absolute",border:"0",clip:"rect(1px, 1px, 1px, 1px)",padding:"0",width:"1px",height:"1px",overflow:"hidden",whiteSpace:"nowrap"},accordion_stories_Container=function Container(_ref){var sections=_ref.sections,expandable=_ref.expandable,collapsible=_ref.collapsible,_sections=Array(sections).fill(void 0).map((function(s,i){return i})),Accordion=function Accordion(){return react_default.a.createElement(AccordionContainer_AccordionContainer,{expandable:expandable,collapsible:collapsible},(function(_ref2){var getHeaderProps=_ref2.getHeaderProps,getTriggerProps=_ref2.getTriggerProps,getPanelProps=_ref2.getPanelProps,expandedSections=_ref2.expandedSections,disabledSections=_ref2.disabledSections;return react_default.a.createElement("div",{style:{width:300}},_sections.map((function(section,index){var disabled=-1!==disabledSections.indexOf(index),hidden=-1===expandedSections.indexOf(index);return react_default.a.createElement("div",{key:section},react_default.a.createElement("div",getHeaderProps({ariaLevel:2}),react_default.a.createElement("div",getTriggerProps({index:index,disabled:disabled,style:{WebkitAppearance:"button",border:"1px solid",opacity:disabled?.4:1,padding:1,cursor:"pointer"}}),"Trigger "+(index+1))),react_default.a.createElement("p",getPanelProps({index:index,style:hidden?visuallyHidden:null}),"[Panel "+(index+1)+"] ","Veggies es bonus vobis, proinde vos postulo essum magis kohlrabi welsh onion daikon amaranth tatsoi tomatillo melon azuki bean garlic."))})))}))};return react_default.a.createElement(Accordion,null)},accordion_stories_Hook=function Hook(_ref3){var sections=_ref3.sections,expandable=_ref3.expandable,collapsible=_ref3.collapsible,_sections=Array(sections).fill(void 0).map((function(s,i){return i})),Accordion=function Accordion(){var _useAccordion=useAccordion({expandable:expandable,collapsible:collapsible}),getHeaderProps=_useAccordion.getHeaderProps,getTriggerProps=_useAccordion.getTriggerProps,getPanelProps=_useAccordion.getPanelProps,expandedSections=_useAccordion.expandedSections,disabledSections=_useAccordion.disabledSections;return react_default.a.createElement("div",{style:{width:300}},_sections.map((function(section,index){var disabled=-1!==disabledSections.indexOf(index),hidden=-1===expandedSections.indexOf(index);return react_default.a.createElement("div",{key:section},react_default.a.createElement("h2",getHeaderProps({role:null,ariaLevel:null}),react_default.a.createElement("button",getTriggerProps({index:index,role:null,tabIndex:null,disabled:disabled,style:{width:"100%",textAlign:"inherit"}}),"Trigger "+(index+1))),react_default.a.createElement("section",getPanelProps({index:index,role:null,style:hidden?visuallyHidden:null}),"[Panel "+(index+1)+"] ","Veggies es bonus vobis, proinde vos postulo essum magis kohlrabi welsh onion daikon amaranth tatsoi tomatillo melon azuki bean garlic."))})))};return react_default.a.createElement(Accordion,null)},ARG_TYPES={sections:{control:{type:"range",min:1,max:9}}},ARGS={sections:5,expandable:!0,collapsible:!0};accordion_stories_Container.storyName="AccordionContainer",accordion_stories_Container.argTypes=ARG_TYPES,accordion_stories_Container.args=ARGS,accordion_stories_Hook.storyName="useAccordion",accordion_stories_Hook.argTypes=ARG_TYPES,accordion_stories_Hook.args=ARGS,accordion_stories_Hook.parameters={docs:{description:{story:"The `useAccordion` hook manages toggle state and required accessibility\n      attributes for a group of sections."}}};__webpack_exports__.default={component:AccordionContainer_AccordionContainer,title:"Accordion Container",parameters:(_parameters={storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React, { CSSProperties } from 'react';\\nimport { AccordionContainer, useAccordion, IUseAccordionReturnValue } from './src';\\n\\nconst visuallyHidden: CSSProperties = {\\n  position: 'absolute',\\n  border: '0',\\n  clip: 'rect(1px, 1px, 1px, 1px)',\\n  padding: '0',\\n  width: '1px',\\n  height: '1px',\\n  overflow: 'hidden',\\n  whiteSpace: 'nowrap'\\n};\\n\\nexport const Container = ({ sections, expandable, collapsible }) => {\\n  const _sections = Array(sections)\\n    .fill(undefined)\\n    .map((s, i) => i);\\n\\n  const Accordion = () => (\\n    <AccordionContainer expandable={expandable} collapsible={collapsible}>\\n      {({\\n        getHeaderProps,\\n        getTriggerProps,\\n        getPanelProps,\\n        expandedSections,\\n        disabledSections\\n      }: IUseAccordionReturnValue) => (\\n        <div style={{ width: 300 }}>\\n          {_sections.map((section, index) => {\\n            const disabled = disabledSections.indexOf(index) !== -1;\\n            const hidden = expandedSections.indexOf(index) === -1;\\n\\n            return (\\n              <div key={section}>\\n                <div {...getHeaderProps({ ariaLevel: 2 })}>\\n                  <div\\n                    {...getTriggerProps({\\n                      index,\\n                      disabled,\\n                      style: {\\n                        WebkitAppearance: 'button',\\n                        border: '1px solid',\\n                        opacity: disabled ? 0.4 : 1,\\n                        padding: 1,\\n                        cursor: 'pointer'\\n                      }\\n                    })}\\n                  >\\n                    {`Trigger ${index + 1}`}\\n                  </div>\\n                </div>\\n                <p\\n                  {...getPanelProps({\\n                    index,\\n                    style: hidden ? visuallyHidden : null\\n                  })}\\n                >\\n                  {`[Panel ${index + 1}] `}\\n                  Veggies es bonus vobis, proinde vos postulo essum magis kohlrabi welsh onion\\n                  daikon amaranth tatsoi tomatillo melon azuki bean garlic.\\n                </p>\\n              </div>\\n            );\\n          })}\\n        </div>\\n      )}\\n    </AccordionContainer>\\n  );\\n\\n  return <Accordion />;\\n};\\n\\nexport const Hook = ({ sections, expandable, collapsible }) => {\\n  const _sections = Array(sections)\\n    .fill(undefined)\\n    .map((s, i) => i);\\n\\n  const Accordion = () => {\\n    const { getHeaderProps, getTriggerProps, getPanelProps, expandedSections, disabledSections } =\\n      useAccordion({ expandable, collapsible });\\n\\n    return (\\n      <div style={{ width: 300 }}>\\n        {_sections.map((section, index) => {\\n          const disabled = disabledSections.indexOf(index) !== -1;\\n          const hidden = expandedSections.indexOf(index) === -1;\\n\\n          return (\\n            <div key={section}>\\n              <h2 {...getHeaderProps({ role: null, ariaLevel: null })}>\\n                <button\\n                  {...getTriggerProps({\\n                    index,\\n                    role: null,\\n                    tabIndex: null,\\n                    disabled,\\n                    style: { width: '100%', textAlign: 'inherit' }\\n                  })}\\n                >\\n                  {`Trigger ${index + 1}`}\\n                </button>\\n              </h2>\\n              <section\\n                {...getPanelProps({\\n                  index,\\n                  role: null,\\n                  style: hidden ? visuallyHidden : null\\n                })}\\n              >\\n                {`[Panel ${index + 1}] `}\\n                Veggies es bonus vobis, proinde vos postulo essum magis kohlrabi welsh onion daikon\\n                amaranth tatsoi tomatillo melon azuki bean garlic.\\n              </section>\\n            </div>\\n          );\\n        })}\\n      </div>\\n    );\\n  };\\n\\n  return <Accordion />;\\n};\\n\\nconst ARG_TYPES = {\\n  sections: {\\n    control: { type: 'range', min: 1, max: 9 }\\n  }\\n};\\n\\nconst ARGS = {\\n  sections: 5,\\n  expandable: true,\\n  collapsible: true\\n};\\n\\nContainer.storyName = 'AccordionContainer';\\n\\nContainer.argTypes = ARG_TYPES;\\n\\nContainer.args = ARGS;\\n\\nHook.storyName = 'useAccordion';\\n\\nHook.argTypes = ARG_TYPES;\\n\\nHook.args = ARGS;\\n\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`useAccordion\\\\` hook manages toggle state and required accessibility\\n      attributes for a group of sections.`\\n    }\\n  }\\n};\\n\\nexport default {\\n  component: AccordionContainer,\\n  title: 'Accordion Container',\\n  parameters: {\\n    layout: 'centered',\\n    componentSubtitle: `A container component which wraps the useAccordion hook.`\\n  }\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Container\":{\"startLoc\":{\"col\":25,\"line\":22},\"endLoc\":{\"col\":1,\"line\":79},\"startBody\":{\"col\":25,\"line\":22},\"endBody\":{\"col\":1,\"line\":79}},\"Hook\":{\"startLoc\":{\"col\":20,\"line\":81},\"endLoc\":{\"col\":1,\"line\":130},\"startBody\":{\"col\":20,\"line\":81},\"endBody\":{\"col\":1,\"line\":130}}};\n    \n/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React, { CSSProperties } from 'react';\nimport { AccordionContainer, useAccordion, IUseAccordionReturnValue } from './src';\n\nconst visuallyHidden: CSSProperties = {\n  position: 'absolute',\n  border: '0',\n  clip: 'rect(1px, 1px, 1px, 1px)',\n  padding: '0',\n  width: '1px',\n  height: '1px',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap'\n};\n\nexport const Container = ({ sections, expandable, collapsible }) => {\n  const _sections = Array(sections)\n    .fill(undefined)\n    .map((s, i) => i);\n\n  const Accordion = () => (\n    <AccordionContainer expandable={expandable} collapsible={collapsible}>\n      {({\n        getHeaderProps,\n        getTriggerProps,\n        getPanelProps,\n        expandedSections,\n        disabledSections\n      }: IUseAccordionReturnValue) => (\n        <div style={{ width: 300 }}>\n          {_sections.map((section, index) => {\n            const disabled = disabledSections.indexOf(index) !== -1;\n            const hidden = expandedSections.indexOf(index) === -1;\n\n            return (\n              <div key={section}>\n                <div {...getHeaderProps({ ariaLevel: 2 })}>\n                  <div\n                    {...getTriggerProps({\n                      index,\n                      disabled,\n                      style: {\n                        WebkitAppearance: 'button',\n                        border: '1px solid',\n                        opacity: disabled ? 0.4 : 1,\n                        padding: 1,\n                        cursor: 'pointer'\n                      }\n                    })}\n                  >\n                    {`Trigger ${index + 1}`}\n                  </div>\n                </div>\n                <p\n                  {...getPanelProps({\n                    index,\n                    style: hidden ? visuallyHidden : null\n                  })}\n                >\n                  {`[Panel ${index + 1}] `}\n                  Veggies es bonus vobis, proinde vos postulo essum magis kohlrabi welsh onion\n                  daikon amaranth tatsoi tomatillo melon azuki bean garlic.\n                </p>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </AccordionContainer>\n  );\n\n  return <Accordion />;\n};;\n\nexport const Hook = ({ sections, expandable, collapsible }) => {\n  const _sections = Array(sections)\n    .fill(undefined)\n    .map((s, i) => i);\n\n  const Accordion = () => {\n    const { getHeaderProps, getTriggerProps, getPanelProps, expandedSections, disabledSections } =\n      useAccordion({ expandable, collapsible });\n\n    return (\n      <div style={{ width: 300 }}>\n        {_sections.map((section, index) => {\n          const disabled = disabledSections.indexOf(index) !== -1;\n          const hidden = expandedSections.indexOf(index) === -1;\n\n          return (\n            <div key={section}>\n              <h2 {...getHeaderProps({ role: null, ariaLevel: null })}>\n                <button\n                  {...getTriggerProps({\n                    index,\n                    role: null,\n                    tabIndex: null,\n                    disabled,\n                    style: { width: '100%', textAlign: 'inherit' }\n                  })}\n                >\n                  {`Trigger ${index + 1}`}\n                </button>\n              </h2>\n              <section\n                {...getPanelProps({\n                  index,\n                  role: null,\n                  style: hidden ? visuallyHidden : null\n                })}\n              >\n                {`[Panel ${index + 1}] `}\n                Veggies es bonus vobis, proinde vos postulo essum magis kohlrabi welsh onion daikon\n                amaranth tatsoi tomatillo melon azuki bean garlic.\n              </section>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return <Accordion />;\n};\n\nconst ARG_TYPES = {\n  sections: {\n    control: { type: 'range', min: 1, max: 9 }\n  }\n};\n\nconst ARGS = {\n  sections: 5,\n  expandable: true,\n  collapsible: true\n};\n\nContainer.storyName = 'AccordionContainer';\n\nContainer.argTypes = ARG_TYPES;\n\nContainer.args = ARGS;\n\nHook.storyName = 'useAccordion';\n\nHook.argTypes = ARG_TYPES;\n\nHook.args = ARGS;\n\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`useAccordion\\` hook manages toggle state and required accessibility\n      attributes for a group of sections.`\n    }\n  }\n};\n\nexport default {\n  component: AccordionContainer,\n  title: 'Accordion Container',\n  parameters: {\"storySource\":{\"source\":\"/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React, { CSSProperties } from 'react';\\nimport { AccordionContainer, useAccordion, IUseAccordionReturnValue } from './src';\\n\\nconst visuallyHidden: CSSProperties = {\\n  position: 'absolute',\\n  border: '0',\\n  clip: 'rect(1px, 1px, 1px, 1px)',\\n  padding: '0',\\n  width: '1px',\\n  height: '1px',\\n  overflow: 'hidden',\\n  whiteSpace: 'nowrap'\\n};\\n\\nexport const Container = ({ sections, expandable, collapsible }) => {\\n  const _sections = Array(sections)\\n    .fill(undefined)\\n    .map((s, i) => i);\\n\\n  const Accordion = () => (\\n    <AccordionContainer expandable={expandable} collapsible={collapsible}>\\n      {({\\n        getHeaderProps,\\n        getTriggerProps,\\n        getPanelProps,\\n        expandedSections,\\n        disabledSections\\n      }: IUseAccordionReturnValue) => (\\n        <div style={{ width: 300 }}>\\n          {_sections.map((section, index) => {\\n            const disabled = disabledSections.indexOf(index) !== -1;\\n            const hidden = expandedSections.indexOf(index) === -1;\\n\\n            return (\\n              <div key={section}>\\n                <div {...getHeaderProps({ ariaLevel: 2 })}>\\n                  <div\\n                    {...getTriggerProps({\\n                      index,\\n                      disabled,\\n                      style: {\\n                        WebkitAppearance: 'button',\\n                        border: '1px solid',\\n                        opacity: disabled ? 0.4 : 1,\\n                        padding: 1,\\n                        cursor: 'pointer'\\n                      }\\n                    })}\\n                  >\\n                    {`Trigger ${index + 1}`}\\n                  </div>\\n                </div>\\n                <p\\n                  {...getPanelProps({\\n                    index,\\n                    style: hidden ? visuallyHidden : null\\n                  })}\\n                >\\n                  {`[Panel ${index + 1}] `}\\n                  Veggies es bonus vobis, proinde vos postulo essum magis kohlrabi welsh onion\\n                  daikon amaranth tatsoi tomatillo melon azuki bean garlic.\\n                </p>\\n              </div>\\n            );\\n          })}\\n        </div>\\n      )}\\n    </AccordionContainer>\\n  );\\n\\n  return <Accordion />;\\n};\\n\\nexport const Hook = ({ sections, expandable, collapsible }) => {\\n  const _sections = Array(sections)\\n    .fill(undefined)\\n    .map((s, i) => i);\\n\\n  const Accordion = () => {\\n    const { getHeaderProps, getTriggerProps, getPanelProps, expandedSections, disabledSections } =\\n      useAccordion({ expandable, collapsible });\\n\\n    return (\\n      <div style={{ width: 300 }}>\\n        {_sections.map((section, index) => {\\n          const disabled = disabledSections.indexOf(index) !== -1;\\n          const hidden = expandedSections.indexOf(index) === -1;\\n\\n          return (\\n            <div key={section}>\\n              <h2 {...getHeaderProps({ role: null, ariaLevel: null })}>\\n                <button\\n                  {...getTriggerProps({\\n                    index,\\n                    role: null,\\n                    tabIndex: null,\\n                    disabled,\\n                    style: { width: '100%', textAlign: 'inherit' }\\n                  })}\\n                >\\n                  {`Trigger ${index + 1}`}\\n                </button>\\n              </h2>\\n              <section\\n                {...getPanelProps({\\n                  index,\\n                  role: null,\\n                  style: hidden ? visuallyHidden : null\\n                })}\\n              >\\n                {`[Panel ${index + 1}] `}\\n                Veggies es bonus vobis, proinde vos postulo essum magis kohlrabi welsh onion daikon\\n                amaranth tatsoi tomatillo melon azuki bean garlic.\\n              </section>\\n            </div>\\n          );\\n        })}\\n      </div>\\n    );\\n  };\\n\\n  return <Accordion />;\\n};\\n\\nconst ARG_TYPES = {\\n  sections: {\\n    control: { type: 'range', min: 1, max: 9 }\\n  }\\n};\\n\\nconst ARGS = {\\n  sections: 5,\\n  expandable: true,\\n  collapsible: true\\n};\\n\\nContainer.storyName = 'AccordionContainer';\\n\\nContainer.argTypes = ARG_TYPES;\\n\\nContainer.args = ARGS;\\n\\nHook.storyName = 'useAccordion';\\n\\nHook.argTypes = ARG_TYPES;\\n\\nHook.args = ARGS;\\n\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`useAccordion\\\\` hook manages toggle state and required accessibility\\n      attributes for a group of sections.`\\n    }\\n  }\\n};\\n\\nexport default {\\n  component: AccordionContainer,\\n  title: 'Accordion Container',\\n  parameters: {\\n    layout: 'centered',\\n    componentSubtitle: `A container component which wraps the useAccordion hook.`\\n  }\\n};\\n\",\"locationsMap\":{\"container\":{\"startLoc\":{\"col\":25,\"line\":22},\"endLoc\":{\"col\":1,\"line\":79},\"startBody\":{\"col\":25,\"line\":22},\"endBody\":{\"col\":1,\"line\":79}},\"hook\":{\"startLoc\":{\"col\":20,\"line\":81},\"endLoc\":{\"col\":1,\"line\":130},\"startBody\":{\"col\":20,\"line\":81},\"endBody\":{\"col\":1,\"line\":130}}}},\n    layout: 'centered',\n    componentSubtitle: `A container component which wraps the useAccordion hook.`\n  },};\n",locationsMap:{container:{startLoc:{col:25,line:30},endLoc:{col:1,line:87},startBody:{col:25,line:30},endBody:{col:1,line:87}},hook:{startLoc:{col:20,line:89},endLoc:{col:1,line:138},startBody:{col:20,line:89},endBody:{col:1,line:138}}}}},_parameters.storySource={source:"/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React, { CSSProperties } from 'react';\nimport { AccordionContainer, useAccordion, IUseAccordionReturnValue } from './src';\n\nconst visuallyHidden: CSSProperties = {\n  position: 'absolute',\n  border: '0',\n  clip: 'rect(1px, 1px, 1px, 1px)',\n  padding: '0',\n  width: '1px',\n  height: '1px',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap'\n};\n\nexport const Container = ({ sections, expandable, collapsible }) => {\n  const _sections = Array(sections)\n    .fill(undefined)\n    .map((s, i) => i);\n\n  const Accordion = () => (\n    <AccordionContainer expandable={expandable} collapsible={collapsible}>\n      {({\n        getHeaderProps,\n        getTriggerProps,\n        getPanelProps,\n        expandedSections,\n        disabledSections\n      }: IUseAccordionReturnValue) => (\n        <div style={{ width: 300 }}>\n          {_sections.map((section, index) => {\n            const disabled = disabledSections.indexOf(index) !== -1;\n            const hidden = expandedSections.indexOf(index) === -1;\n\n            return (\n              <div key={section}>\n                <div {...getHeaderProps({ ariaLevel: 2 })}>\n                  <div\n                    {...getTriggerProps({\n                      index,\n                      disabled,\n                      style: {\n                        WebkitAppearance: 'button',\n                        border: '1px solid',\n                        opacity: disabled ? 0.4 : 1,\n                        padding: 1,\n                        cursor: 'pointer'\n                      }\n                    })}\n                  >\n                    {`Trigger ${index + 1}`}\n                  </div>\n                </div>\n                <p\n                  {...getPanelProps({\n                    index,\n                    style: hidden ? visuallyHidden : null\n                  })}\n                >\n                  {`[Panel ${index + 1}] `}\n                  Veggies es bonus vobis, proinde vos postulo essum magis kohlrabi welsh onion\n                  daikon amaranth tatsoi tomatillo melon azuki bean garlic.\n                </p>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </AccordionContainer>\n  );\n\n  return <Accordion />;\n};\n\nexport const Hook = ({ sections, expandable, collapsible }) => {\n  const _sections = Array(sections)\n    .fill(undefined)\n    .map((s, i) => i);\n\n  const Accordion = () => {\n    const { getHeaderProps, getTriggerProps, getPanelProps, expandedSections, disabledSections } =\n      useAccordion({ expandable, collapsible });\n\n    return (\n      <div style={{ width: 300 }}>\n        {_sections.map((section, index) => {\n          const disabled = disabledSections.indexOf(index) !== -1;\n          const hidden = expandedSections.indexOf(index) === -1;\n\n          return (\n            <div key={section}>\n              <h2 {...getHeaderProps({ role: null, ariaLevel: null })}>\n                <button\n                  {...getTriggerProps({\n                    index,\n                    role: null,\n                    tabIndex: null,\n                    disabled,\n                    style: { width: '100%', textAlign: 'inherit' }\n                  })}\n                >\n                  {`Trigger ${index + 1}`}\n                </button>\n              </h2>\n              <section\n                {...getPanelProps({\n                  index,\n                  role: null,\n                  style: hidden ? visuallyHidden : null\n                })}\n              >\n                {`[Panel ${index + 1}] `}\n                Veggies es bonus vobis, proinde vos postulo essum magis kohlrabi welsh onion daikon\n                amaranth tatsoi tomatillo melon azuki bean garlic.\n              </section>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return <Accordion />;\n};\n\nconst ARG_TYPES = {\n  sections: {\n    control: { type: 'range', min: 1, max: 9 }\n  }\n};\n\nconst ARGS = {\n  sections: 5,\n  expandable: true,\n  collapsible: true\n};\n\nContainer.storyName = 'AccordionContainer';\n\nContainer.argTypes = ARG_TYPES;\n\nContainer.args = ARGS;\n\nHook.storyName = 'useAccordion';\n\nHook.argTypes = ARG_TYPES;\n\nHook.args = ARGS;\n\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`useAccordion\\` hook manages toggle state and required accessibility\n      attributes for a group of sections.`\n    }\n  }\n};\n\nexport default {\n  component: AccordionContainer,\n  title: 'Accordion Container',\n  parameters: {\n    layout: 'centered',\n    componentSubtitle: `A container component which wraps the useAccordion hook.`\n  }\n};\n",locationsMap:{container:{startLoc:{col:25,line:22},endLoc:{col:1,line:79},startBody:{col:25,line:22},endBody:{col:1,line:79}},hook:{startLoc:{col:20,line:81},endLoc:{col:1,line:130},startBody:{col:20,line:81},endBody:{col:1,line:130}}}},_parameters.layout="centered",_parameters.componentSubtitle="A container component which wraps the useAccordion hook.",_parameters)};accordion_stories_Container.parameters=Object(esm_extends.a)({storySource:{source:"({ sections, expandable, collapsible }) => {\n  const _sections = Array(sections)\n    .fill(undefined)\n    .map((s, i) => i);\n\n  const Accordion = () => (\n    <AccordionContainer expandable={expandable} collapsible={collapsible}>\n      {({\n        getHeaderProps,\n        getTriggerProps,\n        getPanelProps,\n        expandedSections,\n        disabledSections\n      }: IUseAccordionReturnValue) => (\n        <div style={{ width: 300 }}>\n          {_sections.map((section, index) => {\n            const disabled = disabledSections.indexOf(index) !== -1;\n            const hidden = expandedSections.indexOf(index) === -1;\n\n            return (\n              <div key={section}>\n                <div {...getHeaderProps({ ariaLevel: 2 })}>\n                  <div\n                    {...getTriggerProps({\n                      index,\n                      disabled,\n                      style: {\n                        WebkitAppearance: 'button',\n                        border: '1px solid',\n                        opacity: disabled ? 0.4 : 1,\n                        padding: 1,\n                        cursor: 'pointer'\n                      }\n                    })}\n                  >\n                    {`Trigger ${index + 1}`}\n                  </div>\n                </div>\n                <p\n                  {...getPanelProps({\n                    index,\n                    style: hidden ? visuallyHidden : null\n                  })}\n                >\n                  {`[Panel ${index + 1}] `}\n                  Veggies es bonus vobis, proinde vos postulo essum magis kohlrabi welsh onion\n                  daikon amaranth tatsoi tomatillo melon azuki bean garlic.\n                </p>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </AccordionContainer>\n  );\n\n  return <Accordion />;\n}"}},accordion_stories_Container.parameters),accordion_stories_Hook.parameters=Object(esm_extends.a)({storySource:{source:"({ sections, expandable, collapsible }) => {\n  const _sections = Array(sections)\n    .fill(undefined)\n    .map((s, i) => i);\n\n  const Accordion = () => {\n    const { getHeaderProps, getTriggerProps, getPanelProps, expandedSections, disabledSections } =\n      useAccordion({ expandable, collapsible });\n\n    return (\n      <div style={{ width: 300 }}>\n        {_sections.map((section, index) => {\n          const disabled = disabledSections.indexOf(index) !== -1;\n          const hidden = expandedSections.indexOf(index) === -1;\n\n          return (\n            <div key={section}>\n              <h2 {...getHeaderProps({ role: null, ariaLevel: null })}>\n                <button\n                  {...getTriggerProps({\n                    index,\n                    role: null,\n                    tabIndex: null,\n                    disabled,\n                    style: { width: '100%', textAlign: 'inherit' }\n                  })}\n                >\n                  {`Trigger ${index + 1}`}\n                </button>\n              </h2>\n              <section\n                {...getPanelProps({\n                  index,\n                  role: null,\n                  style: hidden ? visuallyHidden : null\n                })}\n              >\n                {`[Panel ${index + 1}] `}\n                Veggies es bonus vobis, proinde vos postulo essum magis kohlrabi welsh onion daikon\n                amaranth tatsoi tomatillo melon azuki bean garlic.\n              </section>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return <Accordion />;\n}"}},accordion_stories_Hook.parameters);try{accordion_stories_Container.displayName="Container",accordion_stories_Container.__docgenInfo={description:"",displayName:"Container",props:{sections:{defaultValue:null,description:"",name:"sections",required:!0,type:{name:"any"}},expandable:{defaultValue:null,description:"",name:"expandable",required:!0,type:{name:"any"}},collapsible:{defaultValue:null,description:"",name:"collapsible",required:!0,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/accordion/accordion.stories.tsx#Container"]={docgenInfo:accordion_stories_Container.__docgenInfo,name:"Container",path:"packages/accordion/accordion.stories.tsx#Container"})}catch(__react_docgen_typescript_loader_error){}try{accordion_stories_Hook.displayName="Hook",accordion_stories_Hook.__docgenInfo={description:"",displayName:"Hook",props:{sections:{defaultValue:null,description:"",name:"sections",required:!0,type:{name:"any"}},expandable:{defaultValue:null,description:"",name:"expandable",required:!0,type:{name:"any"}},collapsible:{defaultValue:null,description:"",name:"collapsible",required:!0,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/accordion/accordion.stories.tsx#Hook"]={docgenInfo:accordion_stories_Hook.__docgenInfo,name:"Hook",path:"packages/accordion/accordion.stories.tsx#Hook"})}catch(__react_docgen_typescript_loader_error){}},2897:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Container",(function(){return breadcrumb_stories_Container})),__webpack_require__.d(__webpack_exports__,"Hook",(function(){return breadcrumb_stories_Hook}));var esm_extends=__webpack_require__(426),react=__webpack_require__(0),react_default=__webpack_require__.n(react),prop_types=__webpack_require__(2),prop_types_default=__webpack_require__.n(prop_types),objectWithoutPropertiesLoose=__webpack_require__(1748),_excluded=["role"];function useBreadcrumb(){return{getContainerProps:function getContainerProps(_temp){var _ref=void 0===_temp?{}:_temp,_ref$role=_ref.role,role=void 0===_ref$role?"navigation":_ref$role,other=Object(objectWithoutPropertiesLoose.a)(_ref,_excluded);return Object(esm_extends.a)({role:role,"aria-label":"Breadcrumb navigation","data-garden-container-id":"containers.breadcrumb","data-garden-container-version":"storybook"},other)},getCurrentPageProps:function getCurrentPageProps(props){return void 0===props&&(props={}),Object(esm_extends.a)({"aria-current":"page"},props)}}}var _parameters,BreadcrumbContainer_BreadcrumbContainer=function BreadcrumbContainer(_ref){var children=_ref.children,_ref$render=_ref.render,render=void 0===_ref$render?children:_ref$render;return react_default.a.createElement(react_default.a.Fragment,null,render(useBreadcrumb()))};BreadcrumbContainer_BreadcrumbContainer.propTypes={render:prop_types_default.a.func,children:prop_types_default.a.func};try{BreadcrumbContainer_BreadcrumbContainer.displayName="BreadcrumbContainer",BreadcrumbContainer_BreadcrumbContainer.__docgenInfo={description:"",displayName:"BreadcrumbContainer",props:{render:{defaultValue:null,description:"A render prop function",name:"render",required:!1,type:{name:"((options: IUseBreadcrumbReturnValue) => ReactNode)"}},children:{defaultValue:null,description:"A children render prop function",name:"children",required:!1,type:{name:"(((options: IUseBreadcrumbReturnValue) => ReactNode) & (boolean | ReactChild | ReactFragment | ReactPortal | null))"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/breadcrumb/src/BreadcrumbContainer.tsx#BreadcrumbContainer"]={docgenInfo:BreadcrumbContainer_BreadcrumbContainer.__docgenInfo,name:"BreadcrumbContainer",path:"packages/breadcrumb/src/BreadcrumbContainer.tsx#BreadcrumbContainer"})}catch(__react_docgen_typescript_loader_error){}var breadcrumb_stories_Container=function Container(){return react_default.a.createElement(BreadcrumbContainer_BreadcrumbContainer,null,(function(_ref){var getContainerProps=_ref.getContainerProps,getCurrentPageProps=_ref.getCurrentPageProps;return react_default.a.createElement("div",getContainerProps(),react_default.a.createElement("a",{href:"#foo"},"Home"),react_default.a.createElement("span",{"aria-hidden":"true"},">"),react_default.a.createElement("a",getCurrentPageProps({href:"#foo"}),"Items"))}))},breadcrumb_stories_Hook=function Hook(){var _useBreadcrumb=useBreadcrumb(),getContainerProps=_useBreadcrumb.getContainerProps,getCurrentPageProps=_useBreadcrumb.getCurrentPageProps;return react_default.a.createElement("div",getContainerProps(),react_default.a.createElement("a",{href:"#foo"},"Home"),react_default.a.createElement("span",{"aria-hidden":"true"},">"),react_default.a.createElement("a",getCurrentPageProps({href:"#"}),"Items"))};breadcrumb_stories_Hook.storyName="useBreadcrumb",breadcrumb_stories_Hook.parameters={docs:{description:{story:"The `useBreadcrumb` hook implements the [breadcrumb](https://www.w3.org/TR/wai-aria-practices-1.1/#breadcrumb) design pattern and can be used to build a breadcrumb component."}}},breadcrumb_stories_Container.storyName="BreadcrumbContainer";__webpack_exports__.default={title:"Breadcrumb Container",component:BreadcrumbContainer_BreadcrumbContainer,parameters:(_parameters={storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React from \'react\';\\nimport { BreadcrumbContainer, useBreadcrumb } from \'./src\';\\n\\nexport const Container = () => (\\n  <BreadcrumbContainer>\\n    {({ getContainerProps, getCurrentPageProps }) => (\\n      <div {...getContainerProps()}>\\n        <a href=\\"#foo\\">Home</a>\\n        <span aria-hidden=\\"true\\">&gt;</span>\\n        <a {...getCurrentPageProps({ href: \'#foo\' })}>Items</a>\\n      </div>\\n    )}\\n  </BreadcrumbContainer>\\n);\\n\\nexport const Hook = () => {\\n  const { getContainerProps, getCurrentPageProps } = useBreadcrumb();\\n\\n  return (\\n    <div {...getContainerProps()}>\\n      <a href=\\"#foo\\">Home</a>\\n      <span aria-hidden=\\"true\\">&gt;</span>\\n      <a {...getCurrentPageProps({ href: \'#\' })}>Items</a>\\n    </div>\\n  );\\n};\\n\\nHook.storyName = \'useBreadcrumb\';\\n\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`useBreadcrumb\\\\` hook implements the [breadcrumb](https://www.w3.org/TR/wai-aria-practices-1.1/#breadcrumb) design pattern and can be used to build a breadcrumb component.`\\n    }\\n  }\\n};\\n\\nContainer.storyName = \'BreadcrumbContainer\';\\n\\nexport default {\\n  title: \'Breadcrumb Container\',\\n  component: BreadcrumbContainer,\\n  parameters: {\\n    layout: \'centered\',\\n    componentSubtitle: `A container component which wraps the useBreadcrumb hook.`\\n  }\\n};\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Container":{"startLoc":{"col":25,"line":11},"endLoc":{"col":1,"line":21},"startBody":{"col":25,"line":11},"endBody":{"col":1,"line":21}},"Hook":{"startLoc":{"col":20,"line":23},"endLoc":{"col":1,"line":33},"startBody":{"col":20,"line":23},"endBody":{"col":1,"line":33}}};\n    \n/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React from \'react\';\nimport { BreadcrumbContainer, useBreadcrumb } from \'./src\';\n\nexport const Container = () => (\n  <BreadcrumbContainer>\n    {({ getContainerProps, getCurrentPageProps }) => (\n      <div {...getContainerProps()}>\n        <a href="#foo">Home</a>\n        <span aria-hidden="true">&gt;</span>\n        <a {...getCurrentPageProps({ href: \'#foo\' })}>Items</a>\n      </div>\n    )}\n  </BreadcrumbContainer>\n);;\n\nexport const Hook = () => {\n  const { getContainerProps, getCurrentPageProps } = useBreadcrumb();\n\n  return (\n    <div {...getContainerProps()}>\n      <a href="#foo">Home</a>\n      <span aria-hidden="true">&gt;</span>\n      <a {...getCurrentPageProps({ href: \'#\' })}>Items</a>\n    </div>\n  );\n};\n\nHook.storyName = \'useBreadcrumb\';\n\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`useBreadcrumb\\` hook implements the [breadcrumb](https://www.w3.org/TR/wai-aria-practices-1.1/#breadcrumb) design pattern and can be used to build a breadcrumb component.`\n    }\n  }\n};\n\nContainer.storyName = \'BreadcrumbContainer\';\n\nexport default {\n  title: \'Breadcrumb Container\',\n  component: BreadcrumbContainer,\n  parameters: {"storySource":{"source":"/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React from \'react\';\\nimport { BreadcrumbContainer, useBreadcrumb } from \'./src\';\\n\\nexport const Container = () => (\\n  <BreadcrumbContainer>\\n    {({ getContainerProps, getCurrentPageProps }) => (\\n      <div {...getContainerProps()}>\\n        <a href=\\"#foo\\">Home</a>\\n        <span aria-hidden=\\"true\\">&gt;</span>\\n        <a {...getCurrentPageProps({ href: \'#foo\' })}>Items</a>\\n      </div>\\n    )}\\n  </BreadcrumbContainer>\\n);\\n\\nexport const Hook = () => {\\n  const { getContainerProps, getCurrentPageProps } = useBreadcrumb();\\n\\n  return (\\n    <div {...getContainerProps()}>\\n      <a href=\\"#foo\\">Home</a>\\n      <span aria-hidden=\\"true\\">&gt;</span>\\n      <a {...getCurrentPageProps({ href: \'#\' })}>Items</a>\\n    </div>\\n  );\\n};\\n\\nHook.storyName = \'useBreadcrumb\';\\n\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`useBreadcrumb\\\\` hook implements the [breadcrumb](https://www.w3.org/TR/wai-aria-practices-1.1/#breadcrumb) design pattern and can be used to build a breadcrumb component.`\\n    }\\n  }\\n};\\n\\nContainer.storyName = \'BreadcrumbContainer\';\\n\\nexport default {\\n  title: \'Breadcrumb Container\',\\n  component: BreadcrumbContainer,\\n  parameters: {\\n    layout: \'centered\',\\n    componentSubtitle: `A container component which wraps the useBreadcrumb hook.`\\n  }\\n};\\n","locationsMap":{"container":{"startLoc":{"col":25,"line":11},"endLoc":{"col":1,"line":21},"startBody":{"col":25,"line":11},"endBody":{"col":1,"line":21}},"hook":{"startLoc":{"col":20,"line":23},"endLoc":{"col":1,"line":33},"startBody":{"col":20,"line":23},"endBody":{"col":1,"line":33}}}},\n    layout: \'centered\',\n    componentSubtitle: `A container component which wraps the useBreadcrumb hook.`\n  },};\n',locationsMap:{container:{startLoc:{col:25,line:19},endLoc:{col:1,line:29},startBody:{col:25,line:19},endBody:{col:1,line:29}},hook:{startLoc:{col:20,line:31},endLoc:{col:1,line:41},startBody:{col:20,line:31},endBody:{col:1,line:41}}}}},_parameters.storySource={source:"/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React from 'react';\nimport { BreadcrumbContainer, useBreadcrumb } from './src';\n\nexport const Container = () => (\n  <BreadcrumbContainer>\n    {({ getContainerProps, getCurrentPageProps }) => (\n      <div {...getContainerProps()}>\n        <a href=\"#foo\">Home</a>\n        <span aria-hidden=\"true\">&gt;</span>\n        <a {...getCurrentPageProps({ href: '#foo' })}>Items</a>\n      </div>\n    )}\n  </BreadcrumbContainer>\n);\n\nexport const Hook = () => {\n  const { getContainerProps, getCurrentPageProps } = useBreadcrumb();\n\n  return (\n    <div {...getContainerProps()}>\n      <a href=\"#foo\">Home</a>\n      <span aria-hidden=\"true\">&gt;</span>\n      <a {...getCurrentPageProps({ href: '#' })}>Items</a>\n    </div>\n  );\n};\n\nHook.storyName = 'useBreadcrumb';\n\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`useBreadcrumb\\` hook implements the [breadcrumb](https://www.w3.org/TR/wai-aria-practices-1.1/#breadcrumb) design pattern and can be used to build a breadcrumb component.`\n    }\n  }\n};\n\nContainer.storyName = 'BreadcrumbContainer';\n\nexport default {\n  title: 'Breadcrumb Container',\n  component: BreadcrumbContainer,\n  parameters: {\n    layout: 'centered',\n    componentSubtitle: `A container component which wraps the useBreadcrumb hook.`\n  }\n};\n",locationsMap:{container:{startLoc:{col:25,line:11},endLoc:{col:1,line:21},startBody:{col:25,line:11},endBody:{col:1,line:21}},hook:{startLoc:{col:20,line:23},endLoc:{col:1,line:33},startBody:{col:20,line:23},endBody:{col:1,line:33}}}},_parameters.layout="centered",_parameters.componentSubtitle="A container component which wraps the useBreadcrumb hook.",_parameters)};breadcrumb_stories_Container.parameters=Object(esm_extends.a)({storySource:{source:'() => (\n  <BreadcrumbContainer>\n    {({ getContainerProps, getCurrentPageProps }) => (\n      <div {...getContainerProps()}>\n        <a href="#foo">Home</a>\n        <span aria-hidden="true">&gt;</span>\n        <a {...getCurrentPageProps({ href: \'#foo\' })}>Items</a>\n      </div>\n    )}\n  </BreadcrumbContainer>\n)'}},breadcrumb_stories_Container.parameters),breadcrumb_stories_Hook.parameters=Object(esm_extends.a)({storySource:{source:'() => {\n  const { getContainerProps, getCurrentPageProps } = useBreadcrumb();\n\n  return (\n    <div {...getContainerProps()}>\n      <a href="#foo">Home</a>\n      <span aria-hidden="true">&gt;</span>\n      <a {...getCurrentPageProps({ href: \'#\' })}>Items</a>\n    </div>\n  );\n}'}},breadcrumb_stories_Hook.parameters)},2898:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Container",(function(){return buttongroup_stories_Container})),__webpack_require__.d(__webpack_exports__,"Hook",(function(){return buttongroup_stories_Hook}));__webpack_require__(290);var esm_extends=__webpack_require__(427),react=__webpack_require__(0),react_default=__webpack_require__.n(react),objectWithoutPropertiesLoose=__webpack_require__(556),prop_types=__webpack_require__(2),prop_types_default=__webpack_require__.n(prop_types),index_esm=__webpack_require__(418),_excluded=["role"],_excluded2=["role","selectedAriaKey"];function useButtonGroup(options){var _useSelection=Object(index_esm.a)(options),selectedItem=_useSelection.selectedItem,focusedItem=_useSelection.focusedItem,getContainerProps=_useSelection.getContainerProps,getItemProps=_useSelection.getItemProps;return{selectedItem:selectedItem,focusedItem:focusedItem,getGroupProps:function getGroupProps(props){return getContainerProps(function getGroupProps(_temp){var _ref=void 0===_temp?{}:_temp,_ref$role=_ref.role,role=void 0===_ref$role?"group":_ref$role,other=Object(objectWithoutPropertiesLoose.a)(_ref,_excluded);return Object(esm_extends.a)({role:role,"data-garden-container-id":"containers.buttongroup","data-garden-container-version":"storybook"},other)}(props))},getButtonProps:function getButtonProps(props){return getItemProps(function getButtonProps(_temp2){var _ref2=void 0===_temp2?{}:_temp2,_ref2$role=_ref2.role,role=void 0===_ref2$role?"button":_ref2$role,_ref2$selectedAriaKey=_ref2.selectedAriaKey,selectedAriaKey=void 0===_ref2$selectedAriaKey?"aria-pressed":_ref2$selectedAriaKey,other=Object(objectWithoutPropertiesLoose.a)(_ref2,_excluded2);return Object(esm_extends.a)({role:role,selectedAriaKey:selectedAriaKey},other)}(props),"getButtonProps")}}}var _parameters,ButtonGroupContainer_excluded=["children","render"],ButtonGroupContainer_ButtonGroupContainer=function ButtonGroupContainer(_ref){var children=_ref.children,_ref$render=_ref.render,render=void 0===_ref$render?children:_ref$render,options=Object(objectWithoutPropertiesLoose.a)(_ref,ButtonGroupContainer_excluded);return react_default.a.createElement(react_default.a.Fragment,null,render(useButtonGroup(options)))};ButtonGroupContainer_ButtonGroupContainer.propTypes={children:prop_types_default.a.func,render:prop_types_default.a.func,focusedItem:prop_types_default.a.any,selectedItem:prop_types_default.a.any,onSelect:prop_types_default.a.func,onFocus:prop_types_default.a.func};try{ButtonGroupContainer_ButtonGroupContainer.displayName="ButtonGroupContainer",ButtonGroupContainer_ButtonGroupContainer.__docgenInfo={description:"",displayName:"ButtonGroupContainer",props:{render:{defaultValue:null,description:"A render prop function",name:"render",required:!1,type:{name:"((options: UseButtonGroupReturnValue<any>) => ReactNode)"}},children:{defaultValue:null,description:"A children render prop function",name:"children",required:!1,type:{name:"(((options: UseButtonGroupReturnValue<any>) => ReactNode) & (boolean | ReactChild | ReactFragment | ReactPortal | null))"}},direction:{defaultValue:null,description:"Determines the orientation of the selection",name:"direction",required:!1,type:{name:"enum",value:[{value:'"vertical"'},{value:'"horizontal"'},{value:'"both"'}]}},defaultFocusedIndex:{defaultValue:null,description:"Sets the initial focused item",name:"defaultFocusedIndex",required:!1,type:{name:"number"}},defaultSelectedIndex:{defaultValue:null,description:"Sets the initial selected item",name:"defaultSelectedIndex",required:!1,type:{name:"number"}},rtl:{defaultValue:null,description:"Determines if selection uses right-to-left writing direction",name:"rtl",required:!1,type:{name:"boolean"}},selectedItem:{defaultValue:null,description:"Sets the selected item in a controlled selection",name:"selectedItem",required:!1,type:{name:"any"}},focusedItem:{defaultValue:null,description:"Sets the focused item in a controlled selection",name:"focusedItem",required:!1,type:{name:"any"}},onSelect:{defaultValue:null,description:"A callback function that receives the selected item",name:"onSelect",required:!1,type:{name:"((selectedItem: any) => void)"}},onFocus:{defaultValue:null,description:"A callback function that receives the focused item",name:"onFocus",required:!1,type:{name:"((focusedItem?: any) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/buttongroup/src/ButtonGroupContainer.tsx#ButtonGroupContainer"]={docgenInfo:ButtonGroupContainer_ButtonGroupContainer.__docgenInfo,name:"ButtonGroupContainer",path:"packages/buttongroup/src/ButtonGroupContainer.tsx#ButtonGroupContainer"})}catch(__react_docgen_typescript_loader_error){}var buttons=["Button 1","Button 2","Button 3"],buttonRefs=buttons.map((function(){return Object(react.createRef)()})),buttongroup_stories_Container=function Container(){return react_default.a.createElement(ButtonGroupContainer_ButtonGroupContainer,null,(function(_ref){var selectedItem=_ref.selectedItem,focusedItem=_ref.focusedItem,getButtonProps=_ref.getButtonProps,getGroupProps=_ref.getGroupProps;return react_default.a.createElement("div",getGroupProps(),buttons.map((function(button,index){return react_default.a.createElement("button",getButtonProps({key:button,item:button,focusRef:buttonRefs[index],style:{boxShadow:button===focusedItem?"inset 0 0 0 3px rgba(31,115,183, 0.35)":"inherit",outline:"none",color:button===selectedItem?"#fff":"#1f73b7",background:button===selectedItem?"#144a75":"inherit",padding:"10px"}}),button)})))}))},buttongroup_stories_Hook=function Hook(){var _useState=Object(react.useState)(),controlledSelectedItem=_useState[0],setSelectedItem=_useState[1],_useButtonGroup=useButtonGroup({selectedItem:controlledSelectedItem,onSelect:function onSelect(newSelectedItem){return setSelectedItem(newSelectedItem)}}),selectedItem=_useButtonGroup.selectedItem,focusedItem=_useButtonGroup.focusedItem,getButtonProps=_useButtonGroup.getButtonProps,getGroupProps=_useButtonGroup.getGroupProps;return react_default.a.createElement("div",getGroupProps(),buttons.map((function(button,index){return react_default.a.createElement("button",getButtonProps({key:button,item:button,focusRef:buttonRefs[index],style:{boxShadow:button===focusedItem?"inset 0 0 0 3px rgba(31,115,183, 0.35)":"inherit",outline:"none",color:button===selectedItem?"#fff":"#1f73b7",background:button===selectedItem?"#144a75":"inherit",padding:"10px"}}),button)})))};buttongroup_stories_Container.storyName="ButtongroupContainer",buttongroup_stories_Hook.storyName="useButtongroup",buttongroup_stories_Hook.parameters={docs:{description:{story:"The `useButtonGroup` hook manages focus, selection and accessibility attributes\n        required for a group of buttons. Garden uses this in [react-components](https://github.com/zendeskgarden/react-components)\n        for the [buttons package](https://github.com/zendeskgarden/react-components/tree/main/packages/buttons)."}}};__webpack_exports__.default={title:"Buttongroup Container",component:ButtonGroupContainer_ButtonGroupContainer,parameters:(_parameters={storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React, { createRef, useState } from 'react';\\nimport { ButtonGroupContainer, useButtonGroup } from './src';\\n\\nconst buttons = ['Button 1', 'Button 2', 'Button 3'];\\nconst buttonRefs = buttons.map(() => createRef());\\n\\nexport const Container = () => (\\n  <ButtonGroupContainer>\\n    {({ selectedItem, focusedItem, getButtonProps, getGroupProps }) => (\\n      <div {...getGroupProps()}>\\n        {buttons.map((button, index) => (\\n          <button\\n            {...getButtonProps({\\n              key: button,\\n              item: button,\\n              focusRef: buttonRefs[index],\\n              style: {\\n                boxShadow:\\n                  button === focusedItem ? 'inset 0 0 0 3px rgba(31,115,183, 0.35)' : 'inherit',\\n                outline: 'none',\\n                color: button === selectedItem ? '#fff' : '#1f73b7',\\n                background: button === selectedItem ? '#144a75' : 'inherit',\\n                padding: '10px'\\n              }\\n            })}\\n          >\\n            {button}\\n          </button>\\n        ))}\\n      </div>\\n    )}\\n  </ButtonGroupContainer>\\n);\\n\\nexport const Hook = () => {\\n  const [controlledSelectedItem, setSelectedItem] = useState<string>();\\n  const { selectedItem, focusedItem, getButtonProps, getGroupProps } = useButtonGroup<string>({\\n    selectedItem: controlledSelectedItem,\\n    onSelect: newSelectedItem => setSelectedItem(newSelectedItem)\\n  });\\n\\n  return (\\n    <div {...getGroupProps()}>\\n      {buttons.map((button, index) => (\\n        <button\\n          {...getButtonProps({\\n            key: button,\\n            item: button,\\n            focusRef: buttonRefs[index],\\n            style: {\\n              boxShadow:\\n                button === focusedItem ? 'inset 0 0 0 3px rgba(31,115,183, 0.35)' : 'inherit',\\n              outline: 'none',\\n              color: button === selectedItem ? '#fff' : '#1f73b7',\\n              background: button === selectedItem ? '#144a75' : 'inherit',\\n              padding: '10px'\\n            }\\n          })}\\n        >\\n          {button}\\n        </button>\\n      ))}\\n    </div>\\n  );\\n};\\n\\nContainer.storyName = 'ButtongroupContainer';\\n\\nHook.storyName = 'useButtongroup';\\n\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`useButtonGroup\\\\` hook manages focus, selection and accessibility attributes\\n        required for a group of buttons. Garden uses this in [react-components](https://github.com/zendeskgarden/react-components)\\n        for the [buttons package](https://github.com/zendeskgarden/react-components/tree/main/packages/buttons).`\\n    }\\n  }\\n};\\n\\nexport default {\\n  title: 'Buttongroup Container',\\n  component: ButtonGroupContainer,\\n  parameters: {\\n    layout: 'centered',\\n    componentSubtitle: `A container component which wraps the useButtongroup hook.`\\n  }\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Container\":{\"startLoc\":{\"col\":25,\"line\":14},\"endLoc\":{\"col\":1,\"line\":40},\"startBody\":{\"col\":25,\"line\":14},\"endBody\":{\"col\":1,\"line\":40}},\"Hook\":{\"startLoc\":{\"col\":20,\"line\":42},\"endLoc\":{\"col\":1,\"line\":72},\"startBody\":{\"col\":20,\"line\":42},\"endBody\":{\"col\":1,\"line\":72}}};\n    \n/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React, { createRef, useState } from 'react';\nimport { ButtonGroupContainer, useButtonGroup } from './src';\n\nconst buttons = ['Button 1', 'Button 2', 'Button 3'];\nconst buttonRefs = buttons.map(() => createRef());\n\nexport const Container = () => (\n  <ButtonGroupContainer>\n    {({ selectedItem, focusedItem, getButtonProps, getGroupProps }) => (\n      <div {...getGroupProps()}>\n        {buttons.map((button, index) => (\n          <button\n            {...getButtonProps({\n              key: button,\n              item: button,\n              focusRef: buttonRefs[index],\n              style: {\n                boxShadow:\n                  button === focusedItem ? 'inset 0 0 0 3px rgba(31,115,183, 0.35)' : 'inherit',\n                outline: 'none',\n                color: button === selectedItem ? '#fff' : '#1f73b7',\n                background: button === selectedItem ? '#144a75' : 'inherit',\n                padding: '10px'\n              }\n            })}\n          >\n            {button}\n          </button>\n        ))}\n      </div>\n    )}\n  </ButtonGroupContainer>\n);;\n\nexport const Hook = () => {\n  const [controlledSelectedItem, setSelectedItem] = useState<string>();\n  const { selectedItem, focusedItem, getButtonProps, getGroupProps } = useButtonGroup<string>({\n    selectedItem: controlledSelectedItem,\n    onSelect: newSelectedItem => setSelectedItem(newSelectedItem)\n  });\n\n  return (\n    <div {...getGroupProps()}>\n      {buttons.map((button, index) => (\n        <button\n          {...getButtonProps({\n            key: button,\n            item: button,\n            focusRef: buttonRefs[index],\n            style: {\n              boxShadow:\n                button === focusedItem ? 'inset 0 0 0 3px rgba(31,115,183, 0.35)' : 'inherit',\n              outline: 'none',\n              color: button === selectedItem ? '#fff' : '#1f73b7',\n              background: button === selectedItem ? '#144a75' : 'inherit',\n              padding: '10px'\n            }\n          })}\n        >\n          {button}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nContainer.storyName = 'ButtongroupContainer';\n\nHook.storyName = 'useButtongroup';\n\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`useButtonGroup\\` hook manages focus, selection and accessibility attributes\n        required for a group of buttons. Garden uses this in [react-components](https://github.com/zendeskgarden/react-components)\n        for the [buttons package](https://github.com/zendeskgarden/react-components/tree/main/packages/buttons).`\n    }\n  }\n};\n\nexport default {\n  title: 'Buttongroup Container',\n  component: ButtonGroupContainer,\n  parameters: {\"storySource\":{\"source\":\"/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React, { createRef, useState } from 'react';\\nimport { ButtonGroupContainer, useButtonGroup } from './src';\\n\\nconst buttons = ['Button 1', 'Button 2', 'Button 3'];\\nconst buttonRefs = buttons.map(() => createRef());\\n\\nexport const Container = () => (\\n  <ButtonGroupContainer>\\n    {({ selectedItem, focusedItem, getButtonProps, getGroupProps }) => (\\n      <div {...getGroupProps()}>\\n        {buttons.map((button, index) => (\\n          <button\\n            {...getButtonProps({\\n              key: button,\\n              item: button,\\n              focusRef: buttonRefs[index],\\n              style: {\\n                boxShadow:\\n                  button === focusedItem ? 'inset 0 0 0 3px rgba(31,115,183, 0.35)' : 'inherit',\\n                outline: 'none',\\n                color: button === selectedItem ? '#fff' : '#1f73b7',\\n                background: button === selectedItem ? '#144a75' : 'inherit',\\n                padding: '10px'\\n              }\\n            })}\\n          >\\n            {button}\\n          </button>\\n        ))}\\n      </div>\\n    )}\\n  </ButtonGroupContainer>\\n);\\n\\nexport const Hook = () => {\\n  const [controlledSelectedItem, setSelectedItem] = useState<string>();\\n  const { selectedItem, focusedItem, getButtonProps, getGroupProps } = useButtonGroup<string>({\\n    selectedItem: controlledSelectedItem,\\n    onSelect: newSelectedItem => setSelectedItem(newSelectedItem)\\n  });\\n\\n  return (\\n    <div {...getGroupProps()}>\\n      {buttons.map((button, index) => (\\n        <button\\n          {...getButtonProps({\\n            key: button,\\n            item: button,\\n            focusRef: buttonRefs[index],\\n            style: {\\n              boxShadow:\\n                button === focusedItem ? 'inset 0 0 0 3px rgba(31,115,183, 0.35)' : 'inherit',\\n              outline: 'none',\\n              color: button === selectedItem ? '#fff' : '#1f73b7',\\n              background: button === selectedItem ? '#144a75' : 'inherit',\\n              padding: '10px'\\n            }\\n          })}\\n        >\\n          {button}\\n        </button>\\n      ))}\\n    </div>\\n  );\\n};\\n\\nContainer.storyName = 'ButtongroupContainer';\\n\\nHook.storyName = 'useButtongroup';\\n\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`useButtonGroup\\\\` hook manages focus, selection and accessibility attributes\\n        required for a group of buttons. Garden uses this in [react-components](https://github.com/zendeskgarden/react-components)\\n        for the [buttons package](https://github.com/zendeskgarden/react-components/tree/main/packages/buttons).`\\n    }\\n  }\\n};\\n\\nexport default {\\n  title: 'Buttongroup Container',\\n  component: ButtonGroupContainer,\\n  parameters: {\\n    layout: 'centered',\\n    componentSubtitle: `A container component which wraps the useButtongroup hook.`\\n  }\\n};\\n\",\"locationsMap\":{\"container\":{\"startLoc\":{\"col\":25,\"line\":14},\"endLoc\":{\"col\":1,\"line\":40},\"startBody\":{\"col\":25,\"line\":14},\"endBody\":{\"col\":1,\"line\":40}},\"hook\":{\"startLoc\":{\"col\":20,\"line\":42},\"endLoc\":{\"col\":1,\"line\":72},\"startBody\":{\"col\":20,\"line\":42},\"endBody\":{\"col\":1,\"line\":72}}}},\n    layout: 'centered',\n    componentSubtitle: `A container component which wraps the useButtongroup hook.`\n  },};\n",locationsMap:{container:{startLoc:{col:25,line:22},endLoc:{col:1,line:48},startBody:{col:25,line:22},endBody:{col:1,line:48}},hook:{startLoc:{col:20,line:50},endLoc:{col:1,line:80},startBody:{col:20,line:50},endBody:{col:1,line:80}}}}},_parameters.storySource={source:"/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React, { createRef, useState } from 'react';\nimport { ButtonGroupContainer, useButtonGroup } from './src';\n\nconst buttons = ['Button 1', 'Button 2', 'Button 3'];\nconst buttonRefs = buttons.map(() => createRef());\n\nexport const Container = () => (\n  <ButtonGroupContainer>\n    {({ selectedItem, focusedItem, getButtonProps, getGroupProps }) => (\n      <div {...getGroupProps()}>\n        {buttons.map((button, index) => (\n          <button\n            {...getButtonProps({\n              key: button,\n              item: button,\n              focusRef: buttonRefs[index],\n              style: {\n                boxShadow:\n                  button === focusedItem ? 'inset 0 0 0 3px rgba(31,115,183, 0.35)' : 'inherit',\n                outline: 'none',\n                color: button === selectedItem ? '#fff' : '#1f73b7',\n                background: button === selectedItem ? '#144a75' : 'inherit',\n                padding: '10px'\n              }\n            })}\n          >\n            {button}\n          </button>\n        ))}\n      </div>\n    )}\n  </ButtonGroupContainer>\n);\n\nexport const Hook = () => {\n  const [controlledSelectedItem, setSelectedItem] = useState<string>();\n  const { selectedItem, focusedItem, getButtonProps, getGroupProps } = useButtonGroup<string>({\n    selectedItem: controlledSelectedItem,\n    onSelect: newSelectedItem => setSelectedItem(newSelectedItem)\n  });\n\n  return (\n    <div {...getGroupProps()}>\n      {buttons.map((button, index) => (\n        <button\n          {...getButtonProps({\n            key: button,\n            item: button,\n            focusRef: buttonRefs[index],\n            style: {\n              boxShadow:\n                button === focusedItem ? 'inset 0 0 0 3px rgba(31,115,183, 0.35)' : 'inherit',\n              outline: 'none',\n              color: button === selectedItem ? '#fff' : '#1f73b7',\n              background: button === selectedItem ? '#144a75' : 'inherit',\n              padding: '10px'\n            }\n          })}\n        >\n          {button}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nContainer.storyName = 'ButtongroupContainer';\n\nHook.storyName = 'useButtongroup';\n\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`useButtonGroup\\` hook manages focus, selection and accessibility attributes\n        required for a group of buttons. Garden uses this in [react-components](https://github.com/zendeskgarden/react-components)\n        for the [buttons package](https://github.com/zendeskgarden/react-components/tree/main/packages/buttons).`\n    }\n  }\n};\n\nexport default {\n  title: 'Buttongroup Container',\n  component: ButtonGroupContainer,\n  parameters: {\n    layout: 'centered',\n    componentSubtitle: `A container component which wraps the useButtongroup hook.`\n  }\n};\n",locationsMap:{container:{startLoc:{col:25,line:14},endLoc:{col:1,line:40},startBody:{col:25,line:14},endBody:{col:1,line:40}},hook:{startLoc:{col:20,line:42},endLoc:{col:1,line:72},startBody:{col:20,line:42},endBody:{col:1,line:72}}}},_parameters.layout="centered",_parameters.componentSubtitle="A container component which wraps the useButtongroup hook.",_parameters)};buttongroup_stories_Container.parameters=Object(esm_extends.a)({storySource:{source:"() => (\n  <ButtonGroupContainer>\n    {({ selectedItem, focusedItem, getButtonProps, getGroupProps }) => (\n      <div {...getGroupProps()}>\n        {buttons.map((button, index) => (\n          <button\n            {...getButtonProps({\n              key: button,\n              item: button,\n              focusRef: buttonRefs[index],\n              style: {\n                boxShadow:\n                  button === focusedItem ? 'inset 0 0 0 3px rgba(31,115,183, 0.35)' : 'inherit',\n                outline: 'none',\n                color: button === selectedItem ? '#fff' : '#1f73b7',\n                background: button === selectedItem ? '#144a75' : 'inherit',\n                padding: '10px'\n              }\n            })}\n          >\n            {button}\n          </button>\n        ))}\n      </div>\n    )}\n  </ButtonGroupContainer>\n)"}},buttongroup_stories_Container.parameters),buttongroup_stories_Hook.parameters=Object(esm_extends.a)({storySource:{source:"() => {\n  const [controlledSelectedItem, setSelectedItem] = useState<string>();\n  const { selectedItem, focusedItem, getButtonProps, getGroupProps } = useButtonGroup<string>({\n    selectedItem: controlledSelectedItem,\n    onSelect: newSelectedItem => setSelectedItem(newSelectedItem)\n  });\n\n  return (\n    <div {...getGroupProps()}>\n      {buttons.map((button, index) => (\n        <button\n          {...getButtonProps({\n            key: button,\n            item: button,\n            focusRef: buttonRefs[index],\n            style: {\n              boxShadow:\n                button === focusedItem ? 'inset 0 0 0 3px rgba(31,115,183, 0.35)' : 'inherit',\n              outline: 'none',\n              color: button === selectedItem ? '#fff' : '#1f73b7',\n              background: button === selectedItem ? '#144a75' : 'inherit',\n              padding: '10px'\n            }\n          })}\n        >\n          {button}\n        </button>\n      ))}\n    </div>\n  );\n}"}},buttongroup_stories_Hook.parameters)},2899:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Container",(function(){return field_stories_Container})),__webpack_require__.d(__webpack_exports__,"Hook",(function(){return field_stories_Hook}));var esm_extends=__webpack_require__(344),react=__webpack_require__(0),react_default=__webpack_require__.n(react),es2015=__webpack_require__(770),prop_types=__webpack_require__(2),prop_types_default=__webpack_require__.n(prop_types),objectWithoutPropertiesLoose=__webpack_require__(776),hooks=__webpack_require__(1124),_excluded=["id","htmlFor"],_excluded2=["id"],_excluded3=["id"];function useField(idPrefix){var seed=Object(hooks.a)(),prefix=Object(react.useState)(idPrefix||seed("field_storybook"))[0],inputId=prefix+"--input",labelId=prefix+"--label",hintId=prefix+"--hint";return{getLabelProps:function getLabelProps(_temp){var _ref=void 0===_temp?{}:_temp,_ref$id=_ref.id,id=void 0===_ref$id?labelId:_ref$id,_ref$htmlFor=_ref.htmlFor,htmlFor=void 0===_ref$htmlFor?inputId:_ref$htmlFor,other=Object(objectWithoutPropertiesLoose.a)(_ref,_excluded);return Object(esm_extends.a)({id:id,htmlFor:htmlFor,"data-garden-container-id":"containers.field","data-garden-container-version":"storybook"},other)},getInputProps:function getInputProps(_temp2,_temp3){var _ref2=void 0===_temp2?{}:_temp2,_ref2$id=_ref2.id,id=void 0===_ref2$id?inputId:_ref2$id,other=Object(objectWithoutPropertiesLoose.a)(_ref2,_excluded2),_ref3$isDescribed=(void 0===_temp3?{}:_temp3).isDescribed,isDescribed=void 0!==_ref3$isDescribed&&_ref3$isDescribed;return Object(esm_extends.a)({id:id,"aria-labelledby":labelId,"aria-describedby":isDescribed?hintId:null},other)},getHintProps:function getHintProps(_temp4){var _ref4=void 0===_temp4?{}:_temp4,_ref4$id=_ref4.id,id=void 0===_ref4$id?hintId:_ref4$id,other=Object(objectWithoutPropertiesLoose.a)(_ref4,_excluded3);return Object(esm_extends.a)({id:id},other)}}}var _parameters,FieldContainer_FieldContainer=function FieldContainer(_ref){var children=_ref.children,_ref$render=_ref.render,render=void 0===_ref$render?children:_ref$render,id=_ref.id;return react_default.a.createElement(react_default.a.Fragment,null,render(useField(id)))};FieldContainer_FieldContainer.propTypes={children:prop_types_default.a.func,render:prop_types_default.a.func,id:prop_types_default.a.string};try{FieldContainer_FieldContainer.displayName="FieldContainer",FieldContainer_FieldContainer.__docgenInfo={description:"",displayName:"FieldContainer",props:{render:{defaultValue:null,description:"A render prop function which receives field prop getters",name:"render",required:!1,type:{name:"((options: IUseFieldPropGetters) => ReactNode)"}},children:{defaultValue:null,description:"A children render prop function which receives field prop getters",name:"children",required:!1,type:{name:"(((options: IUseFieldPropGetters) => ReactNode) & (boolean | ReactChild | ReactFragment | ReactPortal | null))"}},id:{defaultValue:null,description:"An identifer for the field input elements",name:"id",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/field/src/FieldContainer.tsx#FieldContainer"]={docgenInfo:FieldContainer_FieldContainer.__docgenInfo,name:"FieldContainer",path:"packages/field/src/FieldContainer.tsx#FieldContainer"})}catch(__react_docgen_typescript_loader_error){}var field_stories_Container=function Container(_ref){var id=_ref.id;return react_default.a.createElement(FieldContainer_FieldContainer,{id:id},(function(_ref2){var getLabelProps=_ref2.getLabelProps,getInputProps=_ref2.getInputProps,getHintProps=_ref2.getHintProps;return react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement("label",getLabelProps(),"Accessible Native Input"),react_default.a.createElement("div",getHintProps(),"Optional Hint"),react_default.a.createElement("input",getInputProps({},{isDescribed:!0})))}))},field_stories_Hook=function Hook(_ref3){var id=_ref3.id,Field=function Field(){var _useField=useField(id),getLabelProps=_useField.getLabelProps,getInputProps=_useField.getInputProps,getHintProps=_useField.getHintProps,_React$useState=react_default.a.useState(""),value=_React$useState[0],setVal=_React$useState[1];return react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement("label",getLabelProps(),"Accessible Native Input"),react_default.a.createElement("div",getHintProps(),"Optional Hint"),react_default.a.createElement("input",getInputProps({value:value,onChange:function onChange(event){return setVal(event.target.value)}},{isDescribed:!0})))};return react_default.a.createElement(Field,null)};field_stories_Container.storyName="FieldContainer",field_stories_Container.args={id:Object(es2015.a)({name:"FieldContainer"})},field_stories_Hook.storyName="useField",field_stories_Hook.args={id:Object(es2015.a)({name:"useField"})},field_stories_Hook.parameters={docs:{description:{story:"The `useField` hook will supply the prop getters to handle `aria-labelledby` along\n      with for/id mapping and `aria-describedby` mapping when a hint is applied."}}};__webpack_exports__.default={title:"Field Container",component:FieldContainer_FieldContainer,parameters:(_parameters={storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React from \'react\';\\nimport { uid } from \'react-uid\';\\nimport { FieldContainer, useField } from \'./src\';\\n\\nexport const Container = ({ id }) => (\\n  <FieldContainer id={id}>\\n    {({ getLabelProps, getInputProps, getHintProps }) => (\\n      <>\\n        <label {...getLabelProps()}>Accessible Native Input</label>\\n        <div {...getHintProps()}>Optional Hint</div>\\n        <input {...getInputProps({}, { isDescribed: true })} />\\n      </>\\n    )}\\n  </FieldContainer>\\n);\\n\\nexport const Hook = ({ id }) => {\\n  const Field = () => {\\n    const { getLabelProps, getInputProps, getHintProps } = useField(id);\\n    const [value, setVal] = React.useState(\'\');\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => setVal(event.target.value);\\n\\n    return (\\n      <>\\n        <label {...getLabelProps()}>Accessible Native Input</label>\\n        <div {...getHintProps()}>Optional Hint</div>\\n        <input {...getInputProps({ value, onChange }, { isDescribed: true })} />\\n      </>\\n    );\\n  };\\n\\n  return <Field />;\\n};\\n\\nContainer.storyName = \'FieldContainer\';\\n\\nContainer.args = {\\n  id: uid({ name: \'FieldContainer\' })\\n};\\n\\nHook.storyName = \'useField\';\\n\\nHook.args = {\\n  id: uid({ name: \'useField\' })\\n};\\n\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`useField\\\\` hook will supply the prop getters to handle \\\\`aria-labelledby\\\\` along\\n      with for/id mapping and \\\\`aria-describedby\\\\` mapping when a hint is applied.`\\n    }\\n  }\\n};\\n\\nexport default {\\n  title: \'Field Container\',\\n  component: FieldContainer,\\n  parameters: {\\n    layout: \'centered\',\\n    componentSubtitle: `A container component which wraps the useField hook.`\\n  }\\n};\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Container":{"startLoc":{"col":25,"line":12},"endLoc":{"col":1,"line":22},"startBody":{"col":25,"line":12},"endBody":{"col":1,"line":22}},"Hook":{"startLoc":{"col":20,"line":24},"endLoc":{"col":1,"line":40},"startBody":{"col":20,"line":24},"endBody":{"col":1,"line":40}}};\n    \n/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React from \'react\';\nimport { uid } from \'react-uid\';\nimport { FieldContainer, useField } from \'./src\';\n\nexport const Container = ({ id }) => (\n  <FieldContainer id={id}>\n    {({ getLabelProps, getInputProps, getHintProps }) => (\n      <>\n        <label {...getLabelProps()}>Accessible Native Input</label>\n        <div {...getHintProps()}>Optional Hint</div>\n        <input {...getInputProps({}, { isDescribed: true })} />\n      </>\n    )}\n  </FieldContainer>\n);;\n\nexport const Hook = ({ id }) => {\n  const Field = () => {\n    const { getLabelProps, getInputProps, getHintProps } = useField(id);\n    const [value, setVal] = React.useState(\'\');\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => setVal(event.target.value);\n\n    return (\n      <>\n        <label {...getLabelProps()}>Accessible Native Input</label>\n        <div {...getHintProps()}>Optional Hint</div>\n        <input {...getInputProps({ value, onChange }, { isDescribed: true })} />\n      </>\n    );\n  };\n\n  return <Field />;\n};\n\nContainer.storyName = \'FieldContainer\';\n\nContainer.args = {\n  id: uid({ name: \'FieldContainer\' })\n};\n\nHook.storyName = \'useField\';\n\nHook.args = {\n  id: uid({ name: \'useField\' })\n};\n\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`useField\\` hook will supply the prop getters to handle \\`aria-labelledby\\` along\n      with for/id mapping and \\`aria-describedby\\` mapping when a hint is applied.`\n    }\n  }\n};\n\nexport default {\n  title: \'Field Container\',\n  component: FieldContainer,\n  parameters: {"storySource":{"source":"/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React from \'react\';\\nimport { uid } from \'react-uid\';\\nimport { FieldContainer, useField } from \'./src\';\\n\\nexport const Container = ({ id }) => (\\n  <FieldContainer id={id}>\\n    {({ getLabelProps, getInputProps, getHintProps }) => (\\n      <>\\n        <label {...getLabelProps()}>Accessible Native Input</label>\\n        <div {...getHintProps()}>Optional Hint</div>\\n        <input {...getInputProps({}, { isDescribed: true })} />\\n      </>\\n    )}\\n  </FieldContainer>\\n);\\n\\nexport const Hook = ({ id }) => {\\n  const Field = () => {\\n    const { getLabelProps, getInputProps, getHintProps } = useField(id);\\n    const [value, setVal] = React.useState(\'\');\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => setVal(event.target.value);\\n\\n    return (\\n      <>\\n        <label {...getLabelProps()}>Accessible Native Input</label>\\n        <div {...getHintProps()}>Optional Hint</div>\\n        <input {...getInputProps({ value, onChange }, { isDescribed: true })} />\\n      </>\\n    );\\n  };\\n\\n  return <Field />;\\n};\\n\\nContainer.storyName = \'FieldContainer\';\\n\\nContainer.args = {\\n  id: uid({ name: \'FieldContainer\' })\\n};\\n\\nHook.storyName = \'useField\';\\n\\nHook.args = {\\n  id: uid({ name: \'useField\' })\\n};\\n\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`useField\\\\` hook will supply the prop getters to handle \\\\`aria-labelledby\\\\` along\\n      with for/id mapping and \\\\`aria-describedby\\\\` mapping when a hint is applied.`\\n    }\\n  }\\n};\\n\\nexport default {\\n  title: \'Field Container\',\\n  component: FieldContainer,\\n  parameters: {\\n    layout: \'centered\',\\n    componentSubtitle: `A container component which wraps the useField hook.`\\n  }\\n};\\n","locationsMap":{"container":{"startLoc":{"col":25,"line":12},"endLoc":{"col":1,"line":22},"startBody":{"col":25,"line":12},"endBody":{"col":1,"line":22}},"hook":{"startLoc":{"col":20,"line":24},"endLoc":{"col":1,"line":40},"startBody":{"col":20,"line":24},"endBody":{"col":1,"line":40}}}},\n    layout: \'centered\',\n    componentSubtitle: `A container component which wraps the useField hook.`\n  },};\n',locationsMap:{container:{startLoc:{col:25,line:20},endLoc:{col:1,line:30},startBody:{col:25,line:20},endBody:{col:1,line:30}},hook:{startLoc:{col:20,line:32},endLoc:{col:1,line:48},startBody:{col:20,line:32},endBody:{col:1,line:48}}}}},_parameters.storySource={source:"/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React from 'react';\nimport { uid } from 'react-uid';\nimport { FieldContainer, useField } from './src';\n\nexport const Container = ({ id }) => (\n  <FieldContainer id={id}>\n    {({ getLabelProps, getInputProps, getHintProps }) => (\n      <>\n        <label {...getLabelProps()}>Accessible Native Input</label>\n        <div {...getHintProps()}>Optional Hint</div>\n        <input {...getInputProps({}, { isDescribed: true })} />\n      </>\n    )}\n  </FieldContainer>\n);\n\nexport const Hook = ({ id }) => {\n  const Field = () => {\n    const { getLabelProps, getInputProps, getHintProps } = useField(id);\n    const [value, setVal] = React.useState('');\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => setVal(event.target.value);\n\n    return (\n      <>\n        <label {...getLabelProps()}>Accessible Native Input</label>\n        <div {...getHintProps()}>Optional Hint</div>\n        <input {...getInputProps({ value, onChange }, { isDescribed: true })} />\n      </>\n    );\n  };\n\n  return <Field />;\n};\n\nContainer.storyName = 'FieldContainer';\n\nContainer.args = {\n  id: uid({ name: 'FieldContainer' })\n};\n\nHook.storyName = 'useField';\n\nHook.args = {\n  id: uid({ name: 'useField' })\n};\n\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`useField\\` hook will supply the prop getters to handle \\`aria-labelledby\\` along\n      with for/id mapping and \\`aria-describedby\\` mapping when a hint is applied.`\n    }\n  }\n};\n\nexport default {\n  title: 'Field Container',\n  component: FieldContainer,\n  parameters: {\n    layout: 'centered',\n    componentSubtitle: `A container component which wraps the useField hook.`\n  }\n};\n",locationsMap:{container:{startLoc:{col:25,line:12},endLoc:{col:1,line:22},startBody:{col:25,line:12},endBody:{col:1,line:22}},hook:{startLoc:{col:20,line:24},endLoc:{col:1,line:40},startBody:{col:20,line:24},endBody:{col:1,line:40}}}},_parameters.layout="centered",_parameters.componentSubtitle="A container component which wraps the useField hook.",_parameters)};field_stories_Container.parameters=Object(esm_extends.a)({storySource:{source:"({ id }) => (\n  <FieldContainer id={id}>\n    {({ getLabelProps, getInputProps, getHintProps }) => (\n      <>\n        <label {...getLabelProps()}>Accessible Native Input</label>\n        <div {...getHintProps()}>Optional Hint</div>\n        <input {...getInputProps({}, { isDescribed: true })} />\n      </>\n    )}\n  </FieldContainer>\n)"}},field_stories_Container.parameters),field_stories_Hook.parameters=Object(esm_extends.a)({storySource:{source:"({ id }) => {\n  const Field = () => {\n    const { getLabelProps, getInputProps, getHintProps } = useField(id);\n    const [value, setVal] = React.useState('');\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => setVal(event.target.value);\n\n    return (\n      <>\n        <label {...getLabelProps()}>Accessible Native Input</label>\n        <div {...getHintProps()}>Optional Hint</div>\n        <input {...getInputProps({ value, onChange }, { isDescribed: true })} />\n      </>\n    );\n  };\n\n  return <Field />;\n}"}},field_stories_Hook.parameters);try{field_stories_Container.displayName="Container",field_stories_Container.__docgenInfo={description:"",displayName:"Container",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/field/field.stories.tsx#Container"]={docgenInfo:field_stories_Container.__docgenInfo,name:"Container",path:"packages/field/field.stories.tsx#Container"})}catch(__react_docgen_typescript_loader_error){}try{field_stories_Hook.displayName="Hook",field_stories_Hook.__docgenInfo={description:"",displayName:"Hook",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/field/field.stories.tsx#Hook"]={docgenInfo:field_stories_Hook.__docgenInfo,name:"Hook",path:"packages/field/field.stories.tsx#Hook"})}catch(__react_docgen_typescript_loader_error){}},2900:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Container",(function(){return focusvisible_stories_Container})),__webpack_require__.d(__webpack_exports__,"Hook",(function(){return focusvisible_stories_Hook})),__webpack_require__.d(__webpack_exports__,"WithSelection",(function(){return focusvisible_stories_WithSelection}));__webpack_require__(290);var esm_extends=__webpack_require__(428),react=__webpack_require__(0),react_default=__webpack_require__.n(react),styled_components_browser_esm=__webpack_require__(55),objectWithoutPropertiesLoose=__webpack_require__(1750),prop_types=__webpack_require__(2),prop_types_default=__webpack_require__.n(prop_types),INPUT_TYPES_WHITE_LIST=(__webpack_require__(755),__webpack_require__(1123),{text:!0,search:!0,url:!0,tel:!0,email:!0,password:!0,number:!0,date:!0,month:!0,week:!0,time:!0,datetime:!0,"datetime-local":!0});function useFocusVisible(_temp){var _ref=void 0===_temp?{}:_temp,scope=_ref.scope,relativeDocument=_ref.relativeDocument,_ref$className=_ref.className,className=void 0===_ref$className?"garden-focus-visible":_ref$className,_ref$dataAttribute=_ref.dataAttribute,dataAttribute=void 0===_ref$dataAttribute?"data-garden-focus-visible":_ref$dataAttribute;if(!scope)throw new Error('Error: the useFocusVisible() hook requires a "scope" property');var hadKeyboardEvent=Object(react.useRef)(!1),hadFocusVisibleRecently=Object(react.useRef)(!1),hadFocusVisibleRecentlyTimeout=Object(react.useRef)();Object(react.useEffect)((function(){var environment=relativeDocument;environment||(environment=document);var isValidFocusTarget=function isValidFocusTarget(el){return!!(el&&el!==scope.current&&"HTML"!==el.nodeName&&"BODY"!==el.nodeName&&"classList"in el&&"contains"in el.classList)},isFocused=function isFocused(el){return!(!el||!el.classList.contains(className)&&!el.hasAttribute(dataAttribute))},addFocusVisibleClass=function addFocusVisibleClass(el){isFocused(el)||(el&&el.classList.add(className),el&&el.setAttribute(dataAttribute,"true"))},onKeyDown=function onKeyDown(e){e.metaKey||e.altKey||e.ctrlKey||(isValidFocusTarget(environment.activeElement)&&addFocusVisibleClass(environment.activeElement),hadKeyboardEvent.current=!0)},onPointerDown=function onPointerDown(){hadKeyboardEvent.current=!1},onFocus=function onFocus(e){isValidFocusTarget(e.target)&&(hadKeyboardEvent.current||function focusTriggersKeyboardModality(el){var type=el.type,tagName=el.tagName;return!("INPUT"!==tagName||!INPUT_TYPES_WHITE_LIST[type]||el.readOnly)||"TEXTAREA"===tagName&&!el.readOnly||!!el.isContentEditable}(e.target))&&addFocusVisibleClass(e.target)},onBlur=function onBlur(e){if(isValidFocusTarget(e.target)&&isFocused(e.target)){hadFocusVisibleRecently.current=!0,clearTimeout(hadFocusVisibleRecentlyTimeout.current);var timeoutId=setTimeout((function(){hadFocusVisibleRecently.current=!1,clearTimeout(hadFocusVisibleRecentlyTimeout.current)}),100);hadFocusVisibleRecentlyTimeout.current=Number(timeoutId),function removeFocusVisibleClass(el){el.classList.remove(className),el.removeAttribute(dataAttribute)}(e.target)}},onInitialPointerMove=function onInitialPointerMove(e){var nodeName=e.target.nodeName;nodeName&&"html"===nodeName.toLowerCase()||(hadKeyboardEvent.current=!1,removeInitialPointerMoveListeners())},removeInitialPointerMoveListeners=function removeInitialPointerMoveListeners(){environment.removeEventListener("mousemove",onInitialPointerMove),environment.removeEventListener("mousedown",onInitialPointerMove),environment.removeEventListener("mouseup",onInitialPointerMove),environment.removeEventListener("pointermove",onInitialPointerMove),environment.removeEventListener("pointerdown",onInitialPointerMove),environment.removeEventListener("pointerup",onInitialPointerMove),environment.removeEventListener("touchmove",onInitialPointerMove),environment.removeEventListener("touchstart",onInitialPointerMove),environment.removeEventListener("touchend",onInitialPointerMove)},onVisibilityChange=function onVisibilityChange(){"hidden"===environment.visibilityState&&hadFocusVisibleRecently.current&&(hadKeyboardEvent.current=!0)},currentScope=scope.current;if(environment&&currentScope)return environment.addEventListener("keydown",onKeyDown,!0),environment.addEventListener("mousedown",onPointerDown,!0),environment.addEventListener("pointerdown",onPointerDown,!0),environment.addEventListener("touchstart",onPointerDown,!0),environment.addEventListener("visibilitychange",onVisibilityChange,!0),function addInitialPointerMoveListeners(){environment.addEventListener("mousemove",onInitialPointerMove),environment.addEventListener("mousedown",onInitialPointerMove),environment.addEventListener("mouseup",onInitialPointerMove),environment.addEventListener("pointermove",onInitialPointerMove),environment.addEventListener("pointerdown",onInitialPointerMove),environment.addEventListener("pointerup",onInitialPointerMove),environment.addEventListener("touchmove",onInitialPointerMove),environment.addEventListener("touchstart",onInitialPointerMove),environment.addEventListener("touchend",onInitialPointerMove)}(),currentScope&&currentScope.addEventListener("focus",onFocus,!0),currentScope&&currentScope.addEventListener("blur",onBlur,!0),function(){environment.removeEventListener("keydown",onKeyDown),environment.removeEventListener("mousedown",onPointerDown),environment.removeEventListener("pointerdown",onPointerDown),environment.removeEventListener("touchstart",onPointerDown),environment.removeEventListener("visibilityChange",onVisibilityChange),removeInitialPointerMoveListeners(),currentScope&&currentScope.removeEventListener("focus",onFocus),currentScope&&currentScope.removeEventListener("blur",onBlur),clearTimeout(hadFocusVisibleRecentlyTimeout.current)}}),[relativeDocument,scope,className,dataAttribute])}var _excluded=["children","render"],FocusVisibleContainer_FocusVisibleContainer=function FocusVisibleContainer(_ref){var children=_ref.children,_ref$render=_ref.render,render=void 0===_ref$render?children:_ref$render,options=Object(objectWithoutPropertiesLoose.a)(_ref,_excluded),scopeRef=Object(react.useRef)(null);return useFocusVisible(Object(esm_extends.a)({scope:scopeRef},options)),react_default.a.createElement(react_default.a.Fragment,null,render({ref:scopeRef}))};FocusVisibleContainer_FocusVisibleContainer.defaultProps={className:"garden-focus-visible",dataAttribute:"data-garden-focus-visible"},FocusVisibleContainer_FocusVisibleContainer.propTypes={children:prop_types_default.a.func,render:prop_types_default.a.func,relativeDocument:prop_types_default.a.object,className:prop_types_default.a.string,dataAttribute:prop_types_default.a.string};try{FocusVisibleContainer_FocusVisibleContainer.displayName="FocusVisibleContainer",FocusVisibleContainer_FocusVisibleContainer.__docgenInfo={description:"",displayName:"FocusVisibleContainer",props:{render:{defaultValue:null,description:"A render prop function which receives a `ref`",name:"render",required:!1,type:{name:"((options: { ref: RefObject<HTMLDivElement>; }) => ReactNode)"}},children:{defaultValue:null,description:"A children render prop function which receives a `ref`",name:"children",required:!1,type:{name:"(((options: { ref: RefObject<HTMLDivElement>; }) => ReactNode) & (boolean | ReactChild | ReactFragment | ReactPortal | null))"}},relativeDocument:{defaultValue:null,description:"A relative document",name:"relativeDocument",required:!1,type:{name:"any"}},className:{defaultValue:{value:"garden-focus-visible"},description:"A class name applied to the element with `:focus-visible` behavior",name:"className",required:!1,type:{name:"string"}},dataAttribute:{defaultValue:{value:"data-garden-focus-visible"},description:"A data attribute applied to the element with `:focus-visible` behavior",name:"dataAttribute",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/focusvisible/src/FocusVisibleContainer.tsx#FocusVisibleContainer"]={docgenInfo:FocusVisibleContainer_FocusVisibleContainer.__docgenInfo,name:"FocusVisibleContainer",path:"packages/focusvisible/src/FocusVisibleContainer.tsx#FocusVisibleContainer"})}catch(__react_docgen_typescript_loader_error){}var _parameters,useSelection=__webpack_require__(1749),StyledCustomFocus=styled_components_browser_esm.c.div.withConfig({displayName:"focusvisiblestories__StyledCustomFocus",componentId:"sc-x6r41u-0"})([":focus{outline:none;}&[data-garden-focus-visible]{outline:2px dashed red;}"]),StyledWrapper=styled_components_browser_esm.c.div.withConfig({displayName:"focusvisiblestories__StyledWrapper",componentId:"sc-x6r41u-1"})(["*{margin-bottom:8px;}"]),focusvisible_stories_Container=function Container(){return react_default.a.createElement(FocusVisibleContainer_FocusVisibleContainer,null,(function(_ref){var ref=_ref.ref;return react_default.a.createElement(StyledWrapper,{ref:ref},react_default.a.createElement("div",null,react_default.a.createElement(StyledCustomFocus,{as:"button"},"Hello world")),react_default.a.createElement("div",null,react_default.a.createElement(StyledCustomFocus,{as:"input"})))}))},focusvisible_stories_Hook=function Hook(){var ref=Object(react.useRef)(null);return useFocusVisible({scope:ref}),react_default.a.createElement(StyledWrapper,{ref:ref},react_default.a.createElement("div",null,react_default.a.createElement(StyledCustomFocus,{as:"button"},"Customized Button Focus")),react_default.a.createElement("div",null,react_default.a.createElement(StyledCustomFocus,{as:"input",placeholder:"Always shows focus","aria-label":"Example input"})),react_default.a.createElement("div",null,react_default.a.createElement(StyledCustomFocus,{tabIndex:0},react_default.a.createElement("p",null,"Focusable div content only shows focus with keyboard interaction"))),react_default.a.createElement("div",null,react_default.a.createElement(StyledCustomFocus,{as:"textarea",placeholder:"Always shows focus","aria-label":"Example textarea"})),react_default.a.createElement("div",null,react_default.a.createElement("label",null,react_default.a.createElement(StyledCustomFocus,{as:"input",type:"checkbox"}),"Only shows focus when keyed to")))},focusvisible_stories_WithSelection=function WithSelection(){var items=["One","Two","Three"],StyledExampleContainer=styled_components_browser_esm.c.ul.withConfig({displayName:"focusvisiblestories__StyledExampleContainer",componentId:"sc-x6r41u-2"})(["display:flex;"]),StyledExampleItem=Object(styled_components_browser_esm.c)(StyledCustomFocus).attrs({as:"li"}).withConfig({displayName:"focusvisiblestories__StyledExampleItem",componentId:"sc-x6r41u-3"})(["list-style:none;margin:16px;padding:8px;text-align:center;cursor:pointer;",""],(function(props){return props.isSelected&&"border-bottom: 4px solid blue"})),Selection=function Selection(){var _useSelection=Object(useSelection.a)({defaultSelectedIndex:0}),selectedItem=_useSelection.selectedItem,getContainerProps=_useSelection.getContainerProps,getItemProps=_useSelection.getItemProps,ref=Object(react.useRef)(null);return useFocusVisible({scope:ref}),react_default.a.createElement(StyledExampleContainer,getContainerProps({ref:ref}),items.map((function(item){var itemRef=react_default.a.createRef(),isSelected=selectedItem===item;return react_default.a.createElement(StyledExampleItem,getItemProps({key:item,item:item,focusRef:itemRef,isSelected:isSelected}),item)})))};return react_default.a.createElement(Selection,null)};focusvisible_stories_Container.storyName="FocusVisibleContainer",focusvisible_stories_Hook.storyName="useFocusVisible",focusvisible_stories_Hook.parameters={docs:{description:{story:"The `useFocusVisible` hook implements [`:focus-visible`](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo) behavior for a DOM element."}}},focusvisible_stories_WithSelection.storyName="Usage with useSelection",focusvisible_stories_WithSelection.parameters={docs:{description:{story:"The following story demonstrates using the `useFocusVisible` hook with the `useSelection` hook."}}};__webpack_exports__.default={title:"FocusVisible Container",component:FocusVisibleContainer_FocusVisibleContainer,parameters:(_parameters={storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React, { useRef } from \'react\';\\nimport styled from \'styled-components\';\\nimport { useFocusVisible, FocusVisibleContainer } from \'./src\';\\nimport { useSelection } from \'../selection/src\';\\n\\ninterface IStyledCustomFocus extends React.HTMLProps<HTMLDivElement> {\\n  isSelected?: boolean;\\n}\\n\\nconst StyledCustomFocus = styled.div<IStyledCustomFocus>`\\n  :focus {\\n    outline: none;\\n  }\\n\\n  &[data-garden-focus-visible] {\\n    outline: 2px dashed red;\\n  }\\n`;\\n\\nconst StyledWrapper = styled.div`\\n  * {\\n    margin-bottom: 8px;\\n  }\\n`;\\n\\nexport const Container = () => (\\n  <FocusVisibleContainer>\\n    {({ ref }) => (\\n      <StyledWrapper ref={ref}>\\n        <div>\\n          <StyledCustomFocus as=\\"button\\">Hello world</StyledCustomFocus>\\n        </div>\\n        <div>\\n          <StyledCustomFocus as=\\"input\\" />\\n        </div>\\n      </StyledWrapper>\\n    )}\\n  </FocusVisibleContainer>\\n);\\n\\nexport const Hook = () => {\\n  const ref = useRef<HTMLDivElement>(null);\\n\\n  useFocusVisible({ scope: ref });\\n\\n  return (\\n    <StyledWrapper ref={ref}>\\n      <div>\\n        <StyledCustomFocus as=\\"button\\">Customized Button Focus</StyledCustomFocus>\\n      </div>\\n      <div>\\n        <StyledCustomFocus as=\\"input\\" placeholder=\\"Always shows focus\\" aria-label=\\"Example input\\" />\\n      </div>\\n      <div>\\n        <StyledCustomFocus tabIndex={0}>\\n          <p>Focusable div content only shows focus with keyboard interaction</p>\\n        </StyledCustomFocus>\\n      </div>\\n      <div>\\n        <StyledCustomFocus\\n          as=\\"textarea\\"\\n          placeholder=\\"Always shows focus\\"\\n          aria-label=\\"Example textarea\\"\\n        />\\n      </div>\\n      <div>\\n        <label>\\n          <StyledCustomFocus as=\\"input\\" type=\\"checkbox\\" />\\n          Only shows focus when keyed to\\n        </label>\\n      </div>\\n    </StyledWrapper>\\n  );\\n};\\n\\nexport const WithSelection = () => {\\n  const items = [\'One\', \'Two\', \'Three\'];\\n\\n  const StyledExampleContainer = styled.ul`\\n    display: flex;\\n  `;\\n\\n  const StyledExampleItem = styled(StyledCustomFocus).attrs({ as: \'li\' })`\\n    list-style: none;\\n    margin: 16px;\\n    padding: 8px;\\n    text-align: center;\\n    cursor: pointer;\\n\\n    ${props => props.isSelected && `border-bottom: 4px solid blue`}\\n  `;\\n\\n  const Selection = () => {\\n    const { selectedItem, getContainerProps, getItemProps } = useSelection({\\n      defaultSelectedIndex: 0\\n    });\\n    const ref = useRef<HTMLUListElement>(null);\\n\\n    useFocusVisible({ scope: ref });\\n\\n    return (\\n      <StyledExampleContainer {...(getContainerProps({ ref }) as any)}>\\n        {items.map(item => {\\n          const itemRef = React.createRef();\\n          const isSelected = selectedItem === item;\\n\\n          return (\\n            <StyledExampleItem\\n              {...getItemProps({\\n                key: item,\\n                item,\\n                focusRef: itemRef,\\n                isSelected\\n              })}\\n            >\\n              {item}\\n            </StyledExampleItem>\\n          );\\n        })}\\n      </StyledExampleContainer>\\n    );\\n  };\\n\\n  return <Selection />;\\n};\\n\\nContainer.storyName = \'FocusVisibleContainer\';\\n\\nHook.storyName = \'useFocusVisible\';\\n\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`useFocusVisible\\\\` hook implements [\\\\`:focus-visible\\\\`](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo) behavior for a DOM element.`\\n    }\\n  }\\n};\\n\\nWithSelection.storyName = \'Usage with useSelection\';\\n\\nWithSelection.parameters = {\\n  docs: {\\n    description: {\\n      story: `The following story demonstrates using the \\\\`useFocusVisible\\\\` hook with the \\\\`useSelection\\\\` hook.`\\n    }\\n  }\\n};\\n\\nexport default {\\n  title: \'FocusVisible Container\',\\n  component: FocusVisibleContainer,\\n  parameters: {\\n    layout: \'centered\',\\n    componentSubtitle: `A container component which wraps the useFocusVisible hook.`\\n  }\\n};\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Container":{"startLoc":{"col":25,"line":33},"endLoc":{"col":1,"line":46},"startBody":{"col":25,"line":33},"endBody":{"col":1,"line":46}},"Hook":{"startLoc":{"col":20,"line":48},"endLoc":{"col":1,"line":81},"startBody":{"col":20,"line":48},"endBody":{"col":1,"line":81}},"WithSelection":{"startLoc":{"col":29,"line":83},"endLoc":{"col":1,"line":132},"startBody":{"col":29,"line":83},"endBody":{"col":1,"line":132}}};\n    \n/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React, { useRef } from \'react\';\nimport styled from \'styled-components\';\nimport { useFocusVisible, FocusVisibleContainer } from \'./src\';\nimport { useSelection } from \'../selection/src\';\n\ninterface IStyledCustomFocus extends React.HTMLProps<HTMLDivElement> {\n  isSelected?: boolean;\n}\n\nconst StyledCustomFocus = styled.div<IStyledCustomFocus>`\n  :focus {\n    outline: none;\n  }\n\n  &[data-garden-focus-visible] {\n    outline: 2px dashed red;\n  }\n`;\n\nconst StyledWrapper = styled.div`\n  * {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const Container = () => (\n  <FocusVisibleContainer>\n    {({ ref }) => (\n      <StyledWrapper ref={ref}>\n        <div>\n          <StyledCustomFocus as="button">Hello world</StyledCustomFocus>\n        </div>\n        <div>\n          <StyledCustomFocus as="input" />\n        </div>\n      </StyledWrapper>\n    )}\n  </FocusVisibleContainer>\n);;\n\nexport const Hook = () => {\n  const ref = useRef<HTMLDivElement>(null);\n\n  useFocusVisible({ scope: ref });\n\n  return (\n    <StyledWrapper ref={ref}>\n      <div>\n        <StyledCustomFocus as="button">Customized Button Focus</StyledCustomFocus>\n      </div>\n      <div>\n        <StyledCustomFocus as="input" placeholder="Always shows focus" aria-label="Example input" />\n      </div>\n      <div>\n        <StyledCustomFocus tabIndex={0}>\n          <p>Focusable div content only shows focus with keyboard interaction</p>\n        </StyledCustomFocus>\n      </div>\n      <div>\n        <StyledCustomFocus\n          as="textarea"\n          placeholder="Always shows focus"\n          aria-label="Example textarea"\n        />\n      </div>\n      <div>\n        <label>\n          <StyledCustomFocus as="input" type="checkbox" />\n          Only shows focus when keyed to\n        </label>\n      </div>\n    </StyledWrapper>\n  );\n};;\n\nexport const WithSelection = () => {\n  const items = [\'One\', \'Two\', \'Three\'];\n\n  const StyledExampleContainer = styled.ul`\n    display: flex;\n  `;\n\n  const StyledExampleItem = styled(StyledCustomFocus).attrs({ as: \'li\' })`\n    list-style: none;\n    margin: 16px;\n    padding: 8px;\n    text-align: center;\n    cursor: pointer;\n\n    ${props => props.isSelected && `border-bottom: 4px solid blue`}\n  `;\n\n  const Selection = () => {\n    const { selectedItem, getContainerProps, getItemProps } = useSelection({\n      defaultSelectedIndex: 0\n    });\n    const ref = useRef<HTMLUListElement>(null);\n\n    useFocusVisible({ scope: ref });\n\n    return (\n      <StyledExampleContainer {...(getContainerProps({ ref }) as any)}>\n        {items.map(item => {\n          const itemRef = React.createRef();\n          const isSelected = selectedItem === item;\n\n          return (\n            <StyledExampleItem\n              {...getItemProps({\n                key: item,\n                item,\n                focusRef: itemRef,\n                isSelected\n              })}\n            >\n              {item}\n            </StyledExampleItem>\n          );\n        })}\n      </StyledExampleContainer>\n    );\n  };\n\n  return <Selection />;\n};\n\nContainer.storyName = \'FocusVisibleContainer\';\n\nHook.storyName = \'useFocusVisible\';\n\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`useFocusVisible\\` hook implements [\\`:focus-visible\\`](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo) behavior for a DOM element.`\n    }\n  }\n};\n\nWithSelection.storyName = \'Usage with useSelection\';\n\nWithSelection.parameters = {\n  docs: {\n    description: {\n      story: `The following story demonstrates using the \\`useFocusVisible\\` hook with the \\`useSelection\\` hook.`\n    }\n  }\n};\n\nexport default {\n  title: \'FocusVisible Container\',\n  component: FocusVisibleContainer,\n  parameters: {"storySource":{"source":"/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React, { useRef } from \'react\';\\nimport styled from \'styled-components\';\\nimport { useFocusVisible, FocusVisibleContainer } from \'./src\';\\nimport { useSelection } from \'../selection/src\';\\n\\ninterface IStyledCustomFocus extends React.HTMLProps<HTMLDivElement> {\\n  isSelected?: boolean;\\n}\\n\\nconst StyledCustomFocus = styled.div<IStyledCustomFocus>`\\n  :focus {\\n    outline: none;\\n  }\\n\\n  &[data-garden-focus-visible] {\\n    outline: 2px dashed red;\\n  }\\n`;\\n\\nconst StyledWrapper = styled.div`\\n  * {\\n    margin-bottom: 8px;\\n  }\\n`;\\n\\nexport const Container = () => (\\n  <FocusVisibleContainer>\\n    {({ ref }) => (\\n      <StyledWrapper ref={ref}>\\n        <div>\\n          <StyledCustomFocus as=\\"button\\">Hello world</StyledCustomFocus>\\n        </div>\\n        <div>\\n          <StyledCustomFocus as=\\"input\\" />\\n        </div>\\n      </StyledWrapper>\\n    )}\\n  </FocusVisibleContainer>\\n);\\n\\nexport const Hook = () => {\\n  const ref = useRef<HTMLDivElement>(null);\\n\\n  useFocusVisible({ scope: ref });\\n\\n  return (\\n    <StyledWrapper ref={ref}>\\n      <div>\\n        <StyledCustomFocus as=\\"button\\">Customized Button Focus</StyledCustomFocus>\\n      </div>\\n      <div>\\n        <StyledCustomFocus as=\\"input\\" placeholder=\\"Always shows focus\\" aria-label=\\"Example input\\" />\\n      </div>\\n      <div>\\n        <StyledCustomFocus tabIndex={0}>\\n          <p>Focusable div content only shows focus with keyboard interaction</p>\\n        </StyledCustomFocus>\\n      </div>\\n      <div>\\n        <StyledCustomFocus\\n          as=\\"textarea\\"\\n          placeholder=\\"Always shows focus\\"\\n          aria-label=\\"Example textarea\\"\\n        />\\n      </div>\\n      <div>\\n        <label>\\n          <StyledCustomFocus as=\\"input\\" type=\\"checkbox\\" />\\n          Only shows focus when keyed to\\n        </label>\\n      </div>\\n    </StyledWrapper>\\n  );\\n};\\n\\nexport const WithSelection = () => {\\n  const items = [\'One\', \'Two\', \'Three\'];\\n\\n  const StyledExampleContainer = styled.ul`\\n    display: flex;\\n  `;\\n\\n  const StyledExampleItem = styled(StyledCustomFocus).attrs({ as: \'li\' })`\\n    list-style: none;\\n    margin: 16px;\\n    padding: 8px;\\n    text-align: center;\\n    cursor: pointer;\\n\\n    ${props => props.isSelected && `border-bottom: 4px solid blue`}\\n  `;\\n\\n  const Selection = () => {\\n    const { selectedItem, getContainerProps, getItemProps } = useSelection({\\n      defaultSelectedIndex: 0\\n    });\\n    const ref = useRef<HTMLUListElement>(null);\\n\\n    useFocusVisible({ scope: ref });\\n\\n    return (\\n      <StyledExampleContainer {...(getContainerProps({ ref }) as any)}>\\n        {items.map(item => {\\n          const itemRef = React.createRef();\\n          const isSelected = selectedItem === item;\\n\\n          return (\\n            <StyledExampleItem\\n              {...getItemProps({\\n                key: item,\\n                item,\\n                focusRef: itemRef,\\n                isSelected\\n              })}\\n            >\\n              {item}\\n            </StyledExampleItem>\\n          );\\n        })}\\n      </StyledExampleContainer>\\n    );\\n  };\\n\\n  return <Selection />;\\n};\\n\\nContainer.storyName = \'FocusVisibleContainer\';\\n\\nHook.storyName = \'useFocusVisible\';\\n\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`useFocusVisible\\\\` hook implements [\\\\`:focus-visible\\\\`](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo) behavior for a DOM element.`\\n    }\\n  }\\n};\\n\\nWithSelection.storyName = \'Usage with useSelection\';\\n\\nWithSelection.parameters = {\\n  docs: {\\n    description: {\\n      story: `The following story demonstrates using the \\\\`useFocusVisible\\\\` hook with the \\\\`useSelection\\\\` hook.`\\n    }\\n  }\\n};\\n\\nexport default {\\n  title: \'FocusVisible Container\',\\n  component: FocusVisibleContainer,\\n  parameters: {\\n    layout: \'centered\',\\n    componentSubtitle: `A container component which wraps the useFocusVisible hook.`\\n  }\\n};\\n","locationsMap":{"container":{"startLoc":{"col":25,"line":33},"endLoc":{"col":1,"line":46},"startBody":{"col":25,"line":33},"endBody":{"col":1,"line":46}},"hook":{"startLoc":{"col":20,"line":48},"endLoc":{"col":1,"line":81},"startBody":{"col":20,"line":48},"endBody":{"col":1,"line":81}},"with-selection":{"startLoc":{"col":29,"line":83},"endLoc":{"col":1,"line":132},"startBody":{"col":29,"line":83},"endBody":{"col":1,"line":132}}}},\n    layout: \'centered\',\n    componentSubtitle: `A container component which wraps the useFocusVisible hook.`\n  },};\n',locationsMap:{container:{startLoc:{col:25,line:41},endLoc:{col:1,line:54},startBody:{col:25,line:41},endBody:{col:1,line:54}},hook:{startLoc:{col:20,line:56},endLoc:{col:1,line:89},startBody:{col:20,line:56},endBody:{col:1,line:89}},"with-selection":{startLoc:{col:29,line:91},endLoc:{col:1,line:140},startBody:{col:29,line:91},endBody:{col:1,line:140}}}}},_parameters.storySource={source:"/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport { useFocusVisible, FocusVisibleContainer } from './src';\nimport { useSelection } from '../selection/src';\n\ninterface IStyledCustomFocus extends React.HTMLProps<HTMLDivElement> {\n  isSelected?: boolean;\n}\n\nconst StyledCustomFocus = styled.div<IStyledCustomFocus>`\n  :focus {\n    outline: none;\n  }\n\n  &[data-garden-focus-visible] {\n    outline: 2px dashed red;\n  }\n`;\n\nconst StyledWrapper = styled.div`\n  * {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const Container = () => (\n  <FocusVisibleContainer>\n    {({ ref }) => (\n      <StyledWrapper ref={ref}>\n        <div>\n          <StyledCustomFocus as=\"button\">Hello world</StyledCustomFocus>\n        </div>\n        <div>\n          <StyledCustomFocus as=\"input\" />\n        </div>\n      </StyledWrapper>\n    )}\n  </FocusVisibleContainer>\n);\n\nexport const Hook = () => {\n  const ref = useRef<HTMLDivElement>(null);\n\n  useFocusVisible({ scope: ref });\n\n  return (\n    <StyledWrapper ref={ref}>\n      <div>\n        <StyledCustomFocus as=\"button\">Customized Button Focus</StyledCustomFocus>\n      </div>\n      <div>\n        <StyledCustomFocus as=\"input\" placeholder=\"Always shows focus\" aria-label=\"Example input\" />\n      </div>\n      <div>\n        <StyledCustomFocus tabIndex={0}>\n          <p>Focusable div content only shows focus with keyboard interaction</p>\n        </StyledCustomFocus>\n      </div>\n      <div>\n        <StyledCustomFocus\n          as=\"textarea\"\n          placeholder=\"Always shows focus\"\n          aria-label=\"Example textarea\"\n        />\n      </div>\n      <div>\n        <label>\n          <StyledCustomFocus as=\"input\" type=\"checkbox\" />\n          Only shows focus when keyed to\n        </label>\n      </div>\n    </StyledWrapper>\n  );\n};\n\nexport const WithSelection = () => {\n  const items = ['One', 'Two', 'Three'];\n\n  const StyledExampleContainer = styled.ul`\n    display: flex;\n  `;\n\n  const StyledExampleItem = styled(StyledCustomFocus).attrs({ as: 'li' })`\n    list-style: none;\n    margin: 16px;\n    padding: 8px;\n    text-align: center;\n    cursor: pointer;\n\n    ${props => props.isSelected && `border-bottom: 4px solid blue`}\n  `;\n\n  const Selection = () => {\n    const { selectedItem, getContainerProps, getItemProps } = useSelection({\n      defaultSelectedIndex: 0\n    });\n    const ref = useRef<HTMLUListElement>(null);\n\n    useFocusVisible({ scope: ref });\n\n    return (\n      <StyledExampleContainer {...(getContainerProps({ ref }) as any)}>\n        {items.map(item => {\n          const itemRef = React.createRef();\n          const isSelected = selectedItem === item;\n\n          return (\n            <StyledExampleItem\n              {...getItemProps({\n                key: item,\n                item,\n                focusRef: itemRef,\n                isSelected\n              })}\n            >\n              {item}\n            </StyledExampleItem>\n          );\n        })}\n      </StyledExampleContainer>\n    );\n  };\n\n  return <Selection />;\n};\n\nContainer.storyName = 'FocusVisibleContainer';\n\nHook.storyName = 'useFocusVisible';\n\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`useFocusVisible\\` hook implements [\\`:focus-visible\\`](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo) behavior for a DOM element.`\n    }\n  }\n};\n\nWithSelection.storyName = 'Usage with useSelection';\n\nWithSelection.parameters = {\n  docs: {\n    description: {\n      story: `The following story demonstrates using the \\`useFocusVisible\\` hook with the \\`useSelection\\` hook.`\n    }\n  }\n};\n\nexport default {\n  title: 'FocusVisible Container',\n  component: FocusVisibleContainer,\n  parameters: {\n    layout: 'centered',\n    componentSubtitle: `A container component which wraps the useFocusVisible hook.`\n  }\n};\n",locationsMap:{container:{startLoc:{col:25,line:33},endLoc:{col:1,line:46},startBody:{col:25,line:33},endBody:{col:1,line:46}},hook:{startLoc:{col:20,line:48},endLoc:{col:1,line:81},startBody:{col:20,line:48},endBody:{col:1,line:81}},"with-selection":{startLoc:{col:29,line:83},endLoc:{col:1,line:132},startBody:{col:29,line:83},endBody:{col:1,line:132}}}},_parameters.layout="centered",_parameters.componentSubtitle="A container component which wraps the useFocusVisible hook.",_parameters)};focusvisible_stories_Container.parameters=Object(esm_extends.a)({storySource:{source:'() => (\n  <FocusVisibleContainer>\n    {({ ref }) => (\n      <StyledWrapper ref={ref}>\n        <div>\n          <StyledCustomFocus as="button">Hello world</StyledCustomFocus>\n        </div>\n        <div>\n          <StyledCustomFocus as="input" />\n        </div>\n      </StyledWrapper>\n    )}\n  </FocusVisibleContainer>\n)'}},focusvisible_stories_Container.parameters),focusvisible_stories_Hook.parameters=Object(esm_extends.a)({storySource:{source:'() => {\n  const ref = useRef<HTMLDivElement>(null);\n\n  useFocusVisible({ scope: ref });\n\n  return (\n    <StyledWrapper ref={ref}>\n      <div>\n        <StyledCustomFocus as="button">Customized Button Focus</StyledCustomFocus>\n      </div>\n      <div>\n        <StyledCustomFocus as="input" placeholder="Always shows focus" aria-label="Example input" />\n      </div>\n      <div>\n        <StyledCustomFocus tabIndex={0}>\n          <p>Focusable div content only shows focus with keyboard interaction</p>\n        </StyledCustomFocus>\n      </div>\n      <div>\n        <StyledCustomFocus\n          as="textarea"\n          placeholder="Always shows focus"\n          aria-label="Example textarea"\n        />\n      </div>\n      <div>\n        <label>\n          <StyledCustomFocus as="input" type="checkbox" />\n          Only shows focus when keyed to\n        </label>\n      </div>\n    </StyledWrapper>\n  );\n}'}},focusvisible_stories_Hook.parameters),focusvisible_stories_WithSelection.parameters=Object(esm_extends.a)({storySource:{source:"() => {\n  const items = ['One', 'Two', 'Three'];\n\n  const StyledExampleContainer = styled.ul`\n    display: flex;\n  `;\n\n  const StyledExampleItem = styled(StyledCustomFocus).attrs({ as: 'li' })`\n    list-style: none;\n    margin: 16px;\n    padding: 8px;\n    text-align: center;\n    cursor: pointer;\n\n    ${props => props.isSelected && `border-bottom: 4px solid blue`}\n  `;\n\n  const Selection = () => {\n    const { selectedItem, getContainerProps, getItemProps } = useSelection({\n      defaultSelectedIndex: 0\n    });\n    const ref = useRef<HTMLUListElement>(null);\n\n    useFocusVisible({ scope: ref });\n\n    return (\n      <StyledExampleContainer {...(getContainerProps({ ref }) as any)}>\n        {items.map(item => {\n          const itemRef = React.createRef();\n          const isSelected = selectedItem === item;\n\n          return (\n            <StyledExampleItem\n              {...getItemProps({\n                key: item,\n                item,\n                focusRef: itemRef,\n                isSelected\n              })}\n            >\n              {item}\n            </StyledExampleItem>\n          );\n        })}\n      </StyledExampleContainer>\n    );\n  };\n\n  return <Selection />;\n}"}},focusvisible_stories_WithSelection.parameters)},2901:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Container",(function(){return grid_stories_Container})),__webpack_require__.d(__webpack_exports__,"Hook",(function(){return grid_stories_Hook}));__webpack_require__(2876),__webpack_require__(290),__webpack_require__(1122);var objectWithoutPropertiesLoose=__webpack_require__(419),esm_extends=__webpack_require__(345),react=__webpack_require__(0),react_default=__webpack_require__.n(react),prop_types=__webpack_require__(2),prop_types_default=__webpack_require__.n(prop_types),index_esm=(__webpack_require__(1716),__webpack_require__(423)),_excluded=["rowIdx","colIdx","onClick","onFocus","onKeyDown"],GRID_KEYS=["ArrowLeft","ArrowRight","ArrowUp","ArrowDown","Home","End"];function useGrid(_ref){var rtl=_ref.rtl,wrap=_ref.wrap,matrix=_ref.matrix,idPrefix=_ref.idPrefix,selection=_ref.selection,onChange=_ref.onChange,onSelect=_ref.onSelect,rowIndex=_ref.rowIndex,colIndex=_ref.colIndex,selectedRowIndex=_ref.selectedRowIndex,selectedColIndex=_ref.selectedColIndex,defaultRowIndex=_ref.defaultRowIndex,defaultColIndex=_ref.defaultColIndex,defaultSelectedRowIndex=_ref.defaultSelectedRowIndex,defaultSelectedColIndex=_ref.defaultSelectedColIndex,rowCount=matrix.length,columnCount=matrix[0].length,lastRowLength=matrix[rowCount-1].length,_useState=Object(react.useState)(null!=defaultRowIndex?defaultRowIndex:0),uncontrolledRowIndex=_useState[0],setUncontrolledRowIndex=_useState[1],_useState2=Object(react.useState)(null!=defaultColIndex?defaultColIndex:0),uncontrolledColIndex=_useState2[0],setUncontrolledColIndex=_useState2[1],controlledFocus=null!==rowIndex&&null!==colIndex&&void 0!==rowIndex&&void 0!==colIndex,controlledSelect=null!==selectedRowIndex&&null!==selectedColIndex&&void 0!==selectedRowIndex&&void 0!==selectedColIndex,_useState3=Object(react.useState)(null!=defaultSelectedRowIndex?defaultSelectedRowIndex:-1),uncontrolledSelectedRowIndex=_useState3[0],setUncontrolledSelectedIndex=_useState3[1],_useState4=Object(react.useState)(null!=defaultSelectedColIndex?defaultSelectedColIndex:-1),uncontrolledSelectedColIndex=_useState4[0],setUncontrolledSelectedColIndex=_useState4[1],isControlled=controlledFocus||controlledSelect,setFocusedCell=function setFocusedCell(rowIdx,colIdx){setUncontrolledRowIndex(rowIdx),setUncontrolledColIndex(colIdx)},setFocus=function setFocus(rowIdx,colIdx){var id=idPrefix+"-"+rowIdx+"-"+colIdx,element=document.getElementById(id);element&&element.focus()},onNavigate=function onNavigate(e){if(GRID_KEYS.includes(e.key)&&e.preventDefault(),isControlled){var onLastRow=rowIndex===rowCount-1,onLastCol=colIndex===columnCount-1,rightEnd=onLastRow&&colIndex===lastRowLength-1,downEnd=rowIndex===rowCount-2&&colIndex>=lastRowLength,backward=function backward(){colIndex>0&&(onChange&&onChange(rowIndex,colIndex-1),setFocus(rowIndex,colIndex-1)),wrap&&0===colIndex&&rowIndex>0&&(onChange&&onChange(rowIndex-1,columnCount-1),setFocus(rowIndex-1,columnCount-1))},forward=function forward(){colIndex<columnCount-1&&!rightEnd&&(onChange&&onChange(rowIndex,colIndex+1),setFocus(rowIndex,colIndex+1)),wrap&&onLastCol&&!onLastRow&&(onChange&&onChange(rowIndex+1,0),setFocus(rowIndex+1,0))};switch(e.key){case"ArrowLeft":return rtl?forward():backward();case"ArrowRight":return rtl?backward():forward();case"ArrowUp":if(0===rowIndex&&0===colIndex)break;if(rowIndex>0){onChange&&onChange(rowIndex-1,colIndex),setFocus(rowIndex-1,colIndex);break}wrap&&(colIndex<=lastRowLength?(setFocus(rowCount-1,colIndex-1),onChange&&onChange(rowCount-1,colIndex-1)):(setFocus(rowCount-2,colIndex-1),onChange&&onChange(rowCount-2,colIndex-1)));break;case"ArrowDown":if(rowIndex<rowCount-1&&!downEnd&&(onChange&&onChange(rowIndex+1,colIndex),setFocus(rowIndex+1,colIndex)),wrap&&(colIndex<columnCount-1&&onLastRow&&(setFocus(0,colIndex+1),onChange&&onChange(0,colIndex+1)),colIndex>=lastRowLength&&rowCount-1===rowIndex+1&&colIndex<columnCount-1)){setFocus(0,colIndex+1),onChange&&onChange(0,colIndex+1);break}break;case"Home":e.ctrlKey?(onChange&&onChange(0,0),setFocus(0,0)):(onChange&&onChange(rowIndex,0),setFocus(rowIndex,0));break;case"End":e.ctrlKey?(onChange&&onChange(rowCount-1,matrix[rowCount-1].length-1),setFocus(rowCount-1,matrix[rowCount-1].length-1)):(onChange&&onChange(rowIndex,matrix[rowIndex].length-1),setFocus(rowIndex,matrix[rowIndex].length-1))}}else{var _onLastRow=uncontrolledRowIndex===rowCount-1,_onLastCol=uncontrolledColIndex===columnCount-1,_rightEnd=_onLastRow&&uncontrolledColIndex===lastRowLength-1,_downEnd=uncontrolledRowIndex===rowCount-2&&uncontrolledColIndex>=lastRowLength,_forward=function _forward(){uncontrolledColIndex<columnCount-1&&!_rightEnd&&(setUncontrolledColIndex(uncontrolledColIndex+1),setFocus(uncontrolledRowIndex,uncontrolledColIndex+1),onChange&&onChange(uncontrolledRowIndex,uncontrolledColIndex+1)),wrap&&_onLastCol&&!_onLastRow&&(setUncontrolledRowIndex(uncontrolledRowIndex+1),setUncontrolledColIndex(0),setFocus(uncontrolledRowIndex+1,0),onChange&&onChange(uncontrolledRowIndex+1,0))},_backward=function _backward(){uncontrolledColIndex>0&&(setUncontrolledColIndex(uncontrolledColIndex-1),setFocus(uncontrolledRowIndex,uncontrolledColIndex-1),onChange&&onChange(uncontrolledRowIndex,uncontrolledColIndex-1)),wrap&&0===uncontrolledColIndex&&uncontrolledRowIndex>0&&(setUncontrolledRowIndex(uncontrolledRowIndex-1),setUncontrolledColIndex(columnCount-1),setFocus(uncontrolledRowIndex-1,columnCount-1),onChange&&onChange(uncontrolledRowIndex-1,columnCount-1))};switch(e.key){case"ArrowLeft":return rtl?_forward():_backward();case"ArrowRight":return rtl?_backward():_forward();case"ArrowUp":if(0===uncontrolledRowIndex&&0===uncontrolledColIndex)break;if(uncontrolledRowIndex>0){setUncontrolledRowIndex(uncontrolledRowIndex-1),setFocus(uncontrolledRowIndex-1,uncontrolledColIndex),onChange&&onChange(uncontrolledRowIndex-1,uncontrolledColIndex);break}wrap&&(uncontrolledColIndex<=lastRowLength?(setUncontrolledRowIndex(rowCount-1),setUncontrolledColIndex(uncontrolledColIndex-1),setFocus(rowCount-1,uncontrolledColIndex-1),onChange&&onChange(rowCount-1,uncontrolledColIndex-1)):(setUncontrolledRowIndex(rowCount-2),setUncontrolledColIndex(uncontrolledColIndex-1),setFocus(rowCount-2,uncontrolledColIndex-1),onChange&&onChange(rowCount-2,uncontrolledColIndex-1)));break;case"ArrowDown":if(uncontrolledRowIndex<rowCount-1&&!_downEnd&&(setUncontrolledRowIndex(uncontrolledRowIndex+1),setFocus(uncontrolledRowIndex+1,uncontrolledColIndex),onChange&&onChange(uncontrolledRowIndex+1,uncontrolledColIndex)),wrap&&(uncontrolledColIndex<columnCount-1&&_onLastRow&&(setUncontrolledRowIndex(0),setUncontrolledColIndex(uncontrolledColIndex+1),setFocus(0,uncontrolledColIndex+1),onChange&&onChange(0,uncontrolledColIndex+1)),uncontrolledColIndex>=lastRowLength&&rowCount-1===uncontrolledRowIndex+1&&uncontrolledColIndex<columnCount-1)){setUncontrolledRowIndex(0),setUncontrolledColIndex(uncontrolledColIndex+1),setFocus(0,uncontrolledColIndex+1),onChange&&onChange(0,uncontrolledColIndex+1);break}break;case"Home":e.ctrlKey?(setFocusedCell(0,0),setFocus(0,0),onChange&&onChange(0,0)):(setFocusedCell(uncontrolledRowIndex,0),setFocus(uncontrolledRowIndex,0),onChange&&onChange(uncontrolledRowIndex,0));break;case"End":e.ctrlKey?(setFocusedCell(rowCount-1,lastRowLength-1),setFocus(rowCount-1,lastRowLength-1),onChange&&onChange(rowCount-1,lastRowLength-1)):(setFocusedCell(uncontrolledRowIndex,matrix[uncontrolledRowIndex].length-1),setFocus(uncontrolledRowIndex,matrix[uncontrolledRowIndex].length-1),onChange&&onChange(uncontrolledRowIndex,matrix[uncontrolledRowIndex].length-1))}}},getTabIndex=function getTabIndex(rowIdx,colIdx){return isControlled?-1===rowIndex&&-1===colIndex&&0===rowIdx&&0===colIdx||rowIndex===rowIdx&&colIndex===colIdx?0:-1:rowIdx<=0&&colIdx<=0&&uncontrolledRowIndex<=0&&uncontrolledColIndex<=0||uncontrolledRowIndex===rowIdx&&uncontrolledColIndex===colIdx?0:-1},getAriaSelected=function getAriaSelected(rowIdx,colIdx){return isControlled?selectedRowIndex===rowIdx&&selectedColIndex===colIdx:uncontrolledSelectedRowIndex===rowIdx&&uncontrolledSelectedColIndex===colIdx};return{getGridCellProps:function getGridCellProps(_ref2){var rowIdx=_ref2.rowIdx,colIdx=_ref2.colIdx,onClick=_ref2.onClick,onFocus=_ref2.onFocus,onKeyDown=_ref2.onKeyDown,other=Object(objectWithoutPropertiesLoose.a)(_ref2,_excluded);return Object(esm_extends.a)({tabIndex:getTabIndex(rowIdx,colIdx),role:"gridcell","aria-selected":selection?getAriaSelected(rowIdx,colIdx):void 0,id:idPrefix+"-"+rowIdx+"-"+colIdx,onClick:Object(index_esm.a)(onClick,(function(){!1===isControlled&&(setFocusedCell(rowIdx,colIdx),selection&&function setSelectedCell(rowIdx,colIdx){setUncontrolledSelectedIndex(rowIdx),setUncontrolledSelectedColIndex(colIdx)}(rowIdx,colIdx)),onChange&&onChange(rowIdx,colIdx),selection&&onSelect&&onSelect(rowIdx,colIdx)})),onFocus:Object(index_esm.a)(onFocus,(function(){isControlled&&-1===rowIndex&&-1===colIndex&&onChange&&onChange(0,0)})),onKeyDown:Object(index_esm.a)(onKeyDown,onNavigate)},other)}}}var _parameters,GridContainer_excluded=["children","render"],GridContainer_GridContainer=function GridContainer(props){var children=props.children,_props$render=props.render,render=void 0===_props$render?children:_props$render,options=Object(objectWithoutPropertiesLoose.a)(props,GridContainer_excluded);return react_default.a.createElement(react_default.a.Fragment,null,render(useGrid(options)))};GridContainer_GridContainer.propTypes={children:prop_types_default.a.func,render:prop_types_default.a.func,rtl:prop_types_default.a.bool,wrap:prop_types_default.a.bool,selection:prop_types_default.a.bool,matrix:prop_types_default.a.any,idPrefix:prop_types_default.a.string,rowIndex:prop_types_default.a.number,colIndex:prop_types_default.a.number,selectedRowIndex:prop_types_default.a.number,selectedColIndex:prop_types_default.a.number,defaultRowIndex:prop_types_default.a.number,defaultColIndex:prop_types_default.a.number,defaultSelectedRowIndex:prop_types_default.a.number,defaultSelectedColIndex:prop_types_default.a.number};try{GridContainer_GridContainer.displayName="GridContainer",GridContainer_GridContainer.__docgenInfo={description:"",displayName:"GridContainer",props:{render:{defaultValue:null,description:"A render prop function which receives grid a prop getter",name:"render",required:!1,type:{name:"((options: IUseGridReturnValue) => ReactNode)"}},children:{defaultValue:null,description:"A children render prop function which receives a grid prop getter",name:"children",required:!1,type:{name:"(((options: IUseGridReturnValue) => ReactNode) & (boolean | ReactChild | ReactFragment | ReactPortal | null))"}},rtl:{defaultValue:null,description:"Determines if navigation uses right-to-left direction",name:"rtl",required:!1,type:{name:"boolean"}},wrap:{defaultValue:null,description:"Enables wrapped keyboard navigation",name:"wrap",required:!1,type:{name:"boolean"}},selection:{defaultValue:null,description:"Enables cell selection",name:"selection",required:!1,type:{name:"boolean"}},matrix:{defaultValue:null,description:"Sets the two-dimension array to render the grid",name:"matrix",required:!0,type:{name:"any[][]"}},idPrefix:{defaultValue:null,description:"Prefixes IDs for the grid and cells",name:"idPrefix",required:!1,type:{name:"string"}},rowIndex:{defaultValue:null,description:"Sets the focused row index in a controlled grid",name:"rowIndex",required:!1,type:{name:"number"}},colIndex:{defaultValue:null,description:"Sets the focused column index in a controlled grid",name:"colIndex",required:!1,type:{name:"number"}},selectedRowIndex:{defaultValue:null,description:"Sets the selected row index in a controlled grid",name:"selectedRowIndex",required:!1,type:{name:"number"}},selectedColIndex:{defaultValue:null,description:"Sets the selected column index in a controlled grid",name:"selectedColIndex",required:!1,type:{name:"number"}},defaultRowIndex:{defaultValue:null,description:"Sets the default focused row index in a uncontrolled grid",name:"defaultRowIndex",required:!1,type:{name:"number"}},defaultColIndex:{defaultValue:null,description:"Sets the default focused column index in a uncontrolled grid",name:"defaultColIndex",required:!1,type:{name:"number"}},defaultSelectedRowIndex:{defaultValue:null,description:"Sets the default selected row index in a uncontrolled grid",name:"defaultSelectedRowIndex",required:!1,type:{name:"number"}},defaultSelectedColIndex:{defaultValue:null,description:"Sets the default selected column index in a uncontrolled grid",name:"defaultSelectedColIndex",required:!1,type:{name:"number"}},onChange:{defaultValue:null,description:"Handles grid change event",name:"onChange",required:!1,type:{name:"((rowIndex: number, colIndex: number) => void)"}},onSelect:{defaultValue:null,description:"Handles grid select event",name:"onSelect",required:!1,type:{name:"((rowIndex: number, colIndex: number) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/grid/src/GridContainer.tsx#GridContainer"]={docgenInfo:GridContainer_GridContainer.__docgenInfo,name:"GridContainer",path:"packages/grid/src/GridContainer.tsx#GridContainer"})}catch(__react_docgen_typescript_loader_error){}var grid_stories_excluded=["rtl"],ARGS={wrap:!0,selection:!0,rtl:!1},grid_stories_Grid=function Grid(_ref){var rtl=_ref.rtl,matrix=_ref.matrix,selection=_ref.selection,selectedRowIndex=_ref.selectedRowIndex,selectedColIndex=_ref.selectedColIndex,getGridCellProps=_ref.getGridCellProps;return react_default.a.createElement("table",{role:"grid",style:{direction:rtl?"rtl":"ltr"}},react_default.a.createElement("tbody",null,matrix.map((function(row,rowIdx){return react_default.a.createElement("tr",{key:"rowIdx-"+row[0]},row.map((function(item,colIdx){var selected=rowIdx===selectedRowIndex&&colIdx===selectedColIndex;return react_default.a.createElement("td",{role:"presentation",key:item},react_default.a.createElement("button",getGridCellProps({rowIdx:rowIdx,colIdx:colIdx,"aria-label":"cell "+rowIdx+", "+colIdx,style:{width:30,height:30}}),selection&&selected?"✓":null))})))}))))},grid_stories_Container=function Container(_ref2){var rtl=_ref2.rtl,wrap=_ref2.wrap,selection=_ref2.selection,cellCount=_ref2.cellCount,matrix=function convertToMatrix(array,columnCount){return array.reduce((function(acc,curr){return 0===acc.length?[[curr]]:(acc[acc.length-1].length<columnCount?acc[acc.length-1].push(curr):acc.push([curr]),acc)}),[])}(Array(cellCount).fill(void 0).map((function(s,i){return i})),5),_useState=Object(react.useState)(0),rowIndex=_useState[0],setRowIndex=_useState[1],_useState2=Object(react.useState)(0),colIndex=_useState2[0],setColIndex=_useState2[1],_useState3=Object(react.useState)(selection?0:null),selectedRowIndex=_useState3[0],setSelectedRowIndex=_useState3[1],_useState4=Object(react.useState)(selection?0:null),selectedColIndex=_useState4[0],setSelectedColIndex=_useState4[1];return react_default.a.createElement(GridContainer_GridContainer,{rtl:rtl,wrap:wrap,selection:selection,matrix:matrix,onChange:function onChange(rowIdx,colIdx){setRowIndex(rowIdx),setColIndex(colIdx)},onSelect:function onSelect(rowIdx,colIdx){setSelectedRowIndex(rowIdx),setSelectedColIndex(colIdx)},idPrefix:"prefix-1",rowIndex:rowIndex,colIndex:colIndex,selectedRowIndex:selectedRowIndex,selectedColIndex:selectedColIndex},(function(_ref3){var getGridCellProps=_ref3.getGridCellProps;return react_default.a.createElement(grid_stories_Grid,{rtl:rtl,matrix:matrix,selection:selection,selectedRowIndex:selectedRowIndex,selectedColIndex:selectedColIndex,getGridCellProps:getGridCellProps})}))};grid_stories_Container.storyName="GridContainer",grid_stories_Container.args=Object(esm_extends.a)({},ARGS,{cellCount:25}),grid_stories_Container.argTypes={cellCount:{name:"cell count",description:"Adjusts the cell count",control:{type:"range",min:1,max:25}},matrix:{control:{disable:!0}},idPrefix:{control:{disable:!0}},rowIndex:{control:{disable:!0}},colIndex:{control:{disable:!0}},selectedRowIndex:{control:{disable:!0}},selectedColIndex:{control:{disable:!0}},defaultRowIndex:{control:{disable:!0}},defaultColIndex:{control:{disable:!0}},defaultSelectedRowIndex:{control:{disable:!0}},defaultSelectedColIndex:{control:{disable:!0}}};var grid_stories_Hook=function Hook(_ref4){var rtl=_ref4.rtl,other=Object(objectWithoutPropertiesLoose.a)(_ref4,grid_stories_excluded),matrix=[[1,2,3],[4,5,6],[7,8,9]],_useState5=Object(react.useState)(1),rowIndex=_useState5[0],setRowIndex=_useState5[1],_useState6=Object(react.useState)(1),colIndex=_useState6[0],setColIndex=_useState6[1],_useState7=Object(react.useState)(1),selectedRowIndex=_useState7[0],setSelectedRowIndex=_useState7[1],_useState8=Object(react.useState)(1),selectedColIndex=_useState8[0],setSelectedColIndex=_useState8[1],getGridCellProps=useGrid(Object(esm_extends.a)({},other,{matrix:matrix,onChange:function onChange(rowIdx,colIdx){setRowIndex(rowIdx),setColIndex(colIdx)},onSelect:function onSelect(rowIdx,colIdx){setSelectedRowIndex(rowIdx),setSelectedColIndex(colIdx)},idPrefix:"prefix-2",rowIndex:rowIndex,colIndex:colIndex,selectedRowIndex:selectedRowIndex,selectedColIndex:selectedColIndex})).getGridCellProps;return react_default.a.createElement(grid_stories_Grid,{rtl:rtl,selection:!0,matrix:matrix,selectedRowIndex:selectedRowIndex,selectedColIndex:selectedColIndex,getGridCellProps:getGridCellProps})};grid_stories_Hook.storyName="useGrid",grid_stories_Hook.args=ARGS,grid_stories_Hook.parameters={docs:{description:{story:"The `useGrid` hook implements the [grid](https://www.w3.org/TR/wai-aria-practices-1.1/#grid) design pattern."}}};__webpack_exports__.default={component:GridContainer_GridContainer,title:"Grid Container",parameters:(_parameters={storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React, { useState } from \'react\';\\nimport { useGrid, GridContainer, IUseGridReturnValue } from \'./src\';\\n\\nconst ARGS = {\\n  wrap: true,\\n  selection: true,\\n  rtl: false\\n};\\n\\n// Given a column count, converts a flat array into a 2D array\\nconst convertToMatrix = (array, columnCount) =>\\n  array.reduce((acc, curr) => {\\n    if (acc.length === 0) {\\n      return [[curr]];\\n    }\\n\\n    if (acc[acc.length - 1].length < columnCount) {\\n      acc[acc.length - 1].push(curr);\\n    } else {\\n      acc.push([curr]);\\n    }\\n\\n    return acc;\\n  }, []);\\n\\nconst Grid = ({ rtl, matrix, selection, selectedRowIndex, selectedColIndex, getGridCellProps }) => (\\n  <table role=\\"grid\\" style={{ direction: rtl ? \'rtl\' : \'ltr\' }}>\\n    <tbody>\\n      {matrix.map((row, rowIdx) => (\\n        <tr key={`rowIdx-${row[0]}`}>\\n          {row.map((item, colIdx) => {\\n            const selected = rowIdx === selectedRowIndex && colIdx === selectedColIndex;\\n\\n            return (\\n              <td role=\\"presentation\\" key={item}>\\n                <button\\n                  {...getGridCellProps({\\n                    rowIdx,\\n                    colIdx,\\n                    \'aria-label\': `cell ${rowIdx}, ${colIdx}`,\\n                    style: { width: 30, height: 30 }\\n                  })}\\n                >\\n                  {selection && selected ? \'✓\' : null}\\n                </button>\\n              </td>\\n            );\\n          })}\\n        </tr>\\n      ))}\\n    </tbody>\\n  </table>\\n);\\n\\nexport const Container = ({ rtl, wrap, selection, cellCount }) => {\\n  const items = Array(cellCount)\\n    .fill(undefined)\\n    .map((s, i) => i);\\n  const idPrefix = \'prefix-1\';\\n  const matrix = convertToMatrix(items, 5);\\n  const [rowIndex, setRowIndex] = useState(0);\\n  const [colIndex, setColIndex] = useState(0);\\n  const [selectedRowIndex, setSelectedRowIndex] = useState(selection ? 0 : null);\\n  const [selectedColIndex, setSelectedColIndex] = useState(selection ? 0 : null);\\n\\n  const onChange = (rowIdx: number, colIdx: number) => {\\n    setRowIndex(rowIdx);\\n    setColIndex(colIdx);\\n  };\\n\\n  const onSelect = (rowIdx: number, colIdx: number) => {\\n    setSelectedRowIndex(rowIdx);\\n    setSelectedColIndex(colIdx);\\n  };\\n\\n  return (\\n    <GridContainer\\n      rtl={rtl}\\n      wrap={wrap}\\n      selection={selection}\\n      matrix={matrix}\\n      onChange={onChange}\\n      onSelect={onSelect}\\n      idPrefix={idPrefix}\\n      rowIndex={rowIndex}\\n      colIndex={colIndex}\\n      selectedRowIndex={selectedRowIndex}\\n      selectedColIndex={selectedColIndex}\\n    >\\n      {({ getGridCellProps }: IUseGridReturnValue) => (\\n        <Grid\\n          rtl={rtl}\\n          matrix={matrix}\\n          selection={selection}\\n          selectedRowIndex={selectedRowIndex}\\n          selectedColIndex={selectedColIndex}\\n          getGridCellProps={getGridCellProps}\\n        />\\n      )}\\n    </GridContainer>\\n  );\\n};\\n\\nContainer.storyName = \'GridContainer\';\\nContainer.args = { ...ARGS, cellCount: 25 };\\nContainer.argTypes = {\\n  cellCount: {\\n    name: \'cell count\',\\n    description: \'Adjusts the cell count\',\\n    control: { type: \'range\', min: 1, max: 25 }\\n  },\\n  matrix: { control: { disable: true } },\\n  idPrefix: { control: { disable: true } },\\n  rowIndex: { control: { disable: true } },\\n  colIndex: { control: { disable: true } },\\n  selectedRowIndex: { control: { disable: true } },\\n  selectedColIndex: { control: { disable: true } },\\n  defaultRowIndex: { control: { disable: true } },\\n  defaultColIndex: { control: { disable: true } },\\n  defaultSelectedRowIndex: { control: { disable: true } },\\n  defaultSelectedColIndex: { control: { disable: true } }\\n};\\n\\nexport const Hook = ({ rtl, ...other }) => {\\n  const matrix = [\\n    [1, 2, 3],\\n    [4, 5, 6],\\n    [7, 8, 9]\\n  ];\\n\\n  const idPrefix = \'prefix-2\';\\n  const [rowIndex, setRowIndex] = useState(1);\\n  const [colIndex, setColIndex] = useState(1);\\n  const [selectedRowIndex, setSelectedRowIndex] = useState(1);\\n  const [selectedColIndex, setSelectedColIndex] = useState(1);\\n\\n  const onChange = (rowIdx: number, colIdx: number) => {\\n    setRowIndex(rowIdx);\\n    setColIndex(colIdx);\\n  };\\n\\n  const onSelect = (rowIdx: number, colIdx: number) => {\\n    setSelectedRowIndex(rowIdx);\\n    setSelectedColIndex(colIdx);\\n  };\\n\\n  const { getGridCellProps } = useGrid({\\n    ...other,\\n    matrix,\\n    onChange,\\n    onSelect,\\n    idPrefix,\\n    rowIndex,\\n    colIndex,\\n    selectedRowIndex,\\n    selectedColIndex\\n  });\\n\\n  return (\\n    <Grid\\n      rtl={rtl}\\n      selection\\n      matrix={matrix}\\n      selectedRowIndex={selectedRowIndex}\\n      selectedColIndex={selectedColIndex}\\n      getGridCellProps={getGridCellProps}\\n    />\\n  );\\n};\\n\\nHook.storyName = \'useGrid\';\\nHook.args = ARGS;\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`useGrid\\\\` hook implements the [grid](https://www.w3.org/TR/wai-aria-practices-1.1/#grid) design pattern.`\\n    }\\n  }\\n};\\n\\nexport default {\\n  component: GridContainer,\\n  title: \'Grid Container\',\\n  parameters: {\\n    layout: \'centered\',\\n    componentSubtitle: `A container component which wraps the useGrid hook.`\\n  }\\n};\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Container":{"startLoc":{"col":25,"line":62},"endLoc":{"col":1,"line":109},"startBody":{"col":25,"line":62},"endBody":{"col":1,"line":109}},"Hook":{"startLoc":{"col":20,"line":131},"endLoc":{"col":1,"line":176},"startBody":{"col":20,"line":131},"endBody":{"col":1,"line":176}}};\n    \n/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React, { useState } from \'react\';\nimport { useGrid, GridContainer, IUseGridReturnValue } from \'./src\';\n\nconst ARGS = {\n  wrap: true,\n  selection: true,\n  rtl: false\n};\n\n// Given a column count, converts a flat array into a 2D array\nconst convertToMatrix = (array, columnCount) =>\n  array.reduce((acc, curr) => {\n    if (acc.length === 0) {\n      return [[curr]];\n    }\n\n    if (acc[acc.length - 1].length < columnCount) {\n      acc[acc.length - 1].push(curr);\n    } else {\n      acc.push([curr]);\n    }\n\n    return acc;\n  }, []);\n\nconst Grid = ({ rtl, matrix, selection, selectedRowIndex, selectedColIndex, getGridCellProps }) => (\n  <table role="grid" style={{ direction: rtl ? \'rtl\' : \'ltr\' }}>\n    <tbody>\n      {matrix.map((row, rowIdx) => (\n        <tr key={`rowIdx-${row[0]}`}>\n          {row.map((item, colIdx) => {\n            const selected = rowIdx === selectedRowIndex && colIdx === selectedColIndex;\n\n            return (\n              <td role="presentation" key={item}>\n                <button\n                  {...getGridCellProps({\n                    rowIdx,\n                    colIdx,\n                    \'aria-label\': `cell ${rowIdx}, ${colIdx}`,\n                    style: { width: 30, height: 30 }\n                  })}\n                >\n                  {selection && selected ? \'✓\' : null}\n                </button>\n              </td>\n            );\n          })}\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nexport const Container = ({ rtl, wrap, selection, cellCount }) => {\n  const items = Array(cellCount)\n    .fill(undefined)\n    .map((s, i) => i);\n  const idPrefix = \'prefix-1\';\n  const matrix = convertToMatrix(items, 5);\n  const [rowIndex, setRowIndex] = useState(0);\n  const [colIndex, setColIndex] = useState(0);\n  const [selectedRowIndex, setSelectedRowIndex] = useState(selection ? 0 : null);\n  const [selectedColIndex, setSelectedColIndex] = useState(selection ? 0 : null);\n\n  const onChange = (rowIdx: number, colIdx: number) => {\n    setRowIndex(rowIdx);\n    setColIndex(colIdx);\n  };\n\n  const onSelect = (rowIdx: number, colIdx: number) => {\n    setSelectedRowIndex(rowIdx);\n    setSelectedColIndex(colIdx);\n  };\n\n  return (\n    <GridContainer\n      rtl={rtl}\n      wrap={wrap}\n      selection={selection}\n      matrix={matrix}\n      onChange={onChange}\n      onSelect={onSelect}\n      idPrefix={idPrefix}\n      rowIndex={rowIndex}\n      colIndex={colIndex}\n      selectedRowIndex={selectedRowIndex}\n      selectedColIndex={selectedColIndex}\n    >\n      {({ getGridCellProps }: IUseGridReturnValue) => (\n        <Grid\n          rtl={rtl}\n          matrix={matrix}\n          selection={selection}\n          selectedRowIndex={selectedRowIndex}\n          selectedColIndex={selectedColIndex}\n          getGridCellProps={getGridCellProps}\n        />\n      )}\n    </GridContainer>\n  );\n};;\n\nContainer.storyName = \'GridContainer\';\nContainer.args = { ...ARGS, cellCount: 25 };\nContainer.argTypes = {\n  cellCount: {\n    name: \'cell count\',\n    description: \'Adjusts the cell count\',\n    control: { type: \'range\', min: 1, max: 25 }\n  },\n  matrix: { control: { disable: true } },\n  idPrefix: { control: { disable: true } },\n  rowIndex: { control: { disable: true } },\n  colIndex: { control: { disable: true } },\n  selectedRowIndex: { control: { disable: true } },\n  selectedColIndex: { control: { disable: true } },\n  defaultRowIndex: { control: { disable: true } },\n  defaultColIndex: { control: { disable: true } },\n  defaultSelectedRowIndex: { control: { disable: true } },\n  defaultSelectedColIndex: { control: { disable: true } }\n};\n\nexport const Hook = ({ rtl, ...other }) => {\n  const matrix = [\n    [1, 2, 3],\n    [4, 5, 6],\n    [7, 8, 9]\n  ];\n\n  const idPrefix = \'prefix-2\';\n  const [rowIndex, setRowIndex] = useState(1);\n  const [colIndex, setColIndex] = useState(1);\n  const [selectedRowIndex, setSelectedRowIndex] = useState(1);\n  const [selectedColIndex, setSelectedColIndex] = useState(1);\n\n  const onChange = (rowIdx: number, colIdx: number) => {\n    setRowIndex(rowIdx);\n    setColIndex(colIdx);\n  };\n\n  const onSelect = (rowIdx: number, colIdx: number) => {\n    setSelectedRowIndex(rowIdx);\n    setSelectedColIndex(colIdx);\n  };\n\n  const { getGridCellProps } = useGrid({\n    ...other,\n    matrix,\n    onChange,\n    onSelect,\n    idPrefix,\n    rowIndex,\n    colIndex,\n    selectedRowIndex,\n    selectedColIndex\n  });\n\n  return (\n    <Grid\n      rtl={rtl}\n      selection\n      matrix={matrix}\n      selectedRowIndex={selectedRowIndex}\n      selectedColIndex={selectedColIndex}\n      getGridCellProps={getGridCellProps}\n    />\n  );\n};\n\nHook.storyName = \'useGrid\';\nHook.args = ARGS;\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`useGrid\\` hook implements the [grid](https://www.w3.org/TR/wai-aria-practices-1.1/#grid) design pattern.`\n    }\n  }\n};\n\nexport default {\n  component: GridContainer,\n  title: \'Grid Container\',\n  parameters: {"storySource":{"source":"/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React, { useState } from \'react\';\\nimport { useGrid, GridContainer, IUseGridReturnValue } from \'./src\';\\n\\nconst ARGS = {\\n  wrap: true,\\n  selection: true,\\n  rtl: false\\n};\\n\\n// Given a column count, converts a flat array into a 2D array\\nconst convertToMatrix = (array, columnCount) =>\\n  array.reduce((acc, curr) => {\\n    if (acc.length === 0) {\\n      return [[curr]];\\n    }\\n\\n    if (acc[acc.length - 1].length < columnCount) {\\n      acc[acc.length - 1].push(curr);\\n    } else {\\n      acc.push([curr]);\\n    }\\n\\n    return acc;\\n  }, []);\\n\\nconst Grid = ({ rtl, matrix, selection, selectedRowIndex, selectedColIndex, getGridCellProps }) => (\\n  <table role=\\"grid\\" style={{ direction: rtl ? \'rtl\' : \'ltr\' }}>\\n    <tbody>\\n      {matrix.map((row, rowIdx) => (\\n        <tr key={`rowIdx-${row[0]}`}>\\n          {row.map((item, colIdx) => {\\n            const selected = rowIdx === selectedRowIndex && colIdx === selectedColIndex;\\n\\n            return (\\n              <td role=\\"presentation\\" key={item}>\\n                <button\\n                  {...getGridCellProps({\\n                    rowIdx,\\n                    colIdx,\\n                    \'aria-label\': `cell ${rowIdx}, ${colIdx}`,\\n                    style: { width: 30, height: 30 }\\n                  })}\\n                >\\n                  {selection && selected ? \'✓\' : null}\\n                </button>\\n              </td>\\n            );\\n          })}\\n        </tr>\\n      ))}\\n    </tbody>\\n  </table>\\n);\\n\\nexport const Container = ({ rtl, wrap, selection, cellCount }) => {\\n  const items = Array(cellCount)\\n    .fill(undefined)\\n    .map((s, i) => i);\\n  const idPrefix = \'prefix-1\';\\n  const matrix = convertToMatrix(items, 5);\\n  const [rowIndex, setRowIndex] = useState(0);\\n  const [colIndex, setColIndex] = useState(0);\\n  const [selectedRowIndex, setSelectedRowIndex] = useState(selection ? 0 : null);\\n  const [selectedColIndex, setSelectedColIndex] = useState(selection ? 0 : null);\\n\\n  const onChange = (rowIdx: number, colIdx: number) => {\\n    setRowIndex(rowIdx);\\n    setColIndex(colIdx);\\n  };\\n\\n  const onSelect = (rowIdx: number, colIdx: number) => {\\n    setSelectedRowIndex(rowIdx);\\n    setSelectedColIndex(colIdx);\\n  };\\n\\n  return (\\n    <GridContainer\\n      rtl={rtl}\\n      wrap={wrap}\\n      selection={selection}\\n      matrix={matrix}\\n      onChange={onChange}\\n      onSelect={onSelect}\\n      idPrefix={idPrefix}\\n      rowIndex={rowIndex}\\n      colIndex={colIndex}\\n      selectedRowIndex={selectedRowIndex}\\n      selectedColIndex={selectedColIndex}\\n    >\\n      {({ getGridCellProps }: IUseGridReturnValue) => (\\n        <Grid\\n          rtl={rtl}\\n          matrix={matrix}\\n          selection={selection}\\n          selectedRowIndex={selectedRowIndex}\\n          selectedColIndex={selectedColIndex}\\n          getGridCellProps={getGridCellProps}\\n        />\\n      )}\\n    </GridContainer>\\n  );\\n};\\n\\nContainer.storyName = \'GridContainer\';\\nContainer.args = { ...ARGS, cellCount: 25 };\\nContainer.argTypes = {\\n  cellCount: {\\n    name: \'cell count\',\\n    description: \'Adjusts the cell count\',\\n    control: { type: \'range\', min: 1, max: 25 }\\n  },\\n  matrix: { control: { disable: true } },\\n  idPrefix: { control: { disable: true } },\\n  rowIndex: { control: { disable: true } },\\n  colIndex: { control: { disable: true } },\\n  selectedRowIndex: { control: { disable: true } },\\n  selectedColIndex: { control: { disable: true } },\\n  defaultRowIndex: { control: { disable: true } },\\n  defaultColIndex: { control: { disable: true } },\\n  defaultSelectedRowIndex: { control: { disable: true } },\\n  defaultSelectedColIndex: { control: { disable: true } }\\n};\\n\\nexport const Hook = ({ rtl, ...other }) => {\\n  const matrix = [\\n    [1, 2, 3],\\n    [4, 5, 6],\\n    [7, 8, 9]\\n  ];\\n\\n  const idPrefix = \'prefix-2\';\\n  const [rowIndex, setRowIndex] = useState(1);\\n  const [colIndex, setColIndex] = useState(1);\\n  const [selectedRowIndex, setSelectedRowIndex] = useState(1);\\n  const [selectedColIndex, setSelectedColIndex] = useState(1);\\n\\n  const onChange = (rowIdx: number, colIdx: number) => {\\n    setRowIndex(rowIdx);\\n    setColIndex(colIdx);\\n  };\\n\\n  const onSelect = (rowIdx: number, colIdx: number) => {\\n    setSelectedRowIndex(rowIdx);\\n    setSelectedColIndex(colIdx);\\n  };\\n\\n  const { getGridCellProps } = useGrid({\\n    ...other,\\n    matrix,\\n    onChange,\\n    onSelect,\\n    idPrefix,\\n    rowIndex,\\n    colIndex,\\n    selectedRowIndex,\\n    selectedColIndex\\n  });\\n\\n  return (\\n    <Grid\\n      rtl={rtl}\\n      selection\\n      matrix={matrix}\\n      selectedRowIndex={selectedRowIndex}\\n      selectedColIndex={selectedColIndex}\\n      getGridCellProps={getGridCellProps}\\n    />\\n  );\\n};\\n\\nHook.storyName = \'useGrid\';\\nHook.args = ARGS;\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`useGrid\\\\` hook implements the [grid](https://www.w3.org/TR/wai-aria-practices-1.1/#grid) design pattern.`\\n    }\\n  }\\n};\\n\\nexport default {\\n  component: GridContainer,\\n  title: \'Grid Container\',\\n  parameters: {\\n    layout: \'centered\',\\n    componentSubtitle: `A container component which wraps the useGrid hook.`\\n  }\\n};\\n","locationsMap":{"container":{"startLoc":{"col":25,"line":62},"endLoc":{"col":1,"line":109},"startBody":{"col":25,"line":62},"endBody":{"col":1,"line":109}},"hook":{"startLoc":{"col":20,"line":131},"endLoc":{"col":1,"line":176},"startBody":{"col":20,"line":131},"endBody":{"col":1,"line":176}}}},\n    layout: \'centered\',\n    componentSubtitle: `A container component which wraps the useGrid hook.`\n  },};\n',locationsMap:{container:{startLoc:{col:25,line:70},endLoc:{col:1,line:117},startBody:{col:25,line:70},endBody:{col:1,line:117}},hook:{startLoc:{col:20,line:139},endLoc:{col:1,line:184},startBody:{col:20,line:139},endBody:{col:1,line:184}}}}},_parameters.storySource={source:"/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React, { useState } from 'react';\nimport { useGrid, GridContainer, IUseGridReturnValue } from './src';\n\nconst ARGS = {\n  wrap: true,\n  selection: true,\n  rtl: false\n};\n\n// Given a column count, converts a flat array into a 2D array\nconst convertToMatrix = (array, columnCount) =>\n  array.reduce((acc, curr) => {\n    if (acc.length === 0) {\n      return [[curr]];\n    }\n\n    if (acc[acc.length - 1].length < columnCount) {\n      acc[acc.length - 1].push(curr);\n    } else {\n      acc.push([curr]);\n    }\n\n    return acc;\n  }, []);\n\nconst Grid = ({ rtl, matrix, selection, selectedRowIndex, selectedColIndex, getGridCellProps }) => (\n  <table role=\"grid\" style={{ direction: rtl ? 'rtl' : 'ltr' }}>\n    <tbody>\n      {matrix.map((row, rowIdx) => (\n        <tr key={`rowIdx-${row[0]}`}>\n          {row.map((item, colIdx) => {\n            const selected = rowIdx === selectedRowIndex && colIdx === selectedColIndex;\n\n            return (\n              <td role=\"presentation\" key={item}>\n                <button\n                  {...getGridCellProps({\n                    rowIdx,\n                    colIdx,\n                    'aria-label': `cell ${rowIdx}, ${colIdx}`,\n                    style: { width: 30, height: 30 }\n                  })}\n                >\n                  {selection && selected ? '✓' : null}\n                </button>\n              </td>\n            );\n          })}\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nexport const Container = ({ rtl, wrap, selection, cellCount }) => {\n  const items = Array(cellCount)\n    .fill(undefined)\n    .map((s, i) => i);\n  const idPrefix = 'prefix-1';\n  const matrix = convertToMatrix(items, 5);\n  const [rowIndex, setRowIndex] = useState(0);\n  const [colIndex, setColIndex] = useState(0);\n  const [selectedRowIndex, setSelectedRowIndex] = useState(selection ? 0 : null);\n  const [selectedColIndex, setSelectedColIndex] = useState(selection ? 0 : null);\n\n  const onChange = (rowIdx: number, colIdx: number) => {\n    setRowIndex(rowIdx);\n    setColIndex(colIdx);\n  };\n\n  const onSelect = (rowIdx: number, colIdx: number) => {\n    setSelectedRowIndex(rowIdx);\n    setSelectedColIndex(colIdx);\n  };\n\n  return (\n    <GridContainer\n      rtl={rtl}\n      wrap={wrap}\n      selection={selection}\n      matrix={matrix}\n      onChange={onChange}\n      onSelect={onSelect}\n      idPrefix={idPrefix}\n      rowIndex={rowIndex}\n      colIndex={colIndex}\n      selectedRowIndex={selectedRowIndex}\n      selectedColIndex={selectedColIndex}\n    >\n      {({ getGridCellProps }: IUseGridReturnValue) => (\n        <Grid\n          rtl={rtl}\n          matrix={matrix}\n          selection={selection}\n          selectedRowIndex={selectedRowIndex}\n          selectedColIndex={selectedColIndex}\n          getGridCellProps={getGridCellProps}\n        />\n      )}\n    </GridContainer>\n  );\n};\n\nContainer.storyName = 'GridContainer';\nContainer.args = { ...ARGS, cellCount: 25 };\nContainer.argTypes = {\n  cellCount: {\n    name: 'cell count',\n    description: 'Adjusts the cell count',\n    control: { type: 'range', min: 1, max: 25 }\n  },\n  matrix: { control: { disable: true } },\n  idPrefix: { control: { disable: true } },\n  rowIndex: { control: { disable: true } },\n  colIndex: { control: { disable: true } },\n  selectedRowIndex: { control: { disable: true } },\n  selectedColIndex: { control: { disable: true } },\n  defaultRowIndex: { control: { disable: true } },\n  defaultColIndex: { control: { disable: true } },\n  defaultSelectedRowIndex: { control: { disable: true } },\n  defaultSelectedColIndex: { control: { disable: true } }\n};\n\nexport const Hook = ({ rtl, ...other }) => {\n  const matrix = [\n    [1, 2, 3],\n    [4, 5, 6],\n    [7, 8, 9]\n  ];\n\n  const idPrefix = 'prefix-2';\n  const [rowIndex, setRowIndex] = useState(1);\n  const [colIndex, setColIndex] = useState(1);\n  const [selectedRowIndex, setSelectedRowIndex] = useState(1);\n  const [selectedColIndex, setSelectedColIndex] = useState(1);\n\n  const onChange = (rowIdx: number, colIdx: number) => {\n    setRowIndex(rowIdx);\n    setColIndex(colIdx);\n  };\n\n  const onSelect = (rowIdx: number, colIdx: number) => {\n    setSelectedRowIndex(rowIdx);\n    setSelectedColIndex(colIdx);\n  };\n\n  const { getGridCellProps } = useGrid({\n    ...other,\n    matrix,\n    onChange,\n    onSelect,\n    idPrefix,\n    rowIndex,\n    colIndex,\n    selectedRowIndex,\n    selectedColIndex\n  });\n\n  return (\n    <Grid\n      rtl={rtl}\n      selection\n      matrix={matrix}\n      selectedRowIndex={selectedRowIndex}\n      selectedColIndex={selectedColIndex}\n      getGridCellProps={getGridCellProps}\n    />\n  );\n};\n\nHook.storyName = 'useGrid';\nHook.args = ARGS;\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`useGrid\\` hook implements the [grid](https://www.w3.org/TR/wai-aria-practices-1.1/#grid) design pattern.`\n    }\n  }\n};\n\nexport default {\n  component: GridContainer,\n  title: 'Grid Container',\n  parameters: {\n    layout: 'centered',\n    componentSubtitle: `A container component which wraps the useGrid hook.`\n  }\n};\n",locationsMap:{container:{startLoc:{col:25,line:62},endLoc:{col:1,line:109},startBody:{col:25,line:62},endBody:{col:1,line:109}},hook:{startLoc:{col:20,line:131},endLoc:{col:1,line:176},startBody:{col:20,line:131},endBody:{col:1,line:176}}}},_parameters.layout="centered",_parameters.componentSubtitle="A container component which wraps the useGrid hook.",_parameters)};grid_stories_Container.parameters=Object(esm_extends.a)({storySource:{source:"({ rtl, wrap, selection, cellCount }) => {\n  const items = Array(cellCount)\n    .fill(undefined)\n    .map((s, i) => i);\n  const idPrefix = 'prefix-1';\n  const matrix = convertToMatrix(items, 5);\n  const [rowIndex, setRowIndex] = useState(0);\n  const [colIndex, setColIndex] = useState(0);\n  const [selectedRowIndex, setSelectedRowIndex] = useState(selection ? 0 : null);\n  const [selectedColIndex, setSelectedColIndex] = useState(selection ? 0 : null);\n\n  const onChange = (rowIdx: number, colIdx: number) => {\n    setRowIndex(rowIdx);\n    setColIndex(colIdx);\n  };\n\n  const onSelect = (rowIdx: number, colIdx: number) => {\n    setSelectedRowIndex(rowIdx);\n    setSelectedColIndex(colIdx);\n  };\n\n  return (\n    <GridContainer\n      rtl={rtl}\n      wrap={wrap}\n      selection={selection}\n      matrix={matrix}\n      onChange={onChange}\n      onSelect={onSelect}\n      idPrefix={idPrefix}\n      rowIndex={rowIndex}\n      colIndex={colIndex}\n      selectedRowIndex={selectedRowIndex}\n      selectedColIndex={selectedColIndex}\n    >\n      {({ getGridCellProps }: IUseGridReturnValue) => (\n        <Grid\n          rtl={rtl}\n          matrix={matrix}\n          selection={selection}\n          selectedRowIndex={selectedRowIndex}\n          selectedColIndex={selectedColIndex}\n          getGridCellProps={getGridCellProps}\n        />\n      )}\n    </GridContainer>\n  );\n}"}},grid_stories_Container.parameters),grid_stories_Hook.parameters=Object(esm_extends.a)({storySource:{source:"({ rtl, ...other }) => {\n  const matrix = [\n    [1, 2, 3],\n    [4, 5, 6],\n    [7, 8, 9]\n  ];\n\n  const idPrefix = 'prefix-2';\n  const [rowIndex, setRowIndex] = useState(1);\n  const [colIndex, setColIndex] = useState(1);\n  const [selectedRowIndex, setSelectedRowIndex] = useState(1);\n  const [selectedColIndex, setSelectedColIndex] = useState(1);\n\n  const onChange = (rowIdx: number, colIdx: number) => {\n    setRowIndex(rowIdx);\n    setColIndex(colIdx);\n  };\n\n  const onSelect = (rowIdx: number, colIdx: number) => {\n    setSelectedRowIndex(rowIdx);\n    setSelectedColIndex(colIdx);\n  };\n\n  const { getGridCellProps } = useGrid({\n    ...other,\n    matrix,\n    onChange,\n    onSelect,\n    idPrefix,\n    rowIndex,\n    colIndex,\n    selectedRowIndex,\n    selectedColIndex\n  });\n\n  return (\n    <Grid\n      rtl={rtl}\n      selection\n      matrix={matrix}\n      selectedRowIndex={selectedRowIndex}\n      selectedColIndex={selectedColIndex}\n      getGridCellProps={getGridCellProps}\n    />\n  );\n}"}},grid_stories_Hook.parameters);try{grid_stories_Container.displayName="Container",grid_stories_Container.__docgenInfo={description:"",displayName:"Container",props:{rtl:{defaultValue:null,description:"",name:"rtl",required:!0,type:{name:"any"}},wrap:{defaultValue:null,description:"",name:"wrap",required:!0,type:{name:"any"}},selection:{defaultValue:null,description:"",name:"selection",required:!0,type:{name:"any"}},cellCount:{defaultValue:null,description:"",name:"cellCount",required:!0,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/grid/grid.stories.tsx#Container"]={docgenInfo:grid_stories_Container.__docgenInfo,name:"Container",path:"packages/grid/grid.stories.tsx#Container"})}catch(__react_docgen_typescript_loader_error){}try{grid_stories_Hook.displayName="Hook",grid_stories_Hook.__docgenInfo={description:"",displayName:"Hook",props:{rtl:{defaultValue:null,description:"",name:"rtl",required:!0,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/grid/grid.stories.tsx#Hook"]={docgenInfo:grid_stories_Hook.__docgenInfo,name:"Hook",path:"packages/grid/grid.stories.tsx#Hook"})}catch(__react_docgen_typescript_loader_error){}},2902:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Container",(function(){return keyboardfocus_stories_Container})),__webpack_require__.d(__webpack_exports__,"Hook",(function(){return keyboardfocus_stories_Hook}));var esm_extends=__webpack_require__(559),react=__webpack_require__(0),react_default=__webpack_require__.n(react),prop_types=__webpack_require__(2),prop_types_default=__webpack_require__.n(prop_types),objectWithoutPropertiesLoose=(__webpack_require__(755),__webpack_require__(1123),__webpack_require__(1751)),index_esm=__webpack_require__(10),_excluded=["tabIndex","onBlur","onFocus","onMouseDown","onPointerDown","onTouchStart"];function useKeyboardFocus(){var _useState=Object(react.useState)(!1),keyboardFocused=_useState[0],setKeyboardFocused=_useState[1],focusableTimeoutIdRef=Object(react.useRef)(),isKeyboardFocusableRef=Object(react.useRef)(!0);Object(react.useEffect)((function(){return function(){clearTimeout(focusableTimeoutIdRef.current)}}),[]);var onKeyboardFocusPointerDown=function onKeyboardFocusPointerDown(){isKeyboardFocusableRef.current=!1;var timeoutId=setTimeout((function(){isKeyboardFocusableRef.current=!0}),0);focusableTimeoutIdRef.current=Number(timeoutId)},onKeyboardFocus=function onKeyboardFocus(){isKeyboardFocusableRef.current&&setKeyboardFocused(!0)},onKeyboardFocusBlur=function onKeyboardFocusBlur(){setKeyboardFocused(!1)};return{getFocusProps:function getFocusProps(_temp){var _ref=void 0===_temp?{}:_temp,_ref$tabIndex=_ref.tabIndex,tabIndex=void 0===_ref$tabIndex?0:_ref$tabIndex,onBlur=_ref.onBlur,onFocus=_ref.onFocus,onMouseDown=_ref.onMouseDown,onPointerDown=_ref.onPointerDown,onTouchStart=_ref.onTouchStart,props=Object(objectWithoutPropertiesLoose.a)(_ref,_excluded);return Object(esm_extends.a)({tabIndex:tabIndex,onBlur:Object(index_esm.b)(onBlur,onKeyboardFocusBlur),onFocus:Object(index_esm.b)(onFocus,onKeyboardFocus),onMouseDown:Object(index_esm.b)(onMouseDown,onKeyboardFocusPointerDown),onPointerDown:Object(index_esm.b)(onPointerDown,onKeyboardFocusPointerDown),onTouchStart:Object(index_esm.b)(onTouchStart,onKeyboardFocusPointerDown),"data-garden-container-id":"containers.keyboardfocus","data-garden-container-version":"storybook"},props)},keyboardFocused:keyboardFocused}}var _parameters,KeyboardFocusContainer_KeyboardFocusContainer=function KeyboardFocusContainer(_ref){var children=_ref.children,_ref$render=_ref.render,render=void 0===_ref$render?children:_ref$render;return react_default.a.createElement(react_default.a.Fragment,null,render(useKeyboardFocus()))};KeyboardFocusContainer_KeyboardFocusContainer.propTypes={children:prop_types_default.a.func,render:prop_types_default.a.func};try{KeyboardFocusContainer_KeyboardFocusContainer.displayName="KeyboardFocusContainer",KeyboardFocusContainer_KeyboardFocusContainer.__docgenInfo={description:"",displayName:"KeyboardFocusContainer",props:{render:{defaultValue:null,description:"A children render prop function",name:"render",required:!1,type:{name:"((options: IUseKeyboardFocusReturnValue) => ReactNode)"}},children:{defaultValue:null,description:"A render prop function",name:"children",required:!1,type:{name:"(((options: IUseKeyboardFocusReturnValue) => ReactNode) & (boolean | ReactChild | ReactFragment | ReactPortal | null))"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/keyboardfocus/src/KeyboardFocusContainer.tsx#KeyboardFocusContainer"]={docgenInfo:KeyboardFocusContainer_KeyboardFocusContainer.__docgenInfo,name:"KeyboardFocusContainer",path:"packages/keyboardfocus/src/KeyboardFocusContainer.tsx#KeyboardFocusContainer"})}catch(__react_docgen_typescript_loader_error){}var keyboardfocus_stories_Container=function Container(){return react_default.a.createElement(KeyboardFocusContainer_KeyboardFocusContainer,null,(function(_ref){var keyboardFocused=_ref.keyboardFocused,getFocusProps=_ref.getFocusProps;return react_default.a.createElement("div",getFocusProps({style:{color:keyboardFocused?"red":"inherit"}}),keyboardFocused?"Keyboard focused!":"Not keyboard focused")}))},keyboardfocus_stories_Hook=function Hook(){var _useKeyboardFocus=useKeyboardFocus(),getFocusProps=_useKeyboardFocus.getFocusProps,keyboardFocused=_useKeyboardFocus.keyboardFocused;return react_default.a.createElement("div",getFocusProps({style:{color:keyboardFocused?"red":"inherit"}}),keyboardFocused?"Keyboard focused!":"Not keyboard focused")};keyboardfocus_stories_Container.storyName="KeyboardFocusContainer",keyboardfocus_stories_Hook.storyName="useKeyboardFocus",keyboardfocus_stories_Hook.parameters={docs:{description:{story:"The `useKeyboardFocus` hook supplies state and props that help you to distinguish\n      between mouse and keyboard focus. Garden uses this in react-components to know\n      when to add the focus ring."}}};__webpack_exports__.default={title:"KeyboardFocus Container",component:KeyboardFocusContainer_KeyboardFocusContainer,parameters:(_parameters={storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React from \'react\';\\nimport { KeyboardFocusContainer, useKeyboardFocus } from \'./src\';\\n\\nexport const Container = () => (\\n  <KeyboardFocusContainer>\\n    {({ keyboardFocused, getFocusProps }) => (\\n      <div\\n        {...getFocusProps({\\n          style: {\\n            color: keyboardFocused ? \'red\' : \'inherit\'\\n          }\\n        })}\\n      >\\n        {keyboardFocused ? \'Keyboard focused!\' : \'Not keyboard focused\'}\\n      </div>\\n    )}\\n  </KeyboardFocusContainer>\\n);\\n\\nexport const Hook = () => {\\n  const { getFocusProps, keyboardFocused } = useKeyboardFocus();\\n\\n  return (\\n    <div\\n      {...getFocusProps({\\n        style: {\\n          color: keyboardFocused ? \'red\' : \'inherit\'\\n        }\\n      })}\\n    >\\n      {keyboardFocused ? \'Keyboard focused!\' : \'Not keyboard focused\'}\\n    </div>\\n  );\\n};\\n\\nContainer.storyName = \'KeyboardFocusContainer\';\\n\\nHook.storyName = \'useKeyboardFocus\';\\n\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`useKeyboardFocus\\\\` hook supplies state and props that help you to distinguish\\n      between mouse and keyboard focus. Garden uses this in react-components to know\\n      when to add the focus ring.`\\n    }\\n  }\\n};\\n\\nexport default {\\n  title: \'KeyboardFocus Container\',\\n  component: KeyboardFocusContainer,\\n  parameters: {\\n    layout: \'centered\',\\n    componentSubtitle: `A container component which wraps the useKeyboardFocus hook.`\\n  }\\n};\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Container":{"startLoc":{"col":25,"line":11},"endLoc":{"col":1,"line":25},"startBody":{"col":25,"line":11},"endBody":{"col":1,"line":25}},"Hook":{"startLoc":{"col":20,"line":27},"endLoc":{"col":1,"line":41},"startBody":{"col":20,"line":27},"endBody":{"col":1,"line":41}}};\n    \n/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React from \'react\';\nimport { KeyboardFocusContainer, useKeyboardFocus } from \'./src\';\n\nexport const Container = () => (\n  <KeyboardFocusContainer>\n    {({ keyboardFocused, getFocusProps }) => (\n      <div\n        {...getFocusProps({\n          style: {\n            color: keyboardFocused ? \'red\' : \'inherit\'\n          }\n        })}\n      >\n        {keyboardFocused ? \'Keyboard focused!\' : \'Not keyboard focused\'}\n      </div>\n    )}\n  </KeyboardFocusContainer>\n);;\n\nexport const Hook = () => {\n  const { getFocusProps, keyboardFocused } = useKeyboardFocus();\n\n  return (\n    <div\n      {...getFocusProps({\n        style: {\n          color: keyboardFocused ? \'red\' : \'inherit\'\n        }\n      })}\n    >\n      {keyboardFocused ? \'Keyboard focused!\' : \'Not keyboard focused\'}\n    </div>\n  );\n};\n\nContainer.storyName = \'KeyboardFocusContainer\';\n\nHook.storyName = \'useKeyboardFocus\';\n\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`useKeyboardFocus\\` hook supplies state and props that help you to distinguish\n      between mouse and keyboard focus. Garden uses this in react-components to know\n      when to add the focus ring.`\n    }\n  }\n};\n\nexport default {\n  title: \'KeyboardFocus Container\',\n  component: KeyboardFocusContainer,\n  parameters: {"storySource":{"source":"/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React from \'react\';\\nimport { KeyboardFocusContainer, useKeyboardFocus } from \'./src\';\\n\\nexport const Container = () => (\\n  <KeyboardFocusContainer>\\n    {({ keyboardFocused, getFocusProps }) => (\\n      <div\\n        {...getFocusProps({\\n          style: {\\n            color: keyboardFocused ? \'red\' : \'inherit\'\\n          }\\n        })}\\n      >\\n        {keyboardFocused ? \'Keyboard focused!\' : \'Not keyboard focused\'}\\n      </div>\\n    )}\\n  </KeyboardFocusContainer>\\n);\\n\\nexport const Hook = () => {\\n  const { getFocusProps, keyboardFocused } = useKeyboardFocus();\\n\\n  return (\\n    <div\\n      {...getFocusProps({\\n        style: {\\n          color: keyboardFocused ? \'red\' : \'inherit\'\\n        }\\n      })}\\n    >\\n      {keyboardFocused ? \'Keyboard focused!\' : \'Not keyboard focused\'}\\n    </div>\\n  );\\n};\\n\\nContainer.storyName = \'KeyboardFocusContainer\';\\n\\nHook.storyName = \'useKeyboardFocus\';\\n\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`useKeyboardFocus\\\\` hook supplies state and props that help you to distinguish\\n      between mouse and keyboard focus. Garden uses this in react-components to know\\n      when to add the focus ring.`\\n    }\\n  }\\n};\\n\\nexport default {\\n  title: \'KeyboardFocus Container\',\\n  component: KeyboardFocusContainer,\\n  parameters: {\\n    layout: \'centered\',\\n    componentSubtitle: `A container component which wraps the useKeyboardFocus hook.`\\n  }\\n};\\n","locationsMap":{"container":{"startLoc":{"col":25,"line":11},"endLoc":{"col":1,"line":25},"startBody":{"col":25,"line":11},"endBody":{"col":1,"line":25}},"hook":{"startLoc":{"col":20,"line":27},"endLoc":{"col":1,"line":41},"startBody":{"col":20,"line":27},"endBody":{"col":1,"line":41}}}},\n    layout: \'centered\',\n    componentSubtitle: `A container component which wraps the useKeyboardFocus hook.`\n  },};\n',locationsMap:{container:{startLoc:{col:25,line:19},endLoc:{col:1,line:33},startBody:{col:25,line:19},endBody:{col:1,line:33}},hook:{startLoc:{col:20,line:35},endLoc:{col:1,line:49},startBody:{col:20,line:35},endBody:{col:1,line:49}}}}},_parameters.storySource={source:"/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React from 'react';\nimport { KeyboardFocusContainer, useKeyboardFocus } from './src';\n\nexport const Container = () => (\n  <KeyboardFocusContainer>\n    {({ keyboardFocused, getFocusProps }) => (\n      <div\n        {...getFocusProps({\n          style: {\n            color: keyboardFocused ? 'red' : 'inherit'\n          }\n        })}\n      >\n        {keyboardFocused ? 'Keyboard focused!' : 'Not keyboard focused'}\n      </div>\n    )}\n  </KeyboardFocusContainer>\n);\n\nexport const Hook = () => {\n  const { getFocusProps, keyboardFocused } = useKeyboardFocus();\n\n  return (\n    <div\n      {...getFocusProps({\n        style: {\n          color: keyboardFocused ? 'red' : 'inherit'\n        }\n      })}\n    >\n      {keyboardFocused ? 'Keyboard focused!' : 'Not keyboard focused'}\n    </div>\n  );\n};\n\nContainer.storyName = 'KeyboardFocusContainer';\n\nHook.storyName = 'useKeyboardFocus';\n\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`useKeyboardFocus\\` hook supplies state and props that help you to distinguish\n      between mouse and keyboard focus. Garden uses this in react-components to know\n      when to add the focus ring.`\n    }\n  }\n};\n\nexport default {\n  title: 'KeyboardFocus Container',\n  component: KeyboardFocusContainer,\n  parameters: {\n    layout: 'centered',\n    componentSubtitle: `A container component which wraps the useKeyboardFocus hook.`\n  }\n};\n",locationsMap:{container:{startLoc:{col:25,line:11},endLoc:{col:1,line:25},startBody:{col:25,line:11},endBody:{col:1,line:25}},hook:{startLoc:{col:20,line:27},endLoc:{col:1,line:41},startBody:{col:20,line:27},endBody:{col:1,line:41}}}},_parameters.layout="centered",_parameters.componentSubtitle="A container component which wraps the useKeyboardFocus hook.",_parameters)};keyboardfocus_stories_Container.parameters=Object(esm_extends.a)({storySource:{source:"() => (\n  <KeyboardFocusContainer>\n    {({ keyboardFocused, getFocusProps }) => (\n      <div\n        {...getFocusProps({\n          style: {\n            color: keyboardFocused ? 'red' : 'inherit'\n          }\n        })}\n      >\n        {keyboardFocused ? 'Keyboard focused!' : 'Not keyboard focused'}\n      </div>\n    )}\n  </KeyboardFocusContainer>\n)"}},keyboardfocus_stories_Container.parameters),keyboardfocus_stories_Hook.parameters=Object(esm_extends.a)({storySource:{source:"() => {\n  const { getFocusProps, keyboardFocused } = useKeyboardFocus();\n\n  return (\n    <div\n      {...getFocusProps({\n        style: {\n          color: keyboardFocused ? 'red' : 'inherit'\n        }\n      })}\n    >\n      {keyboardFocused ? 'Keyboard focused!' : 'Not keyboard focused'}\n    </div>\n  );\n}"}},keyboardfocus_stories_Hook.parameters)},2903:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Container",(function(){return pagination_stories_Container})),__webpack_require__.d(__webpack_exports__,"Hook",(function(){return pagination_stories_Hook}));__webpack_require__(1122),__webpack_require__(290);var esm_extends=__webpack_require__(293),react=__webpack_require__(0),react_default=__webpack_require__.n(react),objectWithoutPropertiesLoose=__webpack_require__(346),prop_types=__webpack_require__(2),prop_types_default=__webpack_require__.n(prop_types),index_esm=__webpack_require__(418),_excluded=["role"],_excluded2=["ariaLabel","role"],_excluded3=["ariaLabel","role"],_excluded4=["ariaLabel","page","current","role"];function usePagination(options){var _useSelection=Object(index_esm.a)(options),selectedItem=_useSelection.selectedItem,focusedItem=_useSelection.focusedItem,getControlledContainerProps=_useSelection.getContainerProps,getItemProps=_useSelection.getItemProps;return{selectedItem:selectedItem,focusedItem:focusedItem,getContainerProps:function getContainerProps(props){return getControlledContainerProps(function getContainerProps(_temp){var _ref=void 0===_temp?{}:_temp,_ref$role=_ref.role,role=void 0===_ref$role?"list":_ref$role,other=Object(objectWithoutPropertiesLoose.a)(_ref,_excluded);return Object(esm_extends.a)({role:role,"data-garden-container-id":"containers.pagination","data-garden-container-version":"storybook"},other)}(props))},getPageProps:function getPageProps(props){return getItemProps(function getPageProps(_temp4){var _ref4=void 0===_temp4?{}:_temp4,ariaLabel=_ref4.ariaLabel,page=_ref4.page,current=_ref4.current,_ref4$role=_ref4.role,role=void 0===_ref4$role?"listitem":_ref4$role,other=Object(objectWithoutPropertiesLoose.a)(_ref4,_excluded4),ariaLabelText="Page "+page;return current&&!ariaLabel&&(ariaLabelText="Current page, Page "+page),Object(esm_extends.a)({selectedAriaKey:"aria-current",role:role,"aria-label":ariaLabel||ariaLabelText},other)}(props),"getPageProps")},getPreviousPageProps:function getPreviousPageProps(props){return getItemProps(function getPreviousPageProps(_temp2){var _ref2=void 0===_temp2?{}:_temp2,ariaLabel=_ref2.ariaLabel,_ref2$role=_ref2.role,role=void 0===_ref2$role?"listitem":_ref2$role,props=Object(objectWithoutPropertiesLoose.a)(_ref2,_excluded2);return Object(esm_extends.a)({selectedAriaKey:null,role:role,"aria-label":ariaLabel||"Previous Page"},props)}(props),"getPreviousPageProps")},getNextPageProps:function getNextPageProps(props){return getItemProps(function getNextPageProps(_temp3){var _ref3=void 0===_temp3?{}:_temp3,ariaLabel=_ref3.ariaLabel,_ref3$role=_ref3.role,role=void 0===_ref3$role?"listitem":_ref3$role,props=Object(objectWithoutPropertiesLoose.a)(_ref3,_excluded3);return Object(esm_extends.a)({selectedAriaKey:null,role:role,"aria-label":ariaLabel||"Next Page"},props)}(props),"getNextPageProps")}}}var _parameters,PaginationContainer_excluded=["children","render"],PaginationContainer_PaginationContainer=function PaginationContainer(_ref){var children=_ref.children,_ref$render=_ref.render,render=void 0===_ref$render?children:_ref$render,options=Object(objectWithoutPropertiesLoose.a)(_ref,PaginationContainer_excluded);return react_default.a.createElement(react_default.a.Fragment,null,render(usePagination(options)))};PaginationContainer_PaginationContainer.propTypes={children:prop_types_default.a.func,render:prop_types_default.a.func,focusedItem:prop_types_default.a.any,selectedItem:prop_types_default.a.any,onSelect:prop_types_default.a.func,onFocus:prop_types_default.a.func};try{PaginationContainer_PaginationContainer.displayName="PaginationContainer",PaginationContainer_PaginationContainer.__docgenInfo={description:"",displayName:"PaginationContainer",props:{render:{defaultValue:null,description:"A render prop function which receives the newly selected item",name:"render",required:!1,type:{name:"((options: IUsePaginationReturnValue<any>) => ReactNode)"}},children:{defaultValue:null,description:"A children render prop function which receives the newly selected item",name:"children",required:!1,type:{name:"(((options: IUsePaginationReturnValue<any>) => ReactNode) & (boolean | ReactChild | ReactFragment | ReactPortal | null))"}},direction:{defaultValue:null,description:"Determines the orientation of the selection",name:"direction",required:!1,type:{name:"enum",value:[{value:'"vertical"'},{value:'"horizontal"'},{value:'"both"'}]}},defaultFocusedIndex:{defaultValue:null,description:"Sets the initial focused item",name:"defaultFocusedIndex",required:!1,type:{name:"number"}},defaultSelectedIndex:{defaultValue:null,description:"Sets the initial selected item",name:"defaultSelectedIndex",required:!1,type:{name:"number"}},rtl:{defaultValue:null,description:"Determines if selection uses right-to-left writing direction",name:"rtl",required:!1,type:{name:"boolean"}},selectedItem:{defaultValue:null,description:"Sets the selected item in a controlled selection",name:"selectedItem",required:!1,type:{name:"any"}},focusedItem:{defaultValue:null,description:"Sets the focused item in a controlled selection",name:"focusedItem",required:!1,type:{name:"any"}},onSelect:{defaultValue:null,description:"A callback function that receives the selected item",name:"onSelect",required:!1,type:{name:"((selectedItem: any) => void)"}},onFocus:{defaultValue:null,description:"A callback function that receives the focused item",name:"onFocus",required:!1,type:{name:"((focusedItem?: any) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/pagination/src/PaginationContainer.tsx#PaginationContainer"]={docgenInfo:PaginationContainer_PaginationContainer.__docgenInfo,name:"PaginationContainer",path:"packages/pagination/src/PaginationContainer.tsx#PaginationContainer"})}catch(__react_docgen_typescript_loader_error){}var pages=new Array(7).fill("page"),pagination_stories_Container=function Container(){var _useState=Object(react.useState)(3),controlledSelectedItem=_useState[0],setSelectedItem=_useState[1],previousPageRef=Object(react.useRef)(null),nextPageRef=Object(react.useRef)(null),pageRefs=pages.map((function(){return react_default.a.createRef()}));return react_default.a.createElement(PaginationContainer_PaginationContainer,{selectedItem:controlledSelectedItem,onSelect:function onSelect(newSelectedItem){var modifiedNewSelectedItem=controlledSelectedItem;"prev"===newSelectedItem?controlledSelectedItem>0&&(modifiedNewSelectedItem=controlledSelectedItem-1):"next"===newSelectedItem?controlledSelectedItem<pages.length-1&&(modifiedNewSelectedItem=controlledSelectedItem+1):modifiedNewSelectedItem=newSelectedItem,modifiedNewSelectedItem!==controlledSelectedItem&&setSelectedItem(modifiedNewSelectedItem)}},(function(_ref){var selectedItem=_ref.selectedItem,focusedItem=_ref.focusedItem,getContainerProps=_ref.getContainerProps,getNextPageProps=_ref.getNextPageProps,getPreviousPageProps=_ref.getPreviousPageProps,getPageProps=_ref.getPageProps;return react_default.a.createElement("nav",{"aria-label":"Pagination (Container)"},react_default.a.createElement("div",getContainerProps({style:{display:"flex"}}),react_default.a.createElement("div",getPreviousPageProps({item:"prev","aria-disabled":0===selectedItem,focusRef:previousPageRef,ref:previousPageRef,key:"previous-page",style:{color:0===selectedItem?"gray":void 0,cursor:"pointer",userSelect:"none"}}),"Prev"),pages.map((function(page,index){return react_default.a.createElement("div",getPageProps({page:index,current:index===selectedItem,item:index,focusRef:pageRefs[index],ref:pageRefs[index],key:"page-"+index,style:{outline:index===focusedItem?"3px solid red":void 0,background:index===selectedItem?"gray":void 0,padding:"0 6px",cursor:"pointer",userSelect:"none"}}),index+1)})),react_default.a.createElement("div",getNextPageProps({item:"next","aria-disabled":selectedItem===pages.length-1,focusRef:nextPageRef,ref:nextPageRef,key:"next-page",style:{color:selectedItem===pages.length-1?"gray":void 0,cursor:"pointer",userSelect:"none"}}),"Next")))}))},pagination_stories_Hook=function Hook(){var previousPageRef=Object(react.useRef)(null),nextPageRef=Object(react.useRef)(null),pageRefs=pages.map((function(){return react_default.a.createRef()})),_useState2=Object(react.useState)(3),controlledSelectedItem=_useState2[0],setSelectedItem=_useState2[1],_usePagination=usePagination({selectedItem:controlledSelectedItem,onSelect:function onSelect(newSelectedItem){var modifiedNewSelectedItem=controlledSelectedItem;"prev"===newSelectedItem?controlledSelectedItem>0&&(modifiedNewSelectedItem=controlledSelectedItem-1):"next"===newSelectedItem?controlledSelectedItem<pages.length-1&&(modifiedNewSelectedItem=controlledSelectedItem+1):modifiedNewSelectedItem=newSelectedItem,modifiedNewSelectedItem!==controlledSelectedItem&&setSelectedItem(modifiedNewSelectedItem)}}),selectedItem=_usePagination.selectedItem,focusedItem=_usePagination.focusedItem,getContainerProps=_usePagination.getContainerProps,getNextPageProps=_usePagination.getNextPageProps,getPreviousPageProps=_usePagination.getPreviousPageProps,getPageProps=_usePagination.getPageProps;return react_default.a.createElement("nav",{"aria-label":"Pagination (Hook)"},react_default.a.createElement("ul",getContainerProps({role:null,style:{display:"flex"}}),react_default.a.createElement("li",getPreviousPageProps({role:null,item:"prev","aria-disabled":0===selectedItem,focusRef:previousPageRef,key:"previous-page",style:{color:0===selectedItem?"gray":void 0,cursor:"pointer",userSelect:"none"}}),"Prev"),pages.map((function(page,index){return react_default.a.createElement("li",getPageProps({role:null,page:index,current:index===selectedItem,item:index,focusRef:pageRefs[index],key:"page-"+index,style:{outline:index===focusedItem?"3px solid red":void 0,background:index===selectedItem?"gray":void 0,padding:"0 6px",cursor:"pointer",userSelect:"none"}}),index+1)})),react_default.a.createElement("li",getNextPageProps({role:null,item:"next","aria-disabled":selectedItem===pages.length-1,focusRef:nextPageRef,key:"next-page",style:{color:selectedItem===pages.length-1?"gray":void 0,cursor:"pointer",userSelect:"none"}}),"Next")))};pagination_stories_Container.storyName="PaginationContainer",pagination_stories_Hook.storyName="usePagination",pagination_stories_Hook.parameters={docs:{description:{story:"The `usePagination` hook is wrapper on top of the [`useSelection`](/docs/selection-container--container#useselection) hook with\n      specific prop getters for pagination."}}};__webpack_exports__.default={title:"Pagination Container",component:PaginationContainer_PaginationContainer,parameters:(_parameters={storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React, { useRef, useState } from 'react';\\nimport { PaginationContainer, usePagination } from './src';\\n\\nconst pages = new Array(7).fill('page');\\n\\nexport const Container = () => {\\n  const [controlledSelectedItem, setSelectedItem] = useState(3);\\n  const previousPageRef = useRef(null);\\n  const nextPageRef = useRef(null);\\n  const pageRefs = pages.map(() => React.createRef());\\n\\n  return (\\n    <PaginationContainer\\n      selectedItem={controlledSelectedItem}\\n      onSelect={newSelectedItem => {\\n        let modifiedNewSelectedItem = controlledSelectedItem;\\n\\n        if (newSelectedItem === 'prev') {\\n          if (controlledSelectedItem > 0) {\\n            modifiedNewSelectedItem = controlledSelectedItem - 1;\\n          }\\n        } else if (newSelectedItem === 'next') {\\n          if (controlledSelectedItem < pages.length - 1) {\\n            modifiedNewSelectedItem = controlledSelectedItem + 1;\\n          }\\n        } else {\\n          modifiedNewSelectedItem = newSelectedItem;\\n        }\\n\\n        if (modifiedNewSelectedItem !== controlledSelectedItem) {\\n          setSelectedItem(modifiedNewSelectedItem);\\n        }\\n      }}\\n    >\\n      {({\\n        selectedItem,\\n        focusedItem,\\n        getContainerProps,\\n        getNextPageProps,\\n        getPreviousPageProps,\\n        getPageProps\\n      }) => {\\n        return (\\n          <nav aria-label=\\\"Pagination (Container)\\\">\\n            <div\\n              {...getContainerProps({\\n                style: { display: 'flex' }\\n              })}\\n            >\\n              <div\\n                {...getPreviousPageProps({\\n                  item: 'prev',\\n                  'aria-disabled': selectedItem === 0,\\n                  focusRef: previousPageRef,\\n                  ref: previousPageRef,\\n                  key: 'previous-page',\\n                  style: {\\n                    color: selectedItem === 0 ? 'gray' : undefined,\\n                    cursor: 'pointer',\\n                    userSelect: 'none'\\n                  }\\n                })}\\n              >\\n                Prev\\n              </div>\\n              {pages.map((page, index) => {\\n                return (\\n                  <div\\n                    {...getPageProps({\\n                      page: index,\\n                      current: index === selectedItem,\\n                      item: index,\\n                      focusRef: pageRefs[index],\\n                      ref: pageRefs[index],\\n                      key: `page-${index}`,\\n                      style: {\\n                        outline: index === focusedItem ? '3px solid red' : undefined,\\n                        background: index === selectedItem ? 'gray' : undefined,\\n                        padding: '0 6px',\\n                        cursor: 'pointer',\\n                        userSelect: 'none'\\n                      }\\n                    })}\\n                  >\\n                    {index + 1}\\n                  </div>\\n                );\\n              })}\\n              <div\\n                {...getNextPageProps({\\n                  item: 'next',\\n                  'aria-disabled': selectedItem === pages.length - 1,\\n                  focusRef: nextPageRef,\\n                  ref: nextPageRef,\\n                  key: 'next-page',\\n                  style: {\\n                    color: selectedItem === pages.length - 1 ? 'gray' : undefined,\\n                    cursor: 'pointer',\\n                    userSelect: 'none'\\n                  }\\n                })}\\n              >\\n                Next\\n              </div>\\n            </div>\\n          </nav>\\n        );\\n      }}\\n    </PaginationContainer>\\n  );\\n};\\n\\nexport const Hook = () => {\\n  const previousPageRef = useRef(null);\\n  const nextPageRef = useRef(null);\\n  const pageRefs = pages.map(() => React.createRef());\\n  const [controlledSelectedItem, setSelectedItem] = useState(3);\\n\\n  const {\\n    selectedItem,\\n    focusedItem,\\n    getContainerProps,\\n    getNextPageProps,\\n    getPreviousPageProps,\\n    getPageProps\\n  } = usePagination<number | string>({\\n    selectedItem: controlledSelectedItem,\\n    onSelect: newSelectedItem => {\\n      let modifiedNewSelectedItem = controlledSelectedItem;\\n\\n      if (newSelectedItem === 'prev') {\\n        if (controlledSelectedItem > 0) {\\n          modifiedNewSelectedItem = controlledSelectedItem - 1;\\n        }\\n      } else if (newSelectedItem === 'next') {\\n        if (controlledSelectedItem < pages.length - 1) {\\n          modifiedNewSelectedItem = controlledSelectedItem + 1;\\n        }\\n      } else {\\n        modifiedNewSelectedItem = newSelectedItem as number;\\n      }\\n\\n      if (modifiedNewSelectedItem !== controlledSelectedItem) {\\n        setSelectedItem(modifiedNewSelectedItem);\\n      }\\n    }\\n  });\\n\\n  return (\\n    <nav aria-label=\\\"Pagination (Hook)\\\">\\n      <ul\\n        {...getContainerProps({\\n          role: null,\\n          style: { display: 'flex' }\\n        })}\\n      >\\n        <li\\n          {...getPreviousPageProps({\\n            role: null,\\n            item: 'prev',\\n            'aria-disabled': selectedItem === 0,\\n            focusRef: previousPageRef,\\n            key: 'previous-page',\\n            style: {\\n              color: selectedItem === 0 ? 'gray' : undefined,\\n              cursor: 'pointer',\\n              userSelect: 'none'\\n            }\\n          })}\\n        >\\n          Prev\\n        </li>\\n        {pages.map((page, index) => {\\n          return (\\n            <li\\n              {...getPageProps({\\n                role: null,\\n                page: index,\\n                current: index === selectedItem,\\n                item: index,\\n                focusRef: pageRefs[index],\\n                key: `page-${index}`,\\n                style: {\\n                  outline: index === focusedItem ? '3px solid red' : undefined,\\n                  background: index === selectedItem ? 'gray' : undefined,\\n                  padding: '0 6px',\\n                  cursor: 'pointer',\\n                  userSelect: 'none'\\n                }\\n              })}\\n            >\\n              {index + 1}\\n            </li>\\n          );\\n        })}\\n        <li\\n          {...getNextPageProps({\\n            role: null,\\n            item: 'next',\\n            'aria-disabled': selectedItem === pages.length - 1,\\n            focusRef: nextPageRef,\\n            key: 'next-page',\\n            style: {\\n              color: selectedItem === pages.length - 1 ? 'gray' : undefined,\\n              cursor: 'pointer',\\n              userSelect: 'none'\\n            }\\n          })}\\n        >\\n          Next\\n        </li>\\n      </ul>\\n    </nav>\\n  );\\n};\\n\\nContainer.storyName = 'PaginationContainer';\\n\\nHook.storyName = 'usePagination';\\n\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`usePagination\\\\` hook is wrapper on top of the [\\\\`useSelection\\\\`](/docs/selection-container--container#useselection) hook with\\n      specific prop getters for pagination.`\\n    }\\n  }\\n};\\n\\nexport default {\\n  title: 'Pagination Container',\\n  component: PaginationContainer,\\n  parameters: {\\n    layout: 'centered',\\n    componentSubtitle: `A container component which wraps the usePagination hook.`\\n  }\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Container\":{\"startLoc\":{\"col\":25,\"line\":13},\"endLoc\":{\"col\":1,\"line\":118},\"startBody\":{\"col\":25,\"line\":13},\"endBody\":{\"col\":1,\"line\":118}},\"Hook\":{\"startLoc\":{\"col\":20,\"line\":120},\"endLoc\":{\"col\":1,\"line\":222},\"startBody\":{\"col\":20,\"line\":120},\"endBody\":{\"col\":1,\"line\":222}}};\n    \n/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React, { useRef, useState } from 'react';\nimport { PaginationContainer, usePagination } from './src';\n\nconst pages = new Array(7).fill('page');\n\nexport const Container = () => {\n  const [controlledSelectedItem, setSelectedItem] = useState(3);\n  const previousPageRef = useRef(null);\n  const nextPageRef = useRef(null);\n  const pageRefs = pages.map(() => React.createRef());\n\n  return (\n    <PaginationContainer\n      selectedItem={controlledSelectedItem}\n      onSelect={newSelectedItem => {\n        let modifiedNewSelectedItem = controlledSelectedItem;\n\n        if (newSelectedItem === 'prev') {\n          if (controlledSelectedItem > 0) {\n            modifiedNewSelectedItem = controlledSelectedItem - 1;\n          }\n        } else if (newSelectedItem === 'next') {\n          if (controlledSelectedItem < pages.length - 1) {\n            modifiedNewSelectedItem = controlledSelectedItem + 1;\n          }\n        } else {\n          modifiedNewSelectedItem = newSelectedItem;\n        }\n\n        if (modifiedNewSelectedItem !== controlledSelectedItem) {\n          setSelectedItem(modifiedNewSelectedItem);\n        }\n      }}\n    >\n      {({\n        selectedItem,\n        focusedItem,\n        getContainerProps,\n        getNextPageProps,\n        getPreviousPageProps,\n        getPageProps\n      }) => {\n        return (\n          <nav aria-label=\"Pagination (Container)\">\n            <div\n              {...getContainerProps({\n                style: { display: 'flex' }\n              })}\n            >\n              <div\n                {...getPreviousPageProps({\n                  item: 'prev',\n                  'aria-disabled': selectedItem === 0,\n                  focusRef: previousPageRef,\n                  ref: previousPageRef,\n                  key: 'previous-page',\n                  style: {\n                    color: selectedItem === 0 ? 'gray' : undefined,\n                    cursor: 'pointer',\n                    userSelect: 'none'\n                  }\n                })}\n              >\n                Prev\n              </div>\n              {pages.map((page, index) => {\n                return (\n                  <div\n                    {...getPageProps({\n                      page: index,\n                      current: index === selectedItem,\n                      item: index,\n                      focusRef: pageRefs[index],\n                      ref: pageRefs[index],\n                      key: `page-${index}`,\n                      style: {\n                        outline: index === focusedItem ? '3px solid red' : undefined,\n                        background: index === selectedItem ? 'gray' : undefined,\n                        padding: '0 6px',\n                        cursor: 'pointer',\n                        userSelect: 'none'\n                      }\n                    })}\n                  >\n                    {index + 1}\n                  </div>\n                );\n              })}\n              <div\n                {...getNextPageProps({\n                  item: 'next',\n                  'aria-disabled': selectedItem === pages.length - 1,\n                  focusRef: nextPageRef,\n                  ref: nextPageRef,\n                  key: 'next-page',\n                  style: {\n                    color: selectedItem === pages.length - 1 ? 'gray' : undefined,\n                    cursor: 'pointer',\n                    userSelect: 'none'\n                  }\n                })}\n              >\n                Next\n              </div>\n            </div>\n          </nav>\n        );\n      }}\n    </PaginationContainer>\n  );\n};;\n\nexport const Hook = () => {\n  const previousPageRef = useRef(null);\n  const nextPageRef = useRef(null);\n  const pageRefs = pages.map(() => React.createRef());\n  const [controlledSelectedItem, setSelectedItem] = useState(3);\n\n  const {\n    selectedItem,\n    focusedItem,\n    getContainerProps,\n    getNextPageProps,\n    getPreviousPageProps,\n    getPageProps\n  } = usePagination<number | string>({\n    selectedItem: controlledSelectedItem,\n    onSelect: newSelectedItem => {\n      let modifiedNewSelectedItem = controlledSelectedItem;\n\n      if (newSelectedItem === 'prev') {\n        if (controlledSelectedItem > 0) {\n          modifiedNewSelectedItem = controlledSelectedItem - 1;\n        }\n      } else if (newSelectedItem === 'next') {\n        if (controlledSelectedItem < pages.length - 1) {\n          modifiedNewSelectedItem = controlledSelectedItem + 1;\n        }\n      } else {\n        modifiedNewSelectedItem = newSelectedItem as number;\n      }\n\n      if (modifiedNewSelectedItem !== controlledSelectedItem) {\n        setSelectedItem(modifiedNewSelectedItem);\n      }\n    }\n  });\n\n  return (\n    <nav aria-label=\"Pagination (Hook)\">\n      <ul\n        {...getContainerProps({\n          role: null,\n          style: { display: 'flex' }\n        })}\n      >\n        <li\n          {...getPreviousPageProps({\n            role: null,\n            item: 'prev',\n            'aria-disabled': selectedItem === 0,\n            focusRef: previousPageRef,\n            key: 'previous-page',\n            style: {\n              color: selectedItem === 0 ? 'gray' : undefined,\n              cursor: 'pointer',\n              userSelect: 'none'\n            }\n          })}\n        >\n          Prev\n        </li>\n        {pages.map((page, index) => {\n          return (\n            <li\n              {...getPageProps({\n                role: null,\n                page: index,\n                current: index === selectedItem,\n                item: index,\n                focusRef: pageRefs[index],\n                key: `page-${index}`,\n                style: {\n                  outline: index === focusedItem ? '3px solid red' : undefined,\n                  background: index === selectedItem ? 'gray' : undefined,\n                  padding: '0 6px',\n                  cursor: 'pointer',\n                  userSelect: 'none'\n                }\n              })}\n            >\n              {index + 1}\n            </li>\n          );\n        })}\n        <li\n          {...getNextPageProps({\n            role: null,\n            item: 'next',\n            'aria-disabled': selectedItem === pages.length - 1,\n            focusRef: nextPageRef,\n            key: 'next-page',\n            style: {\n              color: selectedItem === pages.length - 1 ? 'gray' : undefined,\n              cursor: 'pointer',\n              userSelect: 'none'\n            }\n          })}\n        >\n          Next\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nContainer.storyName = 'PaginationContainer';\n\nHook.storyName = 'usePagination';\n\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`usePagination\\` hook is wrapper on top of the [\\`useSelection\\`](/docs/selection-container--container#useselection) hook with\n      specific prop getters for pagination.`\n    }\n  }\n};\n\nexport default {\n  title: 'Pagination Container',\n  component: PaginationContainer,\n  parameters: {\"storySource\":{\"source\":\"/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React, { useRef, useState } from 'react';\\nimport { PaginationContainer, usePagination } from './src';\\n\\nconst pages = new Array(7).fill('page');\\n\\nexport const Container = () => {\\n  const [controlledSelectedItem, setSelectedItem] = useState(3);\\n  const previousPageRef = useRef(null);\\n  const nextPageRef = useRef(null);\\n  const pageRefs = pages.map(() => React.createRef());\\n\\n  return (\\n    <PaginationContainer\\n      selectedItem={controlledSelectedItem}\\n      onSelect={newSelectedItem => {\\n        let modifiedNewSelectedItem = controlledSelectedItem;\\n\\n        if (newSelectedItem === 'prev') {\\n          if (controlledSelectedItem > 0) {\\n            modifiedNewSelectedItem = controlledSelectedItem - 1;\\n          }\\n        } else if (newSelectedItem === 'next') {\\n          if (controlledSelectedItem < pages.length - 1) {\\n            modifiedNewSelectedItem = controlledSelectedItem + 1;\\n          }\\n        } else {\\n          modifiedNewSelectedItem = newSelectedItem;\\n        }\\n\\n        if (modifiedNewSelectedItem !== controlledSelectedItem) {\\n          setSelectedItem(modifiedNewSelectedItem);\\n        }\\n      }}\\n    >\\n      {({\\n        selectedItem,\\n        focusedItem,\\n        getContainerProps,\\n        getNextPageProps,\\n        getPreviousPageProps,\\n        getPageProps\\n      }) => {\\n        return (\\n          <nav aria-label=\\\"Pagination (Container)\\\">\\n            <div\\n              {...getContainerProps({\\n                style: { display: 'flex' }\\n              })}\\n            >\\n              <div\\n                {...getPreviousPageProps({\\n                  item: 'prev',\\n                  'aria-disabled': selectedItem === 0,\\n                  focusRef: previousPageRef,\\n                  ref: previousPageRef,\\n                  key: 'previous-page',\\n                  style: {\\n                    color: selectedItem === 0 ? 'gray' : undefined,\\n                    cursor: 'pointer',\\n                    userSelect: 'none'\\n                  }\\n                })}\\n              >\\n                Prev\\n              </div>\\n              {pages.map((page, index) => {\\n                return (\\n                  <div\\n                    {...getPageProps({\\n                      page: index,\\n                      current: index === selectedItem,\\n                      item: index,\\n                      focusRef: pageRefs[index],\\n                      ref: pageRefs[index],\\n                      key: `page-${index}`,\\n                      style: {\\n                        outline: index === focusedItem ? '3px solid red' : undefined,\\n                        background: index === selectedItem ? 'gray' : undefined,\\n                        padding: '0 6px',\\n                        cursor: 'pointer',\\n                        userSelect: 'none'\\n                      }\\n                    })}\\n                  >\\n                    {index + 1}\\n                  </div>\\n                );\\n              })}\\n              <div\\n                {...getNextPageProps({\\n                  item: 'next',\\n                  'aria-disabled': selectedItem === pages.length - 1,\\n                  focusRef: nextPageRef,\\n                  ref: nextPageRef,\\n                  key: 'next-page',\\n                  style: {\\n                    color: selectedItem === pages.length - 1 ? 'gray' : undefined,\\n                    cursor: 'pointer',\\n                    userSelect: 'none'\\n                  }\\n                })}\\n              >\\n                Next\\n              </div>\\n            </div>\\n          </nav>\\n        );\\n      }}\\n    </PaginationContainer>\\n  );\\n};\\n\\nexport const Hook = () => {\\n  const previousPageRef = useRef(null);\\n  const nextPageRef = useRef(null);\\n  const pageRefs = pages.map(() => React.createRef());\\n  const [controlledSelectedItem, setSelectedItem] = useState(3);\\n\\n  const {\\n    selectedItem,\\n    focusedItem,\\n    getContainerProps,\\n    getNextPageProps,\\n    getPreviousPageProps,\\n    getPageProps\\n  } = usePagination<number | string>({\\n    selectedItem: controlledSelectedItem,\\n    onSelect: newSelectedItem => {\\n      let modifiedNewSelectedItem = controlledSelectedItem;\\n\\n      if (newSelectedItem === 'prev') {\\n        if (controlledSelectedItem > 0) {\\n          modifiedNewSelectedItem = controlledSelectedItem - 1;\\n        }\\n      } else if (newSelectedItem === 'next') {\\n        if (controlledSelectedItem < pages.length - 1) {\\n          modifiedNewSelectedItem = controlledSelectedItem + 1;\\n        }\\n      } else {\\n        modifiedNewSelectedItem = newSelectedItem as number;\\n      }\\n\\n      if (modifiedNewSelectedItem !== controlledSelectedItem) {\\n        setSelectedItem(modifiedNewSelectedItem);\\n      }\\n    }\\n  });\\n\\n  return (\\n    <nav aria-label=\\\"Pagination (Hook)\\\">\\n      <ul\\n        {...getContainerProps({\\n          role: null,\\n          style: { display: 'flex' }\\n        })}\\n      >\\n        <li\\n          {...getPreviousPageProps({\\n            role: null,\\n            item: 'prev',\\n            'aria-disabled': selectedItem === 0,\\n            focusRef: previousPageRef,\\n            key: 'previous-page',\\n            style: {\\n              color: selectedItem === 0 ? 'gray' : undefined,\\n              cursor: 'pointer',\\n              userSelect: 'none'\\n            }\\n          })}\\n        >\\n          Prev\\n        </li>\\n        {pages.map((page, index) => {\\n          return (\\n            <li\\n              {...getPageProps({\\n                role: null,\\n                page: index,\\n                current: index === selectedItem,\\n                item: index,\\n                focusRef: pageRefs[index],\\n                key: `page-${index}`,\\n                style: {\\n                  outline: index === focusedItem ? '3px solid red' : undefined,\\n                  background: index === selectedItem ? 'gray' : undefined,\\n                  padding: '0 6px',\\n                  cursor: 'pointer',\\n                  userSelect: 'none'\\n                }\\n              })}\\n            >\\n              {index + 1}\\n            </li>\\n          );\\n        })}\\n        <li\\n          {...getNextPageProps({\\n            role: null,\\n            item: 'next',\\n            'aria-disabled': selectedItem === pages.length - 1,\\n            focusRef: nextPageRef,\\n            key: 'next-page',\\n            style: {\\n              color: selectedItem === pages.length - 1 ? 'gray' : undefined,\\n              cursor: 'pointer',\\n              userSelect: 'none'\\n            }\\n          })}\\n        >\\n          Next\\n        </li>\\n      </ul>\\n    </nav>\\n  );\\n};\\n\\nContainer.storyName = 'PaginationContainer';\\n\\nHook.storyName = 'usePagination';\\n\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`usePagination\\\\` hook is wrapper on top of the [\\\\`useSelection\\\\`](/docs/selection-container--container#useselection) hook with\\n      specific prop getters for pagination.`\\n    }\\n  }\\n};\\n\\nexport default {\\n  title: 'Pagination Container',\\n  component: PaginationContainer,\\n  parameters: {\\n    layout: 'centered',\\n    componentSubtitle: `A container component which wraps the usePagination hook.`\\n  }\\n};\\n\",\"locationsMap\":{\"container\":{\"startLoc\":{\"col\":25,\"line\":13},\"endLoc\":{\"col\":1,\"line\":118},\"startBody\":{\"col\":25,\"line\":13},\"endBody\":{\"col\":1,\"line\":118}},\"hook\":{\"startLoc\":{\"col\":20,\"line\":120},\"endLoc\":{\"col\":1,\"line\":222},\"startBody\":{\"col\":20,\"line\":120},\"endBody\":{\"col\":1,\"line\":222}}}},\n    layout: 'centered',\n    componentSubtitle: `A container component which wraps the usePagination hook.`\n  },};\n",locationsMap:{container:{startLoc:{col:25,line:21},endLoc:{col:1,line:126},startBody:{col:25,line:21},endBody:{col:1,line:126}},hook:{startLoc:{col:20,line:128},endLoc:{col:1,line:230},startBody:{col:20,line:128},endBody:{col:1,line:230}}}}},_parameters.storySource={source:"/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React, { useRef, useState } from 'react';\nimport { PaginationContainer, usePagination } from './src';\n\nconst pages = new Array(7).fill('page');\n\nexport const Container = () => {\n  const [controlledSelectedItem, setSelectedItem] = useState(3);\n  const previousPageRef = useRef(null);\n  const nextPageRef = useRef(null);\n  const pageRefs = pages.map(() => React.createRef());\n\n  return (\n    <PaginationContainer\n      selectedItem={controlledSelectedItem}\n      onSelect={newSelectedItem => {\n        let modifiedNewSelectedItem = controlledSelectedItem;\n\n        if (newSelectedItem === 'prev') {\n          if (controlledSelectedItem > 0) {\n            modifiedNewSelectedItem = controlledSelectedItem - 1;\n          }\n        } else if (newSelectedItem === 'next') {\n          if (controlledSelectedItem < pages.length - 1) {\n            modifiedNewSelectedItem = controlledSelectedItem + 1;\n          }\n        } else {\n          modifiedNewSelectedItem = newSelectedItem;\n        }\n\n        if (modifiedNewSelectedItem !== controlledSelectedItem) {\n          setSelectedItem(modifiedNewSelectedItem);\n        }\n      }}\n    >\n      {({\n        selectedItem,\n        focusedItem,\n        getContainerProps,\n        getNextPageProps,\n        getPreviousPageProps,\n        getPageProps\n      }) => {\n        return (\n          <nav aria-label=\"Pagination (Container)\">\n            <div\n              {...getContainerProps({\n                style: { display: 'flex' }\n              })}\n            >\n              <div\n                {...getPreviousPageProps({\n                  item: 'prev',\n                  'aria-disabled': selectedItem === 0,\n                  focusRef: previousPageRef,\n                  ref: previousPageRef,\n                  key: 'previous-page',\n                  style: {\n                    color: selectedItem === 0 ? 'gray' : undefined,\n                    cursor: 'pointer',\n                    userSelect: 'none'\n                  }\n                })}\n              >\n                Prev\n              </div>\n              {pages.map((page, index) => {\n                return (\n                  <div\n                    {...getPageProps({\n                      page: index,\n                      current: index === selectedItem,\n                      item: index,\n                      focusRef: pageRefs[index],\n                      ref: pageRefs[index],\n                      key: `page-${index}`,\n                      style: {\n                        outline: index === focusedItem ? '3px solid red' : undefined,\n                        background: index === selectedItem ? 'gray' : undefined,\n                        padding: '0 6px',\n                        cursor: 'pointer',\n                        userSelect: 'none'\n                      }\n                    })}\n                  >\n                    {index + 1}\n                  </div>\n                );\n              })}\n              <div\n                {...getNextPageProps({\n                  item: 'next',\n                  'aria-disabled': selectedItem === pages.length - 1,\n                  focusRef: nextPageRef,\n                  ref: nextPageRef,\n                  key: 'next-page',\n                  style: {\n                    color: selectedItem === pages.length - 1 ? 'gray' : undefined,\n                    cursor: 'pointer',\n                    userSelect: 'none'\n                  }\n                })}\n              >\n                Next\n              </div>\n            </div>\n          </nav>\n        );\n      }}\n    </PaginationContainer>\n  );\n};\n\nexport const Hook = () => {\n  const previousPageRef = useRef(null);\n  const nextPageRef = useRef(null);\n  const pageRefs = pages.map(() => React.createRef());\n  const [controlledSelectedItem, setSelectedItem] = useState(3);\n\n  const {\n    selectedItem,\n    focusedItem,\n    getContainerProps,\n    getNextPageProps,\n    getPreviousPageProps,\n    getPageProps\n  } = usePagination<number | string>({\n    selectedItem: controlledSelectedItem,\n    onSelect: newSelectedItem => {\n      let modifiedNewSelectedItem = controlledSelectedItem;\n\n      if (newSelectedItem === 'prev') {\n        if (controlledSelectedItem > 0) {\n          modifiedNewSelectedItem = controlledSelectedItem - 1;\n        }\n      } else if (newSelectedItem === 'next') {\n        if (controlledSelectedItem < pages.length - 1) {\n          modifiedNewSelectedItem = controlledSelectedItem + 1;\n        }\n      } else {\n        modifiedNewSelectedItem = newSelectedItem as number;\n      }\n\n      if (modifiedNewSelectedItem !== controlledSelectedItem) {\n        setSelectedItem(modifiedNewSelectedItem);\n      }\n    }\n  });\n\n  return (\n    <nav aria-label=\"Pagination (Hook)\">\n      <ul\n        {...getContainerProps({\n          role: null,\n          style: { display: 'flex' }\n        })}\n      >\n        <li\n          {...getPreviousPageProps({\n            role: null,\n            item: 'prev',\n            'aria-disabled': selectedItem === 0,\n            focusRef: previousPageRef,\n            key: 'previous-page',\n            style: {\n              color: selectedItem === 0 ? 'gray' : undefined,\n              cursor: 'pointer',\n              userSelect: 'none'\n            }\n          })}\n        >\n          Prev\n        </li>\n        {pages.map((page, index) => {\n          return (\n            <li\n              {...getPageProps({\n                role: null,\n                page: index,\n                current: index === selectedItem,\n                item: index,\n                focusRef: pageRefs[index],\n                key: `page-${index}`,\n                style: {\n                  outline: index === focusedItem ? '3px solid red' : undefined,\n                  background: index === selectedItem ? 'gray' : undefined,\n                  padding: '0 6px',\n                  cursor: 'pointer',\n                  userSelect: 'none'\n                }\n              })}\n            >\n              {index + 1}\n            </li>\n          );\n        })}\n        <li\n          {...getNextPageProps({\n            role: null,\n            item: 'next',\n            'aria-disabled': selectedItem === pages.length - 1,\n            focusRef: nextPageRef,\n            key: 'next-page',\n            style: {\n              color: selectedItem === pages.length - 1 ? 'gray' : undefined,\n              cursor: 'pointer',\n              userSelect: 'none'\n            }\n          })}\n        >\n          Next\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nContainer.storyName = 'PaginationContainer';\n\nHook.storyName = 'usePagination';\n\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`usePagination\\` hook is wrapper on top of the [\\`useSelection\\`](/docs/selection-container--container#useselection) hook with\n      specific prop getters for pagination.`\n    }\n  }\n};\n\nexport default {\n  title: 'Pagination Container',\n  component: PaginationContainer,\n  parameters: {\n    layout: 'centered',\n    componentSubtitle: `A container component which wraps the usePagination hook.`\n  }\n};\n",locationsMap:{container:{startLoc:{col:25,line:13},endLoc:{col:1,line:118},startBody:{col:25,line:13},endBody:{col:1,line:118}},hook:{startLoc:{col:20,line:120},endLoc:{col:1,line:222},startBody:{col:20,line:120},endBody:{col:1,line:222}}}},_parameters.layout="centered",_parameters.componentSubtitle="A container component which wraps the usePagination hook.",_parameters)};pagination_stories_Container.parameters=Object(esm_extends.a)({storySource:{source:"() => {\n  const [controlledSelectedItem, setSelectedItem] = useState(3);\n  const previousPageRef = useRef(null);\n  const nextPageRef = useRef(null);\n  const pageRefs = pages.map(() => React.createRef());\n\n  return (\n    <PaginationContainer\n      selectedItem={controlledSelectedItem}\n      onSelect={newSelectedItem => {\n        let modifiedNewSelectedItem = controlledSelectedItem;\n\n        if (newSelectedItem === 'prev') {\n          if (controlledSelectedItem > 0) {\n            modifiedNewSelectedItem = controlledSelectedItem - 1;\n          }\n        } else if (newSelectedItem === 'next') {\n          if (controlledSelectedItem < pages.length - 1) {\n            modifiedNewSelectedItem = controlledSelectedItem + 1;\n          }\n        } else {\n          modifiedNewSelectedItem = newSelectedItem;\n        }\n\n        if (modifiedNewSelectedItem !== controlledSelectedItem) {\n          setSelectedItem(modifiedNewSelectedItem);\n        }\n      }}\n    >\n      {({\n        selectedItem,\n        focusedItem,\n        getContainerProps,\n        getNextPageProps,\n        getPreviousPageProps,\n        getPageProps\n      }) => {\n        return (\n          <nav aria-label=\"Pagination (Container)\">\n            <div\n              {...getContainerProps({\n                style: { display: 'flex' }\n              })}\n            >\n              <div\n                {...getPreviousPageProps({\n                  item: 'prev',\n                  'aria-disabled': selectedItem === 0,\n                  focusRef: previousPageRef,\n                  ref: previousPageRef,\n                  key: 'previous-page',\n                  style: {\n                    color: selectedItem === 0 ? 'gray' : undefined,\n                    cursor: 'pointer',\n                    userSelect: 'none'\n                  }\n                })}\n              >\n                Prev\n              </div>\n              {pages.map((page, index) => {\n                return (\n                  <div\n                    {...getPageProps({\n                      page: index,\n                      current: index === selectedItem,\n                      item: index,\n                      focusRef: pageRefs[index],\n                      ref: pageRefs[index],\n                      key: `page-${index}`,\n                      style: {\n                        outline: index === focusedItem ? '3px solid red' : undefined,\n                        background: index === selectedItem ? 'gray' : undefined,\n                        padding: '0 6px',\n                        cursor: 'pointer',\n                        userSelect: 'none'\n                      }\n                    })}\n                  >\n                    {index + 1}\n                  </div>\n                );\n              })}\n              <div\n                {...getNextPageProps({\n                  item: 'next',\n                  'aria-disabled': selectedItem === pages.length - 1,\n                  focusRef: nextPageRef,\n                  ref: nextPageRef,\n                  key: 'next-page',\n                  style: {\n                    color: selectedItem === pages.length - 1 ? 'gray' : undefined,\n                    cursor: 'pointer',\n                    userSelect: 'none'\n                  }\n                })}\n              >\n                Next\n              </div>\n            </div>\n          </nav>\n        );\n      }}\n    </PaginationContainer>\n  );\n}"}},pagination_stories_Container.parameters),pagination_stories_Hook.parameters=Object(esm_extends.a)({storySource:{source:"() => {\n  const previousPageRef = useRef(null);\n  const nextPageRef = useRef(null);\n  const pageRefs = pages.map(() => React.createRef());\n  const [controlledSelectedItem, setSelectedItem] = useState(3);\n\n  const {\n    selectedItem,\n    focusedItem,\n    getContainerProps,\n    getNextPageProps,\n    getPreviousPageProps,\n    getPageProps\n  } = usePagination<number | string>({\n    selectedItem: controlledSelectedItem,\n    onSelect: newSelectedItem => {\n      let modifiedNewSelectedItem = controlledSelectedItem;\n\n      if (newSelectedItem === 'prev') {\n        if (controlledSelectedItem > 0) {\n          modifiedNewSelectedItem = controlledSelectedItem - 1;\n        }\n      } else if (newSelectedItem === 'next') {\n        if (controlledSelectedItem < pages.length - 1) {\n          modifiedNewSelectedItem = controlledSelectedItem + 1;\n        }\n      } else {\n        modifiedNewSelectedItem = newSelectedItem as number;\n      }\n\n      if (modifiedNewSelectedItem !== controlledSelectedItem) {\n        setSelectedItem(modifiedNewSelectedItem);\n      }\n    }\n  });\n\n  return (\n    <nav aria-label=\"Pagination (Hook)\">\n      <ul\n        {...getContainerProps({\n          role: null,\n          style: { display: 'flex' }\n        })}\n      >\n        <li\n          {...getPreviousPageProps({\n            role: null,\n            item: 'prev',\n            'aria-disabled': selectedItem === 0,\n            focusRef: previousPageRef,\n            key: 'previous-page',\n            style: {\n              color: selectedItem === 0 ? 'gray' : undefined,\n              cursor: 'pointer',\n              userSelect: 'none'\n            }\n          })}\n        >\n          Prev\n        </li>\n        {pages.map((page, index) => {\n          return (\n            <li\n              {...getPageProps({\n                role: null,\n                page: index,\n                current: index === selectedItem,\n                item: index,\n                focusRef: pageRefs[index],\n                key: `page-${index}`,\n                style: {\n                  outline: index === focusedItem ? '3px solid red' : undefined,\n                  background: index === selectedItem ? 'gray' : undefined,\n                  padding: '0 6px',\n                  cursor: 'pointer',\n                  userSelect: 'none'\n                }\n              })}\n            >\n              {index + 1}\n            </li>\n          );\n        })}\n        <li\n          {...getNextPageProps({\n            role: null,\n            item: 'next',\n            'aria-disabled': selectedItem === pages.length - 1,\n            focusRef: nextPageRef,\n            key: 'next-page',\n            style: {\n              color: selectedItem === pages.length - 1 ? 'gray' : undefined,\n              cursor: 'pointer',\n              userSelect: 'none'\n            }\n          })}\n        >\n          Next\n        </li>\n      </ul>\n    </nav>\n  );\n}"}},pagination_stories_Hook.parameters)},2904:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Container",(function(){return schedule_stories_Container})),__webpack_require__.d(__webpack_exports__,"Hook",(function(){return schedule_stories_Hook}));__webpack_require__(2879);var _parameters,esm_extends=__webpack_require__(1132),react=__webpack_require__(0),react_default=__webpack_require__.n(react),objectWithoutPropertiesLoose=__webpack_require__(1752),prop_types=__webpack_require__(2),prop_types_default=__webpack_require__.n(prop_types),useSchedule_useSchedule=(__webpack_require__(2882),__webpack_require__(2883),__webpack_require__(755),function useSchedule(_temp){var _ref=void 0===_temp?{}:_temp,_ref$duration=_ref.duration,duration=void 0===_ref$duration?1250:_ref$duration,_ref$delayMS=_ref.delayMS,delayMS=void 0===_ref$delayMS?750:_ref$delayMS,_ref$loop=_ref.loop,loop=void 0===_ref$loop||_ref$loop,_useState=Object(react.useState)(0),elapsed=_useState[0],setTime=_useState[1],_useState2=Object(react.useState)(!1),delayComplete=_useState2[0],setDelayComplete=_useState2[1];return Object(react.useLayoutEffect)((function(){var raf,start,loopTimeout,destroyed=!1,tick=function tick(){destroyed||(raf=requestAnimationFrame(performAnimationFrame))},performAnimationFrame=function performAnimationFrame(){setTime(Date.now()-start),tick()},renderingDelayTimeout=setTimeout((function onStart(){destroyed||(loopTimeout=setTimeout((function(){cancelAnimationFrame(raf),setTime(Date.now()-start),loop&&onStart()}),duration),start=Date.now(),setDelayComplete(!0),tick())}),delayMS);return function(){destroyed=!0,clearTimeout(renderingDelayTimeout),clearTimeout(loopTimeout),cancelAnimationFrame(raf)}}),[duration,delayMS,loop]),{elapsed:Math.min(1,elapsed/duration),delayMS:delayMS,delayComplete:delayComplete}}),_excluded=["children","render"],ScheduleContainer_ScheduleContainer=function ScheduleContainer(_ref){var children=_ref.children,_ref$render=_ref.render,render=void 0===_ref$render?children:_ref$render,props=Object(objectWithoutPropertiesLoose.a)(_ref,_excluded);return react_default.a.createElement(react_default.a.Fragment,null,render(useSchedule_useSchedule(props)))};ScheduleContainer_ScheduleContainer.defaultProps={duration:1250,delayMS:750,loop:!0},ScheduleContainer_ScheduleContainer.propTypes={children:prop_types_default.a.func,render:prop_types_default.a.func,duration:prop_types_default.a.number,loop:prop_types_default.a.bool,delayMS:prop_types_default.a.number};try{ScheduleContainer_ScheduleContainer.displayName="ScheduleContainer",ScheduleContainer_ScheduleContainer.__docgenInfo={description:"",displayName:"ScheduleContainer",props:{render:{defaultValue:null,description:"A render prop function which receives the schedule state",name:"render",required:!1,type:{name:"((options: IUseScheduleReturnValue) => ReactNode)"}},children:{defaultValue:null,description:"A children render prop function which receives the schedule state",name:"children",required:!1,type:{name:"(((options: IUseScheduleReturnValue) => ReactNode) & (boolean | ReactChild | ReactFragment | ReactPortal | null))"}},duration:{defaultValue:{value:"1250"},description:"The duration of a schedule in miliseconds",name:"duration",required:!1,type:{name:"number"}},delayMS:{defaultValue:{value:"750"},description:"The delay in miliseconds prior to the beginning of the schedule",name:"delayMS",required:!1,type:{name:"number"}},loop:{defaultValue:{value:"true"},description:"Determines whether a schedule should loop",name:"loop",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/schedule/src/ScheduleContainer.tsx#ScheduleContainer"]={docgenInfo:ScheduleContainer_ScheduleContainer.__docgenInfo,name:"ScheduleContainer",path:"packages/schedule/src/ScheduleContainer.tsx#ScheduleContainer"})}catch(__react_docgen_typescript_loader_error){}var schedule_stories_Container=function Container(_ref){var duration=_ref.duration,loop=_ref.loop,delayMS=_ref.delayMS;return react_default.a.createElement(ScheduleContainer_ScheduleContainer,{duration:duration,loop:loop,delayMS:delayMS},(function(_ref2){var elapsed=_ref2.elapsed;return _ref2.delayComplete||0===delayMS?react_default.a.createElement("div",null,"Percentage: ",(100*elapsed).toFixed(0),"%",react_default.a.createElement("br",null),"Elapsed: ",elapsed):react_default.a.createElement("div",null,"Delay...")}))},schedule_stories_Hook=function Hook(_ref3){var duration=_ref3.duration,loop=_ref3.loop,delayMS=_ref3.delayMS,Animation=function Animation(){var _useSchedule=useSchedule_useSchedule({duration:duration,loop:loop,delayMS:delayMS}),elapsed=_useSchedule.elapsed;return _useSchedule.delayComplete||0===delayMS?react_default.a.createElement("div",null,"Percentage: ",(100*elapsed).toFixed(0),"%",react_default.a.createElement("br",null),"Elapsed: ",elapsed):react_default.a.createElement("div",null,"Delay...")};return react_default.a.createElement(Animation,null)},ARGS={duration:1250,loop:!0,delayMS:750};schedule_stories_Container.storyName="ScheduleContainer",schedule_stories_Container.args=ARGS,schedule_stories_Hook.storyName="useSchedule",schedule_stories_Hook.args=ARGS,schedule_stories_Hook.parameters={docs:{description:{story:"The `useSchedule` hook implements a schedule (timer) and communicates when it has elapsed."}}};__webpack_exports__.default={title:"Schedule Container",component:ScheduleContainer_ScheduleContainer,parameters:(_parameters={storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React from \'react\';\\nimport { ScheduleContainer, useSchedule } from \'./src\';\\n\\nexport const Container = ({ duration, loop, delayMS }) => (\\n  <ScheduleContainer duration={duration} loop={loop} delayMS={delayMS}>\\n    {({ elapsed, delayComplete }) => {\\n      if (!delayComplete && delayMS !== 0) {\\n        return <div>Delay...</div>;\\n      }\\n\\n      return (\\n        <div>\\n          Percentage: {(elapsed * 100).toFixed(0)}%<br />\\n          Elapsed: {elapsed}\\n        </div>\\n      );\\n    }}\\n  </ScheduleContainer>\\n);\\n\\nexport const Hook = ({ duration, loop, delayMS }) => {\\n  const Animation = () => {\\n    const { elapsed, delayComplete } = useSchedule({ duration, loop, delayMS });\\n\\n    if (!delayComplete && delayMS !== 0) {\\n      return <div>Delay...</div>;\\n    }\\n\\n    return (\\n      <div>\\n        Percentage: {(elapsed * 100).toFixed(0)}%<br />\\n        Elapsed: {elapsed}\\n      </div>\\n    );\\n  };\\n\\n  return <Animation />;\\n};\\n\\nconst ARGS = {\\n  duration: 1250,\\n  loop: true,\\n  delayMS: 750\\n};\\n\\nContainer.storyName = \'ScheduleContainer\';\\n\\nContainer.args = ARGS;\\n\\nHook.storyName = \'useSchedule\';\\n\\nHook.args = ARGS;\\n\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`useSchedule\\\\` hook implements a schedule (timer) and communicates when it has elapsed.`\\n    }\\n  }\\n};\\n\\nexport default {\\n  title: \'Schedule Container\',\\n  component: ScheduleContainer,\\n  parameters: {\\n    layout: \'centered\',\\n    componentSubtitle: `A container component which wraps the useSchedule hook.`\\n  }\\n};\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Container":{"startLoc":{"col":25,"line":11},"endLoc":{"col":1,"line":26},"startBody":{"col":25,"line":11},"endBody":{"col":1,"line":26}},"Hook":{"startLoc":{"col":20,"line":28},"endLoc":{"col":1,"line":45},"startBody":{"col":20,"line":28},"endBody":{"col":1,"line":45}}};\n    \n/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React from \'react\';\nimport { ScheduleContainer, useSchedule } from \'./src\';\n\nexport const Container = ({ duration, loop, delayMS }) => (\n  <ScheduleContainer duration={duration} loop={loop} delayMS={delayMS}>\n    {({ elapsed, delayComplete }) => {\n      if (!delayComplete && delayMS !== 0) {\n        return <div>Delay...</div>;\n      }\n\n      return (\n        <div>\n          Percentage: {(elapsed * 100).toFixed(0)}%<br />\n          Elapsed: {elapsed}\n        </div>\n      );\n    }}\n  </ScheduleContainer>\n);;\n\nexport const Hook = ({ duration, loop, delayMS }) => {\n  const Animation = () => {\n    const { elapsed, delayComplete } = useSchedule({ duration, loop, delayMS });\n\n    if (!delayComplete && delayMS !== 0) {\n      return <div>Delay...</div>;\n    }\n\n    return (\n      <div>\n        Percentage: {(elapsed * 100).toFixed(0)}%<br />\n        Elapsed: {elapsed}\n      </div>\n    );\n  };\n\n  return <Animation />;\n};\n\nconst ARGS = {\n  duration: 1250,\n  loop: true,\n  delayMS: 750\n};\n\nContainer.storyName = \'ScheduleContainer\';\n\nContainer.args = ARGS;\n\nHook.storyName = \'useSchedule\';\n\nHook.args = ARGS;\n\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`useSchedule\\` hook implements a schedule (timer) and communicates when it has elapsed.`\n    }\n  }\n};\n\nexport default {\n  title: \'Schedule Container\',\n  component: ScheduleContainer,\n  parameters: {"storySource":{"source":"/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React from \'react\';\\nimport { ScheduleContainer, useSchedule } from \'./src\';\\n\\nexport const Container = ({ duration, loop, delayMS }) => (\\n  <ScheduleContainer duration={duration} loop={loop} delayMS={delayMS}>\\n    {({ elapsed, delayComplete }) => {\\n      if (!delayComplete && delayMS !== 0) {\\n        return <div>Delay...</div>;\\n      }\\n\\n      return (\\n        <div>\\n          Percentage: {(elapsed * 100).toFixed(0)}%<br />\\n          Elapsed: {elapsed}\\n        </div>\\n      );\\n    }}\\n  </ScheduleContainer>\\n);\\n\\nexport const Hook = ({ duration, loop, delayMS }) => {\\n  const Animation = () => {\\n    const { elapsed, delayComplete } = useSchedule({ duration, loop, delayMS });\\n\\n    if (!delayComplete && delayMS !== 0) {\\n      return <div>Delay...</div>;\\n    }\\n\\n    return (\\n      <div>\\n        Percentage: {(elapsed * 100).toFixed(0)}%<br />\\n        Elapsed: {elapsed}\\n      </div>\\n    );\\n  };\\n\\n  return <Animation />;\\n};\\n\\nconst ARGS = {\\n  duration: 1250,\\n  loop: true,\\n  delayMS: 750\\n};\\n\\nContainer.storyName = \'ScheduleContainer\';\\n\\nContainer.args = ARGS;\\n\\nHook.storyName = \'useSchedule\';\\n\\nHook.args = ARGS;\\n\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`useSchedule\\\\` hook implements a schedule (timer) and communicates when it has elapsed.`\\n    }\\n  }\\n};\\n\\nexport default {\\n  title: \'Schedule Container\',\\n  component: ScheduleContainer,\\n  parameters: {\\n    layout: \'centered\',\\n    componentSubtitle: `A container component which wraps the useSchedule hook.`\\n  }\\n};\\n","locationsMap":{"container":{"startLoc":{"col":25,"line":11},"endLoc":{"col":1,"line":26},"startBody":{"col":25,"line":11},"endBody":{"col":1,"line":26}},"hook":{"startLoc":{"col":20,"line":28},"endLoc":{"col":1,"line":45},"startBody":{"col":20,"line":28},"endBody":{"col":1,"line":45}}}},\n    layout: \'centered\',\n    componentSubtitle: `A container component which wraps the useSchedule hook.`\n  },};\n',locationsMap:{container:{startLoc:{col:25,line:19},endLoc:{col:1,line:34},startBody:{col:25,line:19},endBody:{col:1,line:34}},hook:{startLoc:{col:20,line:36},endLoc:{col:1,line:53},startBody:{col:20,line:36},endBody:{col:1,line:53}}}}},_parameters.storySource={source:"/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React from 'react';\nimport { ScheduleContainer, useSchedule } from './src';\n\nexport const Container = ({ duration, loop, delayMS }) => (\n  <ScheduleContainer duration={duration} loop={loop} delayMS={delayMS}>\n    {({ elapsed, delayComplete }) => {\n      if (!delayComplete && delayMS !== 0) {\n        return <div>Delay...</div>;\n      }\n\n      return (\n        <div>\n          Percentage: {(elapsed * 100).toFixed(0)}%<br />\n          Elapsed: {elapsed}\n        </div>\n      );\n    }}\n  </ScheduleContainer>\n);\n\nexport const Hook = ({ duration, loop, delayMS }) => {\n  const Animation = () => {\n    const { elapsed, delayComplete } = useSchedule({ duration, loop, delayMS });\n\n    if (!delayComplete && delayMS !== 0) {\n      return <div>Delay...</div>;\n    }\n\n    return (\n      <div>\n        Percentage: {(elapsed * 100).toFixed(0)}%<br />\n        Elapsed: {elapsed}\n      </div>\n    );\n  };\n\n  return <Animation />;\n};\n\nconst ARGS = {\n  duration: 1250,\n  loop: true,\n  delayMS: 750\n};\n\nContainer.storyName = 'ScheduleContainer';\n\nContainer.args = ARGS;\n\nHook.storyName = 'useSchedule';\n\nHook.args = ARGS;\n\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`useSchedule\\` hook implements a schedule (timer) and communicates when it has elapsed.`\n    }\n  }\n};\n\nexport default {\n  title: 'Schedule Container',\n  component: ScheduleContainer,\n  parameters: {\n    layout: 'centered',\n    componentSubtitle: `A container component which wraps the useSchedule hook.`\n  }\n};\n",locationsMap:{container:{startLoc:{col:25,line:11},endLoc:{col:1,line:26},startBody:{col:25,line:11},endBody:{col:1,line:26}},hook:{startLoc:{col:20,line:28},endLoc:{col:1,line:45},startBody:{col:20,line:28},endBody:{col:1,line:45}}}},_parameters.layout="centered",_parameters.componentSubtitle="A container component which wraps the useSchedule hook.",_parameters)};schedule_stories_Container.parameters=Object(esm_extends.a)({storySource:{source:"({ duration, loop, delayMS }) => (\n  <ScheduleContainer duration={duration} loop={loop} delayMS={delayMS}>\n    {({ elapsed, delayComplete }) => {\n      if (!delayComplete && delayMS !== 0) {\n        return <div>Delay...</div>;\n      }\n\n      return (\n        <div>\n          Percentage: {(elapsed * 100).toFixed(0)}%<br />\n          Elapsed: {elapsed}\n        </div>\n      );\n    }}\n  </ScheduleContainer>\n)"}},schedule_stories_Container.parameters),schedule_stories_Hook.parameters=Object(esm_extends.a)({storySource:{source:"({ duration, loop, delayMS }) => {\n  const Animation = () => {\n    const { elapsed, delayComplete } = useSchedule({ duration, loop, delayMS });\n\n    if (!delayComplete && delayMS !== 0) {\n      return <div>Delay...</div>;\n    }\n\n    return (\n      <div>\n        Percentage: {(elapsed * 100).toFixed(0)}%<br />\n        Elapsed: {elapsed}\n      </div>\n    );\n  };\n\n  return <Animation />;\n}"}},schedule_stories_Hook.parameters);try{schedule_stories_Container.displayName="Container",schedule_stories_Container.__docgenInfo={description:"",displayName:"Container",props:{duration:{defaultValue:null,description:"",name:"duration",required:!0,type:{name:"any"}},loop:{defaultValue:null,description:"",name:"loop",required:!0,type:{name:"any"}},delayMS:{defaultValue:null,description:"",name:"delayMS",required:!0,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/schedule/schedule.stories.tsx#Container"]={docgenInfo:schedule_stories_Container.__docgenInfo,name:"Container",path:"packages/schedule/schedule.stories.tsx#Container"})}catch(__react_docgen_typescript_loader_error){}try{schedule_stories_Hook.displayName="Hook",schedule_stories_Hook.__docgenInfo={description:"",displayName:"Hook",props:{duration:{defaultValue:null,description:"",name:"duration",required:!0,type:{name:"any"}},loop:{defaultValue:null,description:"",name:"loop",required:!0,type:{name:"any"}},delayMS:{defaultValue:null,description:"",name:"delayMS",required:!0,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/schedule/schedule.stories.tsx#Hook"]={docgenInfo:schedule_stories_Hook.__docgenInfo,name:"Hook",path:"packages/schedule/schedule.stories.tsx#Hook"})}catch(__react_docgen_typescript_loader_error){}},2905:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Container",(function(){return scrollregion_stories_Container})),__webpack_require__.d(__webpack_exports__,"Hook",(function(){return scrollregion_stories_Hook})),__webpack_require__.d(__webpack_exports__,"Advanced",(function(){return scrollregion_stories_Advanced}));__webpack_require__(2884),__webpack_require__(1616),__webpack_require__(1615),__webpack_require__(1062),__webpack_require__(1620),__webpack_require__(290);var esm_extends=__webpack_require__(562),react=__webpack_require__(0),react_default=__webpack_require__.n(react),styled_components_browser_esm=__webpack_require__(55),react_merge_refs_esm=__webpack_require__(1753),index_esm=__webpack_require__(424),objectWithoutPropertiesLoose=__webpack_require__(1754),prop_types=__webpack_require__(563),prop_types_default=__webpack_require__.n(prop_types),lodash_debounce=__webpack_require__(1755),lodash_debounce_default=__webpack_require__.n(lodash_debounce);function useScrollRegion(_ref){var containerRef=_ref.containerRef,dependency=_ref.dependency,_useState=Object(react.useState)(),containerTabIndex=_useState[0],setContainerTabIndex=_useState[1],updateContainerTabIndex=Object(react.useMemo)((function(){return lodash_debounce_default()((function(){if(containerRef.current){var regionContent=containerRef.current.children[0],regionContentHeight=regionContent.scrollHeight,regionContentWidth=regionContent.scrollWidth,containerHeight=containerRef.current.offsetHeight,containerWidth=containerRef.current.offsetWidth;setContainerTabIndex(regionContentWidth>containerWidth||regionContentHeight>containerHeight?0:void 0)}}),100)}),[containerRef,setContainerTabIndex]);return Object(react.useEffect)((function(){return addEventListener("resize",updateContainerTabIndex),updateContainerTabIndex(),function(){removeEventListener("resize",updateContainerTabIndex),updateContainerTabIndex.cancel()}}),[updateContainerTabIndex,dependency]),containerTabIndex}var _parameters,_excluded=["children","render"],ScrollRegionContainer_ScrollRegionContainer=function ScrollRegionContainer(_ref){var children=_ref.children,_ref$render=_ref.render,render=void 0===_ref$render?children:_ref$render,props=Object(objectWithoutPropertiesLoose.a)(_ref,_excluded);return react_default.a.createElement(react_default.a.Fragment,null,render(useScrollRegion(props)))};ScrollRegionContainer_ScrollRegionContainer.propTypes={children:prop_types_default.a.func,render:prop_types_default.a.func,containerRef:prop_types_default.a.any.isRequired,dependency:prop_types_default.a.any};try{ScrollRegionContainer_ScrollRegionContainer.displayName="ScrollRegionContainer",ScrollRegionContainer_ScrollRegionContainer.__docgenInfo={description:"",displayName:"ScrollRegionContainer",props:{render:{defaultValue:null,description:"A render prop function which receives the tab index",name:"render",required:!1,type:{name:"((tabIndex: number) => ReactNode)"}},children:{defaultValue:null,description:"A children render prop function which receives the tab index",name:"children",required:!1,type:{name:"(((tabIndex: number) => ReactNode) & (boolean | ReactChild | ReactFragment | ReactPortal | null))"}},containerRef:{defaultValue:null,description:"A [ref](https://reactjs.org/docs/refs-and-the-dom.html) pointing to the scroll region's container element",name:"containerRef",required:!0,type:{name:"RefObject<HTMLElement>"}},dependency:{defaultValue:null,description:"A value that determines if the scroll region tab index should be recalculated",name:"dependency",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/scrollregion/src/ScrollRegionContainer.tsx#ScrollRegionContainer"]={docgenInfo:ScrollRegionContainer_ScrollRegionContainer.__docgenInfo,name:"ScrollRegionContainer",path:"packages/scrollregion/src/ScrollRegionContainer.tsx#ScrollRegionContainer"})}catch(__react_docgen_typescript_loader_error){}var StyledCustomFocus=styled_components_browser_esm.c.div.withConfig({displayName:"scrollregionstories__StyledCustomFocus",componentId:"sc-ked7sy-0"})(["height:200px;width:300px;overflow-y:auto;:focus{outline:none;}&[data-garden-focus-visible]{outline:2px dashed red;}"]),scrollregion_stories_Container=function Container(){var containerRef=Object(react.useRef)(null),focusVisibleRef=Object(react.useRef)(null),_useState=Object(react.useState)(!1),overflow=_useState[0],setOverflow=_useState[1];return Object(index_esm.a)({scope:focusVisibleRef}),react_default.a.createElement(ScrollRegionContainer_ScrollRegionContainer,{containerRef:containerRef,dependency:overflow},(function(containerTabIndex){return react_default.a.createElement("div",{ref:focusVisibleRef,style:{margin:"2px"}},react_default.a.createElement("input",{type:"checkbox",id:"container-toggle",onChange:function onChange(e){return setOverflow(e.target.checked)},style:{margin:"4px"}}),react_default.a.createElement("label",{htmlFor:"container-toggle"},"Toggle overflow"),react_default.a.createElement(StyledCustomFocus,{ref:containerRef,tabIndex:containerTabIndex},react_default.a.createElement("p",{style:{lineHeight:overflow?"32px":"initial"}},"Turnip greens yarrow ricebean rutabaga endive cauliflower sea lettuce kohlrabi amaranth water spinach avocado daikon napa cabbage asparagus winter purslane kale. Celery potato scallion desert raisin horseradish spinach carrot soko. Lotus root water spinach fennel kombu maize bamboo shoot green bean swiss chard seakale pumpkin.")))}))},scrollregion_stories_Hook=function Hook(){var containerRef=Object(react.useRef)(null),focusVisibleRef=Object(react.useRef)(null),_useState2=Object(react.useState)(!1),overflow=_useState2[0],setOverflow=_useState2[1],containerTabIndex=useScrollRegion({containerRef:containerRef,dependency:overflow});return Object(index_esm.a)({scope:focusVisibleRef}),react_default.a.createElement("div",{ref:focusVisibleRef,style:{margin:"2px"}},react_default.a.createElement("input",{type:"checkbox",id:"hook-toggle",onChange:function onChange(e){return setOverflow(e.target.checked)},style:{margin:"4px"}}),react_default.a.createElement("label",{htmlFor:"hook-toggle"},"Toggle overflow"),react_default.a.createElement(StyledCustomFocus,{ref:containerRef,tabIndex:containerTabIndex},react_default.a.createElement("p",{style:{lineHeight:overflow?"32px":"initial"}},"Turnip greens yarrow ricebean rutabaga endive cauliflower sea lettuce kohlrabi amaranth water spinach avocado daikon napa cabbage asparagus winter purslane kale. Celery potato scallion desert raisin horseradish spinach carrot soko. Lotus root water spinach fennel kombu maize bamboo shoot green bean swiss chard seakale pumpkin.")))},Content=Object(react.forwardRef)((function(_ref,ref){var props=Object(esm_extends.a)({},_ref),_useState3=Object(react.useState)(!1),hasPadding=_useState3[0],setHasPadding=_useState3[1],containerRef=Object(react.useRef)(null),mergedRefs=Object(react_merge_refs_esm.a)([ref,containerRef]),containerTabIndex=useScrollRegion({containerRef:containerRef,dependency:Object(react.useMemo)((function(){return[hasPadding,props.children]}),[hasPadding,props.children])});return react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement("input",{type:"checkbox",id:"padding-toggle",style:{margin:"12px 8px"},onChange:function onChange(e){return setHasPadding(e.target.checked)}}),react_default.a.createElement("label",{htmlFor:"padding-toggle"},"Toggle padding"),react_default.a.createElement(StyledCustomFocus,{ref:mergedRefs,tabIndex:containerTabIndex,style:{height:50,width:200,border:"1px solid #000"}},react_default.a.createElement("div",{style:{padding:hasPadding?"18px 12px":0}},props.children)))})),scrollregion_stories_Advanced=function Advanced(){var focusVisibleRef=Object(react.useRef)(null),_useState4=Object(react.useState)(2),count=_useState4[0],setCount=_useState4[1],list=Array.from(Array(count).keys());return Object(index_esm.a)({scope:focusVisibleRef}),react_default.a.createElement("div",{ref:focusVisibleRef,style:{margin:"2px"}},react_default.a.createElement("button",{onClick:function onClick(){return setCount(count+1)}},"Add children"),react_default.a.createElement(Content,null,list.map((function(n){return react_default.a.createElement("div",{key:n},n+1,") Turnip greens ricebean")}))))};Content.displayName="Content",scrollregion_stories_Container.storyName="ScrollRegionContainer",scrollregion_stories_Hook.storyName="useScrollRegion",scrollregion_stories_Advanced.storyName="advanced scroll region",scrollregion_stories_Advanced.parameters={docs:{description:{story:"This example demonstrates a scroll region with multiple dependencies that change the region's layout.\n      In this example, `children` and `hasPadding` can cause overflow. These values need be memozied as an array and then passed to the\n      `useScrollRegion`'s `dependency` option."}}},scrollregion_stories_Hook.parameters={docs:{description:{story:"The `useScrollRegion` hook implements a scroll region."}}};__webpack_exports__.default={title:"ScrollRegion Container",component:ScrollRegionContainer_ScrollRegionContainer,parameters:(_parameters={storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React, { useRef, useState, useMemo, forwardRef, HTMLAttributes } from \'react\';\\nimport styled from \'styled-components\';\\nimport mergeRefs from \'react-merge-refs\';\\nimport { useFocusVisible } from \'@zendeskgarden/container-focusvisible\';\\nimport { ScrollRegionContainer, useScrollRegion } from \'./src\';\\n\\nconst StyledCustomFocus = styled.div`\\n  height: 200px;\\n  width: 300px;\\n  overflow-y: auto;\\n\\n  :focus {\\n    outline: none;\\n  }\\n\\n  &[data-garden-focus-visible] {\\n    outline: 2px dashed red;\\n  }\\n`;\\n\\nexport const Container = () => {\\n  const containerRef = useRef<HTMLDivElement>(null);\\n  const focusVisibleRef = useRef<HTMLDivElement>(null);\\n  const [overflow, setOverflow] = useState(false);\\n\\n  useFocusVisible({ scope: focusVisibleRef });\\n\\n  return (\\n    <ScrollRegionContainer containerRef={containerRef} dependency={overflow}>\\n      {containerTabIndex => (\\n        <div ref={focusVisibleRef} style={{ margin: \'2px\' }}>\\n          <input\\n            type=\\"checkbox\\"\\n            id=\\"container-toggle\\"\\n            onChange={e => setOverflow(e.target.checked)}\\n            style={{ margin: \'4px\' }}\\n          />\\n          <label htmlFor=\\"container-toggle\\">Toggle overflow</label>\\n          <StyledCustomFocus ref={containerRef} tabIndex={containerTabIndex}>\\n            <p style={{ lineHeight: overflow ? \'32px\' : \'initial\' }}>\\n              Turnip greens yarrow ricebean rutabaga endive cauliflower sea lettuce kohlrabi\\n              amaranth water spinach avocado daikon napa cabbage asparagus winter purslane kale.\\n              Celery potato scallion desert raisin horseradish spinach carrot soko. Lotus root water\\n              spinach fennel kombu maize bamboo shoot green bean swiss chard seakale pumpkin.\\n            </p>\\n          </StyledCustomFocus>\\n        </div>\\n      )}\\n    </ScrollRegionContainer>\\n  );\\n};\\n\\nexport const Hook = () => {\\n  const containerRef = useRef<HTMLDivElement>(null);\\n  const focusVisibleRef = useRef<HTMLDivElement>(null);\\n  const [overflow, setOverflow] = useState(false);\\n  const containerTabIndex = useScrollRegion({ containerRef, dependency: overflow });\\n\\n  useFocusVisible({ scope: focusVisibleRef });\\n\\n  return (\\n    <div ref={focusVisibleRef} style={{ margin: \'2px\' }}>\\n      <input\\n        type=\\"checkbox\\"\\n        id=\\"hook-toggle\\"\\n        onChange={e => setOverflow(e.target.checked)}\\n        style={{ margin: \'4px\' }}\\n      />\\n      <label htmlFor=\\"hook-toggle\\">Toggle overflow</label>\\n      <StyledCustomFocus ref={containerRef} tabIndex={containerTabIndex}>\\n        <p style={{ lineHeight: overflow ? \'32px\' : \'initial\' }}>\\n          Turnip greens yarrow ricebean rutabaga endive cauliflower sea lettuce kohlrabi amaranth\\n          water spinach avocado daikon napa cabbage asparagus winter purslane kale. Celery potato\\n          scallion desert raisin horseradish spinach carrot soko. Lotus root water spinach fennel\\n          kombu maize bamboo shoot green bean swiss chard seakale pumpkin.\\n        </p>\\n      </StyledCustomFocus>\\n    </div>\\n  );\\n};\\n\\nconst Content = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(({ ...props }, ref) => {\\n  const [hasPadding, setHasPadding] = useState(false);\\n  const containerRef = useRef<HTMLDivElement>(null);\\n  const mergedRefs = mergeRefs([ref, containerRef]);\\n\\n  const dependency = useMemo(() => {\\n    return [hasPadding, props.children];\\n  }, [hasPadding, props.children]);\\n\\n  const containerTabIndex = useScrollRegion({ containerRef, dependency });\\n\\n  return (\\n    <>\\n      <input\\n        type=\\"checkbox\\"\\n        id=\\"padding-toggle\\"\\n        style={{ margin: \'12px 8px\' }}\\n        onChange={e => setHasPadding(e.target.checked)}\\n      />\\n      <label htmlFor=\\"padding-toggle\\">Toggle padding</label>\\n      <StyledCustomFocus\\n        ref={mergedRefs}\\n        tabIndex={containerTabIndex}\\n        style={{ height: 50, width: 200, border: \'1px solid #000\' }}\\n      >\\n        <div style={{ padding: hasPadding ? \'18px 12px\' : 0 }}>{props.children}</div>\\n      </StyledCustomFocus>\\n    </>\\n  );\\n});\\n\\nexport const Advanced = () => {\\n  const focusVisibleRef = useRef<HTMLDivElement>(null);\\n  const [count, setCount] = useState(2);\\n  const list = Array.from(Array(count).keys());\\n\\n  useFocusVisible({ scope: focusVisibleRef });\\n\\n  return (\\n    <div ref={focusVisibleRef} style={{ margin: \'2px\' }}>\\n      <button onClick={() => setCount(count + 1)}>Add children</button>\\n      <Content>\\n        {list.map((n: number) => (\\n          <div key={n}>{n + 1}) Turnip greens ricebean</div>\\n        ))}\\n      </Content>\\n    </div>\\n  );\\n};\\n\\nContent.displayName = \'Content\';\\n\\nContainer.storyName = \'ScrollRegionContainer\';\\n\\nHook.storyName = \'useScrollRegion\';\\n\\nAdvanced.storyName = \'advanced scroll region\';\\n\\nAdvanced.parameters = {\\n  docs: {\\n    description: {\\n      story: `This example demonstrates a scroll region with multiple dependencies that change the region\'s layout.\\n      In this example, \\\\`children\\\\` and \\\\`hasPadding\\\\` can cause overflow. These values need be memozied as an array and then passed to the\\n      \\\\`useScrollRegion\\\\`\'s \\\\`dependency\\\\` option.`\\n    }\\n  }\\n};\\n\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`useScrollRegion\\\\` hook implements a scroll region.`\\n    }\\n  }\\n};\\n\\nexport default {\\n  title: \'ScrollRegion Container\',\\n  component: ScrollRegionContainer,\\n  parameters: {\\n    layout: \'centered\',\\n    componentSubtitle: `A container component which wraps the useScrollRegion hook.`\\n  }\\n};\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Container":{"startLoc":{"col":25,"line":28},"endLoc":{"col":1,"line":58},"startBody":{"col":25,"line":28},"endBody":{"col":1,"line":58}},"Hook":{"startLoc":{"col":20,"line":60},"endLoc":{"col":1,"line":87},"startBody":{"col":20,"line":60},"endBody":{"col":1,"line":87}},"Advanced":{"startLoc":{"col":24,"line":120},"endLoc":{"col":1,"line":137},"startBody":{"col":24,"line":120},"endBody":{"col":1,"line":137}}};\n    \n/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React, { useRef, useState, useMemo, forwardRef, HTMLAttributes } from \'react\';\nimport styled from \'styled-components\';\nimport mergeRefs from \'react-merge-refs\';\nimport { useFocusVisible } from \'@zendeskgarden/container-focusvisible\';\nimport { ScrollRegionContainer, useScrollRegion } from \'./src\';\n\nconst StyledCustomFocus = styled.div`\n  height: 200px;\n  width: 300px;\n  overflow-y: auto;\n\n  :focus {\n    outline: none;\n  }\n\n  &[data-garden-focus-visible] {\n    outline: 2px dashed red;\n  }\n`;\n\nexport const Container = () => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const focusVisibleRef = useRef<HTMLDivElement>(null);\n  const [overflow, setOverflow] = useState(false);\n\n  useFocusVisible({ scope: focusVisibleRef });\n\n  return (\n    <ScrollRegionContainer containerRef={containerRef} dependency={overflow}>\n      {containerTabIndex => (\n        <div ref={focusVisibleRef} style={{ margin: \'2px\' }}>\n          <input\n            type="checkbox"\n            id="container-toggle"\n            onChange={e => setOverflow(e.target.checked)}\n            style={{ margin: \'4px\' }}\n          />\n          <label htmlFor="container-toggle">Toggle overflow</label>\n          <StyledCustomFocus ref={containerRef} tabIndex={containerTabIndex}>\n            <p style={{ lineHeight: overflow ? \'32px\' : \'initial\' }}>\n              Turnip greens yarrow ricebean rutabaga endive cauliflower sea lettuce kohlrabi\n              amaranth water spinach avocado daikon napa cabbage asparagus winter purslane kale.\n              Celery potato scallion desert raisin horseradish spinach carrot soko. Lotus root water\n              spinach fennel kombu maize bamboo shoot green bean swiss chard seakale pumpkin.\n            </p>\n          </StyledCustomFocus>\n        </div>\n      )}\n    </ScrollRegionContainer>\n  );\n};;\n\nexport const Hook = () => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const focusVisibleRef = useRef<HTMLDivElement>(null);\n  const [overflow, setOverflow] = useState(false);\n  const containerTabIndex = useScrollRegion({ containerRef, dependency: overflow });\n\n  useFocusVisible({ scope: focusVisibleRef });\n\n  return (\n    <div ref={focusVisibleRef} style={{ margin: \'2px\' }}>\n      <input\n        type="checkbox"\n        id="hook-toggle"\n        onChange={e => setOverflow(e.target.checked)}\n        style={{ margin: \'4px\' }}\n      />\n      <label htmlFor="hook-toggle">Toggle overflow</label>\n      <StyledCustomFocus ref={containerRef} tabIndex={containerTabIndex}>\n        <p style={{ lineHeight: overflow ? \'32px\' : \'initial\' }}>\n          Turnip greens yarrow ricebean rutabaga endive cauliflower sea lettuce kohlrabi amaranth\n          water spinach avocado daikon napa cabbage asparagus winter purslane kale. Celery potato\n          scallion desert raisin horseradish spinach carrot soko. Lotus root water spinach fennel\n          kombu maize bamboo shoot green bean swiss chard seakale pumpkin.\n        </p>\n      </StyledCustomFocus>\n    </div>\n  );\n};;\n\nconst Content = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(({ ...props }, ref) => {\n  const [hasPadding, setHasPadding] = useState(false);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const mergedRefs = mergeRefs([ref, containerRef]);\n\n  const dependency = useMemo(() => {\n    return [hasPadding, props.children];\n  }, [hasPadding, props.children]);\n\n  const containerTabIndex = useScrollRegion({ containerRef, dependency });\n\n  return (\n    <>\n      <input\n        type="checkbox"\n        id="padding-toggle"\n        style={{ margin: \'12px 8px\' }}\n        onChange={e => setHasPadding(e.target.checked)}\n      />\n      <label htmlFor="padding-toggle">Toggle padding</label>\n      <StyledCustomFocus\n        ref={mergedRefs}\n        tabIndex={containerTabIndex}\n        style={{ height: 50, width: 200, border: \'1px solid #000\' }}\n      >\n        <div style={{ padding: hasPadding ? \'18px 12px\' : 0 }}>{props.children}</div>\n      </StyledCustomFocus>\n    </>\n  );\n});\n\nexport const Advanced = () => {\n  const focusVisibleRef = useRef<HTMLDivElement>(null);\n  const [count, setCount] = useState(2);\n  const list = Array.from(Array(count).keys());\n\n  useFocusVisible({ scope: focusVisibleRef });\n\n  return (\n    <div ref={focusVisibleRef} style={{ margin: \'2px\' }}>\n      <button onClick={() => setCount(count + 1)}>Add children</button>\n      <Content>\n        {list.map((n: number) => (\n          <div key={n}>{n + 1}) Turnip greens ricebean</div>\n        ))}\n      </Content>\n    </div>\n  );\n};\n\nContent.displayName = \'Content\';\n\nContainer.storyName = \'ScrollRegionContainer\';\n\nHook.storyName = \'useScrollRegion\';\n\nAdvanced.storyName = \'advanced scroll region\';\n\nAdvanced.parameters = {\n  docs: {\n    description: {\n      story: `This example demonstrates a scroll region with multiple dependencies that change the region\'s layout.\n      In this example, \\`children\\` and \\`hasPadding\\` can cause overflow. These values need be memozied as an array and then passed to the\n      \\`useScrollRegion\\`\'s \\`dependency\\` option.`\n    }\n  }\n};\n\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`useScrollRegion\\` hook implements a scroll region.`\n    }\n  }\n};\n\nexport default {\n  title: \'ScrollRegion Container\',\n  component: ScrollRegionContainer,\n  parameters: {"storySource":{"source":"/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React, { useRef, useState, useMemo, forwardRef, HTMLAttributes } from \'react\';\\nimport styled from \'styled-components\';\\nimport mergeRefs from \'react-merge-refs\';\\nimport { useFocusVisible } from \'@zendeskgarden/container-focusvisible\';\\nimport { ScrollRegionContainer, useScrollRegion } from \'./src\';\\n\\nconst StyledCustomFocus = styled.div`\\n  height: 200px;\\n  width: 300px;\\n  overflow-y: auto;\\n\\n  :focus {\\n    outline: none;\\n  }\\n\\n  &[data-garden-focus-visible] {\\n    outline: 2px dashed red;\\n  }\\n`;\\n\\nexport const Container = () => {\\n  const containerRef = useRef<HTMLDivElement>(null);\\n  const focusVisibleRef = useRef<HTMLDivElement>(null);\\n  const [overflow, setOverflow] = useState(false);\\n\\n  useFocusVisible({ scope: focusVisibleRef });\\n\\n  return (\\n    <ScrollRegionContainer containerRef={containerRef} dependency={overflow}>\\n      {containerTabIndex => (\\n        <div ref={focusVisibleRef} style={{ margin: \'2px\' }}>\\n          <input\\n            type=\\"checkbox\\"\\n            id=\\"container-toggle\\"\\n            onChange={e => setOverflow(e.target.checked)}\\n            style={{ margin: \'4px\' }}\\n          />\\n          <label htmlFor=\\"container-toggle\\">Toggle overflow</label>\\n          <StyledCustomFocus ref={containerRef} tabIndex={containerTabIndex}>\\n            <p style={{ lineHeight: overflow ? \'32px\' : \'initial\' }}>\\n              Turnip greens yarrow ricebean rutabaga endive cauliflower sea lettuce kohlrabi\\n              amaranth water spinach avocado daikon napa cabbage asparagus winter purslane kale.\\n              Celery potato scallion desert raisin horseradish spinach carrot soko. Lotus root water\\n              spinach fennel kombu maize bamboo shoot green bean swiss chard seakale pumpkin.\\n            </p>\\n          </StyledCustomFocus>\\n        </div>\\n      )}\\n    </ScrollRegionContainer>\\n  );\\n};\\n\\nexport const Hook = () => {\\n  const containerRef = useRef<HTMLDivElement>(null);\\n  const focusVisibleRef = useRef<HTMLDivElement>(null);\\n  const [overflow, setOverflow] = useState(false);\\n  const containerTabIndex = useScrollRegion({ containerRef, dependency: overflow });\\n\\n  useFocusVisible({ scope: focusVisibleRef });\\n\\n  return (\\n    <div ref={focusVisibleRef} style={{ margin: \'2px\' }}>\\n      <input\\n        type=\\"checkbox\\"\\n        id=\\"hook-toggle\\"\\n        onChange={e => setOverflow(e.target.checked)}\\n        style={{ margin: \'4px\' }}\\n      />\\n      <label htmlFor=\\"hook-toggle\\">Toggle overflow</label>\\n      <StyledCustomFocus ref={containerRef} tabIndex={containerTabIndex}>\\n        <p style={{ lineHeight: overflow ? \'32px\' : \'initial\' }}>\\n          Turnip greens yarrow ricebean rutabaga endive cauliflower sea lettuce kohlrabi amaranth\\n          water spinach avocado daikon napa cabbage asparagus winter purslane kale. Celery potato\\n          scallion desert raisin horseradish spinach carrot soko. Lotus root water spinach fennel\\n          kombu maize bamboo shoot green bean swiss chard seakale pumpkin.\\n        </p>\\n      </StyledCustomFocus>\\n    </div>\\n  );\\n};\\n\\nconst Content = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(({ ...props }, ref) => {\\n  const [hasPadding, setHasPadding] = useState(false);\\n  const containerRef = useRef<HTMLDivElement>(null);\\n  const mergedRefs = mergeRefs([ref, containerRef]);\\n\\n  const dependency = useMemo(() => {\\n    return [hasPadding, props.children];\\n  }, [hasPadding, props.children]);\\n\\n  const containerTabIndex = useScrollRegion({ containerRef, dependency });\\n\\n  return (\\n    <>\\n      <input\\n        type=\\"checkbox\\"\\n        id=\\"padding-toggle\\"\\n        style={{ margin: \'12px 8px\' }}\\n        onChange={e => setHasPadding(e.target.checked)}\\n      />\\n      <label htmlFor=\\"padding-toggle\\">Toggle padding</label>\\n      <StyledCustomFocus\\n        ref={mergedRefs}\\n        tabIndex={containerTabIndex}\\n        style={{ height: 50, width: 200, border: \'1px solid #000\' }}\\n      >\\n        <div style={{ padding: hasPadding ? \'18px 12px\' : 0 }}>{props.children}</div>\\n      </StyledCustomFocus>\\n    </>\\n  );\\n});\\n\\nexport const Advanced = () => {\\n  const focusVisibleRef = useRef<HTMLDivElement>(null);\\n  const [count, setCount] = useState(2);\\n  const list = Array.from(Array(count).keys());\\n\\n  useFocusVisible({ scope: focusVisibleRef });\\n\\n  return (\\n    <div ref={focusVisibleRef} style={{ margin: \'2px\' }}>\\n      <button onClick={() => setCount(count + 1)}>Add children</button>\\n      <Content>\\n        {list.map((n: number) => (\\n          <div key={n}>{n + 1}) Turnip greens ricebean</div>\\n        ))}\\n      </Content>\\n    </div>\\n  );\\n};\\n\\nContent.displayName = \'Content\';\\n\\nContainer.storyName = \'ScrollRegionContainer\';\\n\\nHook.storyName = \'useScrollRegion\';\\n\\nAdvanced.storyName = \'advanced scroll region\';\\n\\nAdvanced.parameters = {\\n  docs: {\\n    description: {\\n      story: `This example demonstrates a scroll region with multiple dependencies that change the region\'s layout.\\n      In this example, \\\\`children\\\\` and \\\\`hasPadding\\\\` can cause overflow. These values need be memozied as an array and then passed to the\\n      \\\\`useScrollRegion\\\\`\'s \\\\`dependency\\\\` option.`\\n    }\\n  }\\n};\\n\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`useScrollRegion\\\\` hook implements a scroll region.`\\n    }\\n  }\\n};\\n\\nexport default {\\n  title: \'ScrollRegion Container\',\\n  component: ScrollRegionContainer,\\n  parameters: {\\n    layout: \'centered\',\\n    componentSubtitle: `A container component which wraps the useScrollRegion hook.`\\n  }\\n};\\n","locationsMap":{"container":{"startLoc":{"col":25,"line":28},"endLoc":{"col":1,"line":58},"startBody":{"col":25,"line":28},"endBody":{"col":1,"line":58}},"hook":{"startLoc":{"col":20,"line":60},"endLoc":{"col":1,"line":87},"startBody":{"col":20,"line":60},"endBody":{"col":1,"line":87}},"advanced":{"startLoc":{"col":24,"line":120},"endLoc":{"col":1,"line":137},"startBody":{"col":24,"line":120},"endBody":{"col":1,"line":137}}}},\n    layout: \'centered\',\n    componentSubtitle: `A container component which wraps the useScrollRegion hook.`\n  },};\n',locationsMap:{container:{startLoc:{col:25,line:36},endLoc:{col:1,line:66},startBody:{col:25,line:36},endBody:{col:1,line:66}},hook:{startLoc:{col:20,line:68},endLoc:{col:1,line:95},startBody:{col:20,line:68},endBody:{col:1,line:95}},advanced:{startLoc:{col:24,line:128},endLoc:{col:1,line:145},startBody:{col:24,line:128},endBody:{col:1,line:145}}}}},_parameters.storySource={source:"/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React, { useRef, useState, useMemo, forwardRef, HTMLAttributes } from 'react';\nimport styled from 'styled-components';\nimport mergeRefs from 'react-merge-refs';\nimport { useFocusVisible } from '@zendeskgarden/container-focusvisible';\nimport { ScrollRegionContainer, useScrollRegion } from './src';\n\nconst StyledCustomFocus = styled.div`\n  height: 200px;\n  width: 300px;\n  overflow-y: auto;\n\n  :focus {\n    outline: none;\n  }\n\n  &[data-garden-focus-visible] {\n    outline: 2px dashed red;\n  }\n`;\n\nexport const Container = () => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const focusVisibleRef = useRef<HTMLDivElement>(null);\n  const [overflow, setOverflow] = useState(false);\n\n  useFocusVisible({ scope: focusVisibleRef });\n\n  return (\n    <ScrollRegionContainer containerRef={containerRef} dependency={overflow}>\n      {containerTabIndex => (\n        <div ref={focusVisibleRef} style={{ margin: '2px' }}>\n          <input\n            type=\"checkbox\"\n            id=\"container-toggle\"\n            onChange={e => setOverflow(e.target.checked)}\n            style={{ margin: '4px' }}\n          />\n          <label htmlFor=\"container-toggle\">Toggle overflow</label>\n          <StyledCustomFocus ref={containerRef} tabIndex={containerTabIndex}>\n            <p style={{ lineHeight: overflow ? '32px' : 'initial' }}>\n              Turnip greens yarrow ricebean rutabaga endive cauliflower sea lettuce kohlrabi\n              amaranth water spinach avocado daikon napa cabbage asparagus winter purslane kale.\n              Celery potato scallion desert raisin horseradish spinach carrot soko. Lotus root water\n              spinach fennel kombu maize bamboo shoot green bean swiss chard seakale pumpkin.\n            </p>\n          </StyledCustomFocus>\n        </div>\n      )}\n    </ScrollRegionContainer>\n  );\n};\n\nexport const Hook = () => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const focusVisibleRef = useRef<HTMLDivElement>(null);\n  const [overflow, setOverflow] = useState(false);\n  const containerTabIndex = useScrollRegion({ containerRef, dependency: overflow });\n\n  useFocusVisible({ scope: focusVisibleRef });\n\n  return (\n    <div ref={focusVisibleRef} style={{ margin: '2px' }}>\n      <input\n        type=\"checkbox\"\n        id=\"hook-toggle\"\n        onChange={e => setOverflow(e.target.checked)}\n        style={{ margin: '4px' }}\n      />\n      <label htmlFor=\"hook-toggle\">Toggle overflow</label>\n      <StyledCustomFocus ref={containerRef} tabIndex={containerTabIndex}>\n        <p style={{ lineHeight: overflow ? '32px' : 'initial' }}>\n          Turnip greens yarrow ricebean rutabaga endive cauliflower sea lettuce kohlrabi amaranth\n          water spinach avocado daikon napa cabbage asparagus winter purslane kale. Celery potato\n          scallion desert raisin horseradish spinach carrot soko. Lotus root water spinach fennel\n          kombu maize bamboo shoot green bean swiss chard seakale pumpkin.\n        </p>\n      </StyledCustomFocus>\n    </div>\n  );\n};\n\nconst Content = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(({ ...props }, ref) => {\n  const [hasPadding, setHasPadding] = useState(false);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const mergedRefs = mergeRefs([ref, containerRef]);\n\n  const dependency = useMemo(() => {\n    return [hasPadding, props.children];\n  }, [hasPadding, props.children]);\n\n  const containerTabIndex = useScrollRegion({ containerRef, dependency });\n\n  return (\n    <>\n      <input\n        type=\"checkbox\"\n        id=\"padding-toggle\"\n        style={{ margin: '12px 8px' }}\n        onChange={e => setHasPadding(e.target.checked)}\n      />\n      <label htmlFor=\"padding-toggle\">Toggle padding</label>\n      <StyledCustomFocus\n        ref={mergedRefs}\n        tabIndex={containerTabIndex}\n        style={{ height: 50, width: 200, border: '1px solid #000' }}\n      >\n        <div style={{ padding: hasPadding ? '18px 12px' : 0 }}>{props.children}</div>\n      </StyledCustomFocus>\n    </>\n  );\n});\n\nexport const Advanced = () => {\n  const focusVisibleRef = useRef<HTMLDivElement>(null);\n  const [count, setCount] = useState(2);\n  const list = Array.from(Array(count).keys());\n\n  useFocusVisible({ scope: focusVisibleRef });\n\n  return (\n    <div ref={focusVisibleRef} style={{ margin: '2px' }}>\n      <button onClick={() => setCount(count + 1)}>Add children</button>\n      <Content>\n        {list.map((n: number) => (\n          <div key={n}>{n + 1}) Turnip greens ricebean</div>\n        ))}\n      </Content>\n    </div>\n  );\n};\n\nContent.displayName = 'Content';\n\nContainer.storyName = 'ScrollRegionContainer';\n\nHook.storyName = 'useScrollRegion';\n\nAdvanced.storyName = 'advanced scroll region';\n\nAdvanced.parameters = {\n  docs: {\n    description: {\n      story: `This example demonstrates a scroll region with multiple dependencies that change the region's layout.\n      In this example, \\`children\\` and \\`hasPadding\\` can cause overflow. These values need be memozied as an array and then passed to the\n      \\`useScrollRegion\\`'s \\`dependency\\` option.`\n    }\n  }\n};\n\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`useScrollRegion\\` hook implements a scroll region.`\n    }\n  }\n};\n\nexport default {\n  title: 'ScrollRegion Container',\n  component: ScrollRegionContainer,\n  parameters: {\n    layout: 'centered',\n    componentSubtitle: `A container component which wraps the useScrollRegion hook.`\n  }\n};\n",locationsMap:{container:{startLoc:{col:25,line:28},endLoc:{col:1,line:58},startBody:{col:25,line:28},endBody:{col:1,line:58}},hook:{startLoc:{col:20,line:60},endLoc:{col:1,line:87},startBody:{col:20,line:60},endBody:{col:1,line:87}},advanced:{startLoc:{col:24,line:120},endLoc:{col:1,line:137},startBody:{col:24,line:120},endBody:{col:1,line:137}}}},_parameters.layout="centered",_parameters.componentSubtitle="A container component which wraps the useScrollRegion hook.",_parameters)};scrollregion_stories_Container.parameters=Object(esm_extends.a)({storySource:{source:"() => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const focusVisibleRef = useRef<HTMLDivElement>(null);\n  const [overflow, setOverflow] = useState(false);\n\n  useFocusVisible({ scope: focusVisibleRef });\n\n  return (\n    <ScrollRegionContainer containerRef={containerRef} dependency={overflow}>\n      {containerTabIndex => (\n        <div ref={focusVisibleRef} style={{ margin: '2px' }}>\n          <input\n            type=\"checkbox\"\n            id=\"container-toggle\"\n            onChange={e => setOverflow(e.target.checked)}\n            style={{ margin: '4px' }}\n          />\n          <label htmlFor=\"container-toggle\">Toggle overflow</label>\n          <StyledCustomFocus ref={containerRef} tabIndex={containerTabIndex}>\n            <p style={{ lineHeight: overflow ? '32px' : 'initial' }}>\n              Turnip greens yarrow ricebean rutabaga endive cauliflower sea lettuce kohlrabi\n              amaranth water spinach avocado daikon napa cabbage asparagus winter purslane kale.\n              Celery potato scallion desert raisin horseradish spinach carrot soko. Lotus root water\n              spinach fennel kombu maize bamboo shoot green bean swiss chard seakale pumpkin.\n            </p>\n          </StyledCustomFocus>\n        </div>\n      )}\n    </ScrollRegionContainer>\n  );\n}"}},scrollregion_stories_Container.parameters),scrollregion_stories_Hook.parameters=Object(esm_extends.a)({storySource:{source:"() => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const focusVisibleRef = useRef<HTMLDivElement>(null);\n  const [overflow, setOverflow] = useState(false);\n  const containerTabIndex = useScrollRegion({ containerRef, dependency: overflow });\n\n  useFocusVisible({ scope: focusVisibleRef });\n\n  return (\n    <div ref={focusVisibleRef} style={{ margin: '2px' }}>\n      <input\n        type=\"checkbox\"\n        id=\"hook-toggle\"\n        onChange={e => setOverflow(e.target.checked)}\n        style={{ margin: '4px' }}\n      />\n      <label htmlFor=\"hook-toggle\">Toggle overflow</label>\n      <StyledCustomFocus ref={containerRef} tabIndex={containerTabIndex}>\n        <p style={{ lineHeight: overflow ? '32px' : 'initial' }}>\n          Turnip greens yarrow ricebean rutabaga endive cauliflower sea lettuce kohlrabi amaranth\n          water spinach avocado daikon napa cabbage asparagus winter purslane kale. Celery potato\n          scallion desert raisin horseradish spinach carrot soko. Lotus root water spinach fennel\n          kombu maize bamboo shoot green bean swiss chard seakale pumpkin.\n        </p>\n      </StyledCustomFocus>\n    </div>\n  );\n}"}},scrollregion_stories_Hook.parameters),scrollregion_stories_Advanced.parameters=Object(esm_extends.a)({storySource:{source:"() => {\n  const focusVisibleRef = useRef<HTMLDivElement>(null);\n  const [count, setCount] = useState(2);\n  const list = Array.from(Array(count).keys());\n\n  useFocusVisible({ scope: focusVisibleRef });\n\n  return (\n    <div ref={focusVisibleRef} style={{ margin: '2px' }}>\n      <button onClick={() => setCount(count + 1)}>Add children</button>\n      <Content>\n        {list.map((n: number) => (\n          <div key={n}>{n + 1}) Turnip greens ricebean</div>\n        ))}\n      </Content>\n    </div>\n  );\n}"}},scrollregion_stories_Advanced.parameters)},2906:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Container",(function(){return tabs_stories_Container})),__webpack_require__.d(__webpack_exports__,"Hook",(function(){return tabs_stories_Hook}));__webpack_require__(290),__webpack_require__(753);var esm_extends=__webpack_require__(294),react=__webpack_require__(0),react_default=__webpack_require__.n(react),objectWithoutPropertiesLoose=__webpack_require__(347),prop_types=__webpack_require__(2),prop_types_default=__webpack_require__.n(prop_types),hooks=__webpack_require__(2934),index_esm=__webpack_require__(418),_excluded=["vertical","idPrefix"],_excluded2=["role"],_excluded3=["role","index"],_excluded4=["role","index","item"];function requiredArguments(arg,argStr,methodName){if(null==arg)throw new Error('Accessibility Error: You must provide an "'+argStr+'" option to "'+methodName+'()"')}function useTabs(_temp){var _ref=void 0===_temp?{}:_temp,vertical=_ref.vertical,idPrefix=_ref.idPrefix,options=Object(objectWithoutPropertiesLoose.a)(_ref,_excluded),_useSelection=Object(index_esm.a)(Object(esm_extends.a)({direction:vertical?"vertical":"horizontal",defaultSelectedIndex:0},options)),selectedItem=_useSelection.selectedItem,focusedItem=_useSelection.focusedItem,getContainerProps=_useSelection.getContainerProps,getItemProps=_useSelection.getItemProps,seed=Object(hooks.a)(),_id=Object(react.useState)(idPrefix||seed("tabs_storybook"))[0],PANEL_ID=_id+"--panel",TAB_ID=_id+"--tab";return{selectedItem:selectedItem,focusedItem:focusedItem,getTabPanelProps:function getTabPanelProps(_temp4){var _ref4=void 0===_temp4?{}:_temp4,_ref4$role=_ref4.role,role=void 0===_ref4$role?"tabpanel":_ref4$role,index=_ref4.index,item=_ref4.item,other=Object(objectWithoutPropertiesLoose.a)(_ref4,_excluded4);requiredArguments(index,"index","getTabPanelProps"),requiredArguments(item,"item","getTabPanelProps");var isHidden=item!==selectedItem;return Object(esm_extends.a)({role:role,id:PANEL_ID+":"+index,hidden:isHidden,"aria-labelledby":TAB_ID+":"+index},other)},getTabListProps:function getTabListProps(props){return getContainerProps(function getTabListProps(_temp2){var _ref2=void 0===_temp2?{}:_temp2,_ref2$role=_ref2.role,role=void 0===_ref2$role?"tablist":_ref2$role,other=Object(objectWithoutPropertiesLoose.a)(_ref2,_excluded2);return Object(esm_extends.a)({role:role,"aria-orientation":vertical?"vertical":"horizontal","data-garden-container-id":"containers.tabs","data-garden-container-version":"storybook"},other)}(props))},getTabProps:function getTabProps(props){return getItemProps(function getTabProps(_temp3){var _ref3=void 0===_temp3?{}:_temp3,_ref3$role=_ref3.role,role=void 0===_ref3$role?"tab":_ref3$role,index=_ref3.index,other=Object(objectWithoutPropertiesLoose.a)(_ref3,_excluded3);return requiredArguments(index,"index","getTabProps"),Object(esm_extends.a)({id:TAB_ID+":"+index,"aria-controls":PANEL_ID+":"+index,role:role},other)}(props),"getTabProps")}}}var _parameters,TabsContainer_excluded=["children","render"],TabsContainer_TabsContainer=function TabsContainer(_ref){var children=_ref.children,_ref$render=_ref.render,render=void 0===_ref$render?children:_ref$render,options=Object(objectWithoutPropertiesLoose.a)(_ref,TabsContainer_excluded);return react_default.a.createElement(react_default.a.Fragment,null,render(useTabs(options)))};TabsContainer_TabsContainer.propTypes={children:prop_types_default.a.func,render:prop_types_default.a.func,vertical:prop_types_default.a.bool,idPrefix:prop_types_default.a.string,defaultSelectedIndex:prop_types_default.a.number,onSelect:prop_types_default.a.func};try{TabsContainer_TabsContainer.displayName="TabsContainer",TabsContainer_TabsContainer.__docgenInfo={description:"",displayName:"TabsContainer",props:{render:{defaultValue:null,description:"A render prop function",name:"render",required:!1,type:{name:"((options: IUseTabsReturnValue<any>) => ReactNode)"}},children:{defaultValue:null,description:"A children render prop function",name:"children",required:!1,type:{name:"(((options: IUseTabsReturnValue<any>) => ReactNode) & (boolean | ReactChild | ReactFragment | ReactPortal | null))"}},vertical:{defaultValue:null,description:"Determines the orientation of the tabs",name:"vertical",required:!1,type:{name:"boolean"}},idPrefix:{defaultValue:null,description:"Prefix used for generating tab element IDs",name:"idPrefix",required:!1,type:{name:"string"}},direction:{defaultValue:null,description:"Determines the orientation of the selection",name:"direction",required:!1,type:{name:"enum",value:[{value:'"vertical"'},{value:'"horizontal"'},{value:'"both"'}]}},defaultFocusedIndex:{defaultValue:null,description:"Sets the initial focused item",name:"defaultFocusedIndex",required:!1,type:{name:"number"}},defaultSelectedIndex:{defaultValue:null,description:"Sets the initial selected item",name:"defaultSelectedIndex",required:!1,type:{name:"number"}},rtl:{defaultValue:null,description:"Determines if selection uses right-to-left writing direction",name:"rtl",required:!1,type:{name:"boolean"}},selectedItem:{defaultValue:null,description:"Sets the selected item in a controlled selection",name:"selectedItem",required:!1,type:{name:"any"}},focusedItem:{defaultValue:null,description:"Sets the focused item in a controlled selection",name:"focusedItem",required:!1,type:{name:"any"}},onSelect:{defaultValue:null,description:"A callback function that receives the selected item",name:"onSelect",required:!1,type:{name:"((selectedItem: any) => void)"}},onFocus:{defaultValue:null,description:"A callback function that receives the focused item",name:"onFocus",required:!1,type:{name:"((focusedItem?: any) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/tabs/src/TabsContainer.tsx#TabsContainer"]={docgenInfo:TabsContainer_TabsContainer.__docgenInfo,name:"TabsContainer",path:"packages/tabs/src/TabsContainer.tsx#TabsContainer"})}catch(__react_docgen_typescript_loader_error){}var tabs=["Tab 1","Tab 2","Tab 3"],tabs_stories_Container=function Container(_ref){var vertical=_ref.vertical,idPrefix=_ref.idPrefix,tabRefs=tabs.map((function(){return Object(react.createRef)()}));return react_default.a.createElement(TabsContainer_TabsContainer,{vertical:vertical,idPrefix:idPrefix},(function(_ref2){var selectedItem=_ref2.selectedItem,getTabProps=_ref2.getTabProps,getTabListProps=_ref2.getTabListProps,getTabPanelProps=_ref2.getTabPanelProps,tabComponents=[],tabPanels=[];return tabs.forEach((function(tab,index){tabComponents.push(react_default.a.createElement("li",getTabProps({item:tab,index:index,focusRef:tabRefs[index],key:tab,style:{padding:"5px 5px 0",borderBottom:!1===vertical?"3px solid "+(tab===selectedItem?"#1f73b7":"transparent"):void 0,borderLeft:vertical?"3px solid "+(tab===selectedItem?"#1f73b7":"transparent"):void 0,color:tab===selectedItem?"#1f73b7":void 0}}),tab)),tabPanels.push(react_default.a.createElement("div",getTabPanelProps({index:index,item:tab,key:tab,style:{padding:!1===vertical?"10px 0":void 0,borderTop:!1===vertical?"1px solid":void 0}}),tab," Content"))})),react_default.a.createElement("div",{style:{display:vertical?"flex":void 0}},react_default.a.createElement("ul",getTabListProps({style:{display:"flex",flexDirection:vertical&&"column"}}),tabComponents),tabPanels)}))},tabs_stories_Hook=function Hook(_ref3){var vertical=_ref3.vertical,idPrefix=_ref3.idPrefix,_useTabs=useTabs({vertical:vertical,idPrefix:idPrefix}),selectedItem=_useTabs.selectedItem,getTabProps=_useTabs.getTabProps,getTabListProps=_useTabs.getTabListProps,getTabPanelProps=_useTabs.getTabPanelProps,tabComponents=[],tabPanels=[],tabRefs=tabs.map((function(){return Object(react.createRef)()}));return tabs.forEach((function(tab,index){tabComponents.push(react_default.a.createElement("li",getTabProps({item:tab,index:index,focusRef:tabRefs[index],key:tab,style:{padding:"5px 5px 0",borderBottom:!1===vertical?"3px solid "+(tab===selectedItem?"#1f73b7":"transparent"):void 0,borderLeft:vertical?"3px solid "+(tab===selectedItem?"#1f73b7":"transparent"):void 0,color:tab===selectedItem?"#1f73b7":void 0}}),tab)),tabPanels.push(react_default.a.createElement("div",getTabPanelProps({index:index,item:tab,key:tab,style:{padding:!1===vertical?"10px 0":void 0,borderTop:!1===vertical?"1px solid":void 0}}),tab," Content"))})),react_default.a.createElement("div",{style:{display:vertical?"flex":void 0}},react_default.a.createElement("ul",getTabListProps({style:{display:"flex",flexDirection:vertical&&"column"}}),tabComponents),tabPanels)};tabs_stories_Container.storyName="TabsContainer",tabs_stories_Container.args={vertical:!1},tabs_stories_Hook.storyName="useTabs",tabs_stories_Hook.args={vertical:!1},tabs_stories_Hook.parameters={docs:{description:{story:"The `useTabs` hook implements the [tabs pattern](https://www.w3.org/TR/wai-aria-practices-1.1/#tabpanel) and can be used to build a tabs component."}}};__webpack_exports__.default={title:"Tabs Container",component:TabsContainer_TabsContainer,parameters:(_parameters={storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React, { createRef } from 'react';\\nimport { TabsContainer, useTabs } from './src';\\n\\nconst tabs = ['Tab 1', 'Tab 2', 'Tab 3'];\\n\\nexport const Container = ({ vertical, idPrefix }) => {\\n  const tabRefs = tabs.map(() => createRef());\\n\\n  return (\\n    <TabsContainer vertical={vertical} idPrefix={idPrefix}>\\n      {({ selectedItem, getTabProps, getTabListProps, getTabPanelProps }) => {\\n        const tabComponents: React.ReactElement[] = [];\\n        const tabPanels: React.ReactElement[] = [];\\n\\n        tabs.forEach((tab, index) => {\\n          tabComponents.push(\\n            <li\\n              {...getTabProps({\\n                item: tab,\\n                index,\\n                focusRef: tabRefs[index],\\n                key: tab,\\n                style: {\\n                  padding: '5px 5px 0',\\n                  borderBottom:\\n                    vertical === false\\n                      ? `3px solid ${tab === selectedItem ? '#1f73b7' : 'transparent'}`\\n                      : undefined,\\n                  borderLeft: vertical\\n                    ? `3px solid ${tab === selectedItem ? '#1f73b7' : 'transparent'}`\\n                    : undefined,\\n                  color: tab === selectedItem ? '#1f73b7' : undefined\\n                }\\n              })}\\n            >\\n              {tab}\\n            </li>\\n          );\\n\\n          tabPanels.push(\\n            <div\\n              {...getTabPanelProps({\\n                index,\\n                item: tab,\\n                key: tab,\\n                style: {\\n                  padding: vertical === false ? '10px 0' : undefined,\\n                  borderTop: vertical === false ? '1px solid' : undefined\\n                }\\n              })}\\n            >\\n              {tab} Content\\n            </div>\\n          );\\n        });\\n\\n        return (\\n          <div style={{ display: vertical ? 'flex' : undefined }}>\\n            <ul\\n              {...getTabListProps({\\n                style: {\\n                  display: 'flex',\\n                  flexDirection: vertical && 'column'\\n                }\\n              })}\\n            >\\n              {tabComponents}\\n            </ul>\\n            {tabPanels}\\n          </div>\\n        );\\n      }}\\n    </TabsContainer>\\n  );\\n};\\n\\nexport const Hook = ({ vertical, idPrefix }) => {\\n  const { selectedItem, getTabProps, getTabListProps, getTabPanelProps } = useTabs<string>({\\n    vertical,\\n    idPrefix\\n  });\\n  const tabComponents: React.ReactElement[] = [];\\n  const tabPanels: React.ReactElement[] = [];\\n  const tabRefs = tabs.map(() => createRef());\\n\\n  tabs.forEach((tab, index) => {\\n    tabComponents.push(\\n      <li\\n        {...getTabProps({\\n          item: tab,\\n          index,\\n          focusRef: tabRefs[index],\\n          key: tab,\\n          style: {\\n            padding: '5px 5px 0',\\n            borderBottom:\\n              vertical === false\\n                ? `3px solid ${tab === selectedItem ? '#1f73b7' : 'transparent'}`\\n                : undefined,\\n            borderLeft: vertical\\n              ? `3px solid ${tab === selectedItem ? '#1f73b7' : 'transparent'}`\\n              : undefined,\\n            color: tab === selectedItem ? '#1f73b7' : undefined\\n          }\\n        })}\\n      >\\n        {tab}\\n      </li>\\n    );\\n\\n    tabPanels.push(\\n      <div\\n        {...getTabPanelProps({\\n          index,\\n          item: tab,\\n          key: tab,\\n          style: {\\n            padding: vertical === false ? '10px 0' : undefined,\\n            borderTop: vertical === false ? '1px solid' : undefined\\n          }\\n        })}\\n      >\\n        {tab} Content\\n      </div>\\n    );\\n  });\\n\\n  return (\\n    <div style={{ display: vertical ? 'flex' : undefined }}>\\n      <ul\\n        {...getTabListProps({\\n          style: {\\n            display: 'flex',\\n            flexDirection: vertical && 'column'\\n          }\\n        })}\\n      >\\n        {tabComponents}\\n      </ul>\\n      {tabPanels}\\n    </div>\\n  );\\n};\\n\\nContainer.storyName = 'TabsContainer';\\n\\nContainer.args = {\\n  vertical: false\\n};\\n\\nHook.storyName = 'useTabs';\\n\\nHook.args = {\\n  vertical: false\\n};\\n\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`useTabs\\\\` hook implements the [tabs pattern](https://www.w3.org/TR/wai-aria-practices-1.1/#tabpanel) and can be used to build a tabs component.`\\n    }\\n  }\\n};\\n\\nexport default {\\n  title: 'Tabs Container',\\n  component: TabsContainer,\\n  parameters: {\\n    layout: 'centered',\\n    componentSubtitle: `A container component which wraps the useTabs hook.`\\n  }\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Container\":{\"startLoc\":{\"col\":25,\"line\":13},\"endLoc\":{\"col\":1,\"line\":82},\"startBody\":{\"col\":25,\"line\":13},\"endBody\":{\"col\":1,\"line\":82}},\"Hook\":{\"startLoc\":{\"col\":20,\"line\":84},\"endLoc\":{\"col\":1,\"line\":150},\"startBody\":{\"col\":20,\"line\":84},\"endBody\":{\"col\":1,\"line\":150}}};\n    \n/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React, { createRef } from 'react';\nimport { TabsContainer, useTabs } from './src';\n\nconst tabs = ['Tab 1', 'Tab 2', 'Tab 3'];\n\nexport const Container = ({ vertical, idPrefix }) => {\n  const tabRefs = tabs.map(() => createRef());\n\n  return (\n    <TabsContainer vertical={vertical} idPrefix={idPrefix}>\n      {({ selectedItem, getTabProps, getTabListProps, getTabPanelProps }) => {\n        const tabComponents: React.ReactElement[] = [];\n        const tabPanels: React.ReactElement[] = [];\n\n        tabs.forEach((tab, index) => {\n          tabComponents.push(\n            <li\n              {...getTabProps({\n                item: tab,\n                index,\n                focusRef: tabRefs[index],\n                key: tab,\n                style: {\n                  padding: '5px 5px 0',\n                  borderBottom:\n                    vertical === false\n                      ? `3px solid ${tab === selectedItem ? '#1f73b7' : 'transparent'}`\n                      : undefined,\n                  borderLeft: vertical\n                    ? `3px solid ${tab === selectedItem ? '#1f73b7' : 'transparent'}`\n                    : undefined,\n                  color: tab === selectedItem ? '#1f73b7' : undefined\n                }\n              })}\n            >\n              {tab}\n            </li>\n          );\n\n          tabPanels.push(\n            <div\n              {...getTabPanelProps({\n                index,\n                item: tab,\n                key: tab,\n                style: {\n                  padding: vertical === false ? '10px 0' : undefined,\n                  borderTop: vertical === false ? '1px solid' : undefined\n                }\n              })}\n            >\n              {tab} Content\n            </div>\n          );\n        });\n\n        return (\n          <div style={{ display: vertical ? 'flex' : undefined }}>\n            <ul\n              {...getTabListProps({\n                style: {\n                  display: 'flex',\n                  flexDirection: vertical && 'column'\n                }\n              })}\n            >\n              {tabComponents}\n            </ul>\n            {tabPanels}\n          </div>\n        );\n      }}\n    </TabsContainer>\n  );\n};;\n\nexport const Hook = ({ vertical, idPrefix }) => {\n  const { selectedItem, getTabProps, getTabListProps, getTabPanelProps } = useTabs<string>({\n    vertical,\n    idPrefix\n  });\n  const tabComponents: React.ReactElement[] = [];\n  const tabPanels: React.ReactElement[] = [];\n  const tabRefs = tabs.map(() => createRef());\n\n  tabs.forEach((tab, index) => {\n    tabComponents.push(\n      <li\n        {...getTabProps({\n          item: tab,\n          index,\n          focusRef: tabRefs[index],\n          key: tab,\n          style: {\n            padding: '5px 5px 0',\n            borderBottom:\n              vertical === false\n                ? `3px solid ${tab === selectedItem ? '#1f73b7' : 'transparent'}`\n                : undefined,\n            borderLeft: vertical\n              ? `3px solid ${tab === selectedItem ? '#1f73b7' : 'transparent'}`\n              : undefined,\n            color: tab === selectedItem ? '#1f73b7' : undefined\n          }\n        })}\n      >\n        {tab}\n      </li>\n    );\n\n    tabPanels.push(\n      <div\n        {...getTabPanelProps({\n          index,\n          item: tab,\n          key: tab,\n          style: {\n            padding: vertical === false ? '10px 0' : undefined,\n            borderTop: vertical === false ? '1px solid' : undefined\n          }\n        })}\n      >\n        {tab} Content\n      </div>\n    );\n  });\n\n  return (\n    <div style={{ display: vertical ? 'flex' : undefined }}>\n      <ul\n        {...getTabListProps({\n          style: {\n            display: 'flex',\n            flexDirection: vertical && 'column'\n          }\n        })}\n      >\n        {tabComponents}\n      </ul>\n      {tabPanels}\n    </div>\n  );\n};\n\nContainer.storyName = 'TabsContainer';\n\nContainer.args = {\n  vertical: false\n};\n\nHook.storyName = 'useTabs';\n\nHook.args = {\n  vertical: false\n};\n\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`useTabs\\` hook implements the [tabs pattern](https://www.w3.org/TR/wai-aria-practices-1.1/#tabpanel) and can be used to build a tabs component.`\n    }\n  }\n};\n\nexport default {\n  title: 'Tabs Container',\n  component: TabsContainer,\n  parameters: {\"storySource\":{\"source\":\"/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React, { createRef } from 'react';\\nimport { TabsContainer, useTabs } from './src';\\n\\nconst tabs = ['Tab 1', 'Tab 2', 'Tab 3'];\\n\\nexport const Container = ({ vertical, idPrefix }) => {\\n  const tabRefs = tabs.map(() => createRef());\\n\\n  return (\\n    <TabsContainer vertical={vertical} idPrefix={idPrefix}>\\n      {({ selectedItem, getTabProps, getTabListProps, getTabPanelProps }) => {\\n        const tabComponents: React.ReactElement[] = [];\\n        const tabPanels: React.ReactElement[] = [];\\n\\n        tabs.forEach((tab, index) => {\\n          tabComponents.push(\\n            <li\\n              {...getTabProps({\\n                item: tab,\\n                index,\\n                focusRef: tabRefs[index],\\n                key: tab,\\n                style: {\\n                  padding: '5px 5px 0',\\n                  borderBottom:\\n                    vertical === false\\n                      ? `3px solid ${tab === selectedItem ? '#1f73b7' : 'transparent'}`\\n                      : undefined,\\n                  borderLeft: vertical\\n                    ? `3px solid ${tab === selectedItem ? '#1f73b7' : 'transparent'}`\\n                    : undefined,\\n                  color: tab === selectedItem ? '#1f73b7' : undefined\\n                }\\n              })}\\n            >\\n              {tab}\\n            </li>\\n          );\\n\\n          tabPanels.push(\\n            <div\\n              {...getTabPanelProps({\\n                index,\\n                item: tab,\\n                key: tab,\\n                style: {\\n                  padding: vertical === false ? '10px 0' : undefined,\\n                  borderTop: vertical === false ? '1px solid' : undefined\\n                }\\n              })}\\n            >\\n              {tab} Content\\n            </div>\\n          );\\n        });\\n\\n        return (\\n          <div style={{ display: vertical ? 'flex' : undefined }}>\\n            <ul\\n              {...getTabListProps({\\n                style: {\\n                  display: 'flex',\\n                  flexDirection: vertical && 'column'\\n                }\\n              })}\\n            >\\n              {tabComponents}\\n            </ul>\\n            {tabPanels}\\n          </div>\\n        );\\n      }}\\n    </TabsContainer>\\n  );\\n};\\n\\nexport const Hook = ({ vertical, idPrefix }) => {\\n  const { selectedItem, getTabProps, getTabListProps, getTabPanelProps } = useTabs<string>({\\n    vertical,\\n    idPrefix\\n  });\\n  const tabComponents: React.ReactElement[] = [];\\n  const tabPanels: React.ReactElement[] = [];\\n  const tabRefs = tabs.map(() => createRef());\\n\\n  tabs.forEach((tab, index) => {\\n    tabComponents.push(\\n      <li\\n        {...getTabProps({\\n          item: tab,\\n          index,\\n          focusRef: tabRefs[index],\\n          key: tab,\\n          style: {\\n            padding: '5px 5px 0',\\n            borderBottom:\\n              vertical === false\\n                ? `3px solid ${tab === selectedItem ? '#1f73b7' : 'transparent'}`\\n                : undefined,\\n            borderLeft: vertical\\n              ? `3px solid ${tab === selectedItem ? '#1f73b7' : 'transparent'}`\\n              : undefined,\\n            color: tab === selectedItem ? '#1f73b7' : undefined\\n          }\\n        })}\\n      >\\n        {tab}\\n      </li>\\n    );\\n\\n    tabPanels.push(\\n      <div\\n        {...getTabPanelProps({\\n          index,\\n          item: tab,\\n          key: tab,\\n          style: {\\n            padding: vertical === false ? '10px 0' : undefined,\\n            borderTop: vertical === false ? '1px solid' : undefined\\n          }\\n        })}\\n      >\\n        {tab} Content\\n      </div>\\n    );\\n  });\\n\\n  return (\\n    <div style={{ display: vertical ? 'flex' : undefined }}>\\n      <ul\\n        {...getTabListProps({\\n          style: {\\n            display: 'flex',\\n            flexDirection: vertical && 'column'\\n          }\\n        })}\\n      >\\n        {tabComponents}\\n      </ul>\\n      {tabPanels}\\n    </div>\\n  );\\n};\\n\\nContainer.storyName = 'TabsContainer';\\n\\nContainer.args = {\\n  vertical: false\\n};\\n\\nHook.storyName = 'useTabs';\\n\\nHook.args = {\\n  vertical: false\\n};\\n\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`useTabs\\\\` hook implements the [tabs pattern](https://www.w3.org/TR/wai-aria-practices-1.1/#tabpanel) and can be used to build a tabs component.`\\n    }\\n  }\\n};\\n\\nexport default {\\n  title: 'Tabs Container',\\n  component: TabsContainer,\\n  parameters: {\\n    layout: 'centered',\\n    componentSubtitle: `A container component which wraps the useTabs hook.`\\n  }\\n};\\n\",\"locationsMap\":{\"container\":{\"startLoc\":{\"col\":25,\"line\":13},\"endLoc\":{\"col\":1,\"line\":82},\"startBody\":{\"col\":25,\"line\":13},\"endBody\":{\"col\":1,\"line\":82}},\"hook\":{\"startLoc\":{\"col\":20,\"line\":84},\"endLoc\":{\"col\":1,\"line\":150},\"startBody\":{\"col\":20,\"line\":84},\"endBody\":{\"col\":1,\"line\":150}}}},\n    layout: 'centered',\n    componentSubtitle: `A container component which wraps the useTabs hook.`\n  },};\n",locationsMap:{container:{startLoc:{col:25,line:21},endLoc:{col:1,line:90},startBody:{col:25,line:21},endBody:{col:1,line:90}},hook:{startLoc:{col:20,line:92},endLoc:{col:1,line:158},startBody:{col:20,line:92},endBody:{col:1,line:158}}}}},_parameters.storySource={source:"/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React, { createRef } from 'react';\nimport { TabsContainer, useTabs } from './src';\n\nconst tabs = ['Tab 1', 'Tab 2', 'Tab 3'];\n\nexport const Container = ({ vertical, idPrefix }) => {\n  const tabRefs = tabs.map(() => createRef());\n\n  return (\n    <TabsContainer vertical={vertical} idPrefix={idPrefix}>\n      {({ selectedItem, getTabProps, getTabListProps, getTabPanelProps }) => {\n        const tabComponents: React.ReactElement[] = [];\n        const tabPanels: React.ReactElement[] = [];\n\n        tabs.forEach((tab, index) => {\n          tabComponents.push(\n            <li\n              {...getTabProps({\n                item: tab,\n                index,\n                focusRef: tabRefs[index],\n                key: tab,\n                style: {\n                  padding: '5px 5px 0',\n                  borderBottom:\n                    vertical === false\n                      ? `3px solid ${tab === selectedItem ? '#1f73b7' : 'transparent'}`\n                      : undefined,\n                  borderLeft: vertical\n                    ? `3px solid ${tab === selectedItem ? '#1f73b7' : 'transparent'}`\n                    : undefined,\n                  color: tab === selectedItem ? '#1f73b7' : undefined\n                }\n              })}\n            >\n              {tab}\n            </li>\n          );\n\n          tabPanels.push(\n            <div\n              {...getTabPanelProps({\n                index,\n                item: tab,\n                key: tab,\n                style: {\n                  padding: vertical === false ? '10px 0' : undefined,\n                  borderTop: vertical === false ? '1px solid' : undefined\n                }\n              })}\n            >\n              {tab} Content\n            </div>\n          );\n        });\n\n        return (\n          <div style={{ display: vertical ? 'flex' : undefined }}>\n            <ul\n              {...getTabListProps({\n                style: {\n                  display: 'flex',\n                  flexDirection: vertical && 'column'\n                }\n              })}\n            >\n              {tabComponents}\n            </ul>\n            {tabPanels}\n          </div>\n        );\n      }}\n    </TabsContainer>\n  );\n};\n\nexport const Hook = ({ vertical, idPrefix }) => {\n  const { selectedItem, getTabProps, getTabListProps, getTabPanelProps } = useTabs<string>({\n    vertical,\n    idPrefix\n  });\n  const tabComponents: React.ReactElement[] = [];\n  const tabPanels: React.ReactElement[] = [];\n  const tabRefs = tabs.map(() => createRef());\n\n  tabs.forEach((tab, index) => {\n    tabComponents.push(\n      <li\n        {...getTabProps({\n          item: tab,\n          index,\n          focusRef: tabRefs[index],\n          key: tab,\n          style: {\n            padding: '5px 5px 0',\n            borderBottom:\n              vertical === false\n                ? `3px solid ${tab === selectedItem ? '#1f73b7' : 'transparent'}`\n                : undefined,\n            borderLeft: vertical\n              ? `3px solid ${tab === selectedItem ? '#1f73b7' : 'transparent'}`\n              : undefined,\n            color: tab === selectedItem ? '#1f73b7' : undefined\n          }\n        })}\n      >\n        {tab}\n      </li>\n    );\n\n    tabPanels.push(\n      <div\n        {...getTabPanelProps({\n          index,\n          item: tab,\n          key: tab,\n          style: {\n            padding: vertical === false ? '10px 0' : undefined,\n            borderTop: vertical === false ? '1px solid' : undefined\n          }\n        })}\n      >\n        {tab} Content\n      </div>\n    );\n  });\n\n  return (\n    <div style={{ display: vertical ? 'flex' : undefined }}>\n      <ul\n        {...getTabListProps({\n          style: {\n            display: 'flex',\n            flexDirection: vertical && 'column'\n          }\n        })}\n      >\n        {tabComponents}\n      </ul>\n      {tabPanels}\n    </div>\n  );\n};\n\nContainer.storyName = 'TabsContainer';\n\nContainer.args = {\n  vertical: false\n};\n\nHook.storyName = 'useTabs';\n\nHook.args = {\n  vertical: false\n};\n\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`useTabs\\` hook implements the [tabs pattern](https://www.w3.org/TR/wai-aria-practices-1.1/#tabpanel) and can be used to build a tabs component.`\n    }\n  }\n};\n\nexport default {\n  title: 'Tabs Container',\n  component: TabsContainer,\n  parameters: {\n    layout: 'centered',\n    componentSubtitle: `A container component which wraps the useTabs hook.`\n  }\n};\n",locationsMap:{container:{startLoc:{col:25,line:13},endLoc:{col:1,line:82},startBody:{col:25,line:13},endBody:{col:1,line:82}},hook:{startLoc:{col:20,line:84},endLoc:{col:1,line:150},startBody:{col:20,line:84},endBody:{col:1,line:150}}}},_parameters.layout="centered",_parameters.componentSubtitle="A container component which wraps the useTabs hook.",_parameters)};tabs_stories_Container.parameters=Object(esm_extends.a)({storySource:{source:"({ vertical, idPrefix }) => {\n  const tabRefs = tabs.map(() => createRef());\n\n  return (\n    <TabsContainer vertical={vertical} idPrefix={idPrefix}>\n      {({ selectedItem, getTabProps, getTabListProps, getTabPanelProps }) => {\n        const tabComponents: React.ReactElement[] = [];\n        const tabPanels: React.ReactElement[] = [];\n\n        tabs.forEach((tab, index) => {\n          tabComponents.push(\n            <li\n              {...getTabProps({\n                item: tab,\n                index,\n                focusRef: tabRefs[index],\n                key: tab,\n                style: {\n                  padding: '5px 5px 0',\n                  borderBottom:\n                    vertical === false\n                      ? `3px solid ${tab === selectedItem ? '#1f73b7' : 'transparent'}`\n                      : undefined,\n                  borderLeft: vertical\n                    ? `3px solid ${tab === selectedItem ? '#1f73b7' : 'transparent'}`\n                    : undefined,\n                  color: tab === selectedItem ? '#1f73b7' : undefined\n                }\n              })}\n            >\n              {tab}\n            </li>\n          );\n\n          tabPanels.push(\n            <div\n              {...getTabPanelProps({\n                index,\n                item: tab,\n                key: tab,\n                style: {\n                  padding: vertical === false ? '10px 0' : undefined,\n                  borderTop: vertical === false ? '1px solid' : undefined\n                }\n              })}\n            >\n              {tab} Content\n            </div>\n          );\n        });\n\n        return (\n          <div style={{ display: vertical ? 'flex' : undefined }}>\n            <ul\n              {...getTabListProps({\n                style: {\n                  display: 'flex',\n                  flexDirection: vertical && 'column'\n                }\n              })}\n            >\n              {tabComponents}\n            </ul>\n            {tabPanels}\n          </div>\n        );\n      }}\n    </TabsContainer>\n  );\n}"}},tabs_stories_Container.parameters),tabs_stories_Hook.parameters=Object(esm_extends.a)({storySource:{source:"({ vertical, idPrefix }) => {\n  const { selectedItem, getTabProps, getTabListProps, getTabPanelProps } = useTabs<string>({\n    vertical,\n    idPrefix\n  });\n  const tabComponents: React.ReactElement[] = [];\n  const tabPanels: React.ReactElement[] = [];\n  const tabRefs = tabs.map(() => createRef());\n\n  tabs.forEach((tab, index) => {\n    tabComponents.push(\n      <li\n        {...getTabProps({\n          item: tab,\n          index,\n          focusRef: tabRefs[index],\n          key: tab,\n          style: {\n            padding: '5px 5px 0',\n            borderBottom:\n              vertical === false\n                ? `3px solid ${tab === selectedItem ? '#1f73b7' : 'transparent'}`\n                : undefined,\n            borderLeft: vertical\n              ? `3px solid ${tab === selectedItem ? '#1f73b7' : 'transparent'}`\n              : undefined,\n            color: tab === selectedItem ? '#1f73b7' : undefined\n          }\n        })}\n      >\n        {tab}\n      </li>\n    );\n\n    tabPanels.push(\n      <div\n        {...getTabPanelProps({\n          index,\n          item: tab,\n          key: tab,\n          style: {\n            padding: vertical === false ? '10px 0' : undefined,\n            borderTop: vertical === false ? '1px solid' : undefined\n          }\n        })}\n      >\n        {tab} Content\n      </div>\n    );\n  });\n\n  return (\n    <div style={{ display: vertical ? 'flex' : undefined }}>\n      <ul\n        {...getTabListProps({\n          style: {\n            display: 'flex',\n            flexDirection: vertical && 'column'\n          }\n        })}\n      >\n        {tabComponents}\n      </ul>\n      {tabPanels}\n    </div>\n  );\n}"}},tabs_stories_Hook.parameters);try{tabs_stories_Container.displayName="Container",tabs_stories_Container.__docgenInfo={description:"",displayName:"Container",props:{vertical:{defaultValue:null,description:"",name:"vertical",required:!0,type:{name:"any"}},idPrefix:{defaultValue:null,description:"",name:"idPrefix",required:!0,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/tabs/tabs.stories.tsx#Container"]={docgenInfo:tabs_stories_Container.__docgenInfo,name:"Container",path:"packages/tabs/tabs.stories.tsx#Container"})}catch(__react_docgen_typescript_loader_error){}try{tabs_stories_Hook.displayName="Hook",tabs_stories_Hook.__docgenInfo={description:"",displayName:"Hook",props:{vertical:{defaultValue:null,description:"",name:"vertical",required:!0,type:{name:"any"}},idPrefix:{defaultValue:null,description:"",name:"idPrefix",required:!0,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/tabs/tabs.stories.tsx#Hook"]={docgenInfo:tabs_stories_Hook.__docgenInfo,name:"Hook",path:"packages/tabs/tabs.stories.tsx#Hook"})}catch(__react_docgen_typescript_loader_error){}},2908:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,"decorators",(function(){return decorators})),__webpack_require__.d(preview_namespaceObject,"parameters",(function(){return parameters}));__webpack_require__(1121),__webpack_require__(2854),__webpack_require__(2857),__webpack_require__(2858),__webpack_require__(753),__webpack_require__(1714),__webpack_require__(2859),__webpack_require__(2860),__webpack_require__(1622);var client_api=__webpack_require__(174),types=__webpack_require__(1758),esm=__webpack_require__(6),create=(__webpack_require__(0),__webpack_require__(1747)),index_esm=__webpack_require__(1131),jsx_runtime=__webpack_require__(775),decorators=[function(Story){return Object(jsx_runtime.jsx)("div",{style:{display:"flex",alignItems:"center",overflow:"auto"},children:Object(jsx_runtime.jsx)("div",{style:{margin:"auto",maxHeight:"100%"},children:Object(jsx_runtime.jsx)(Story,{})})})}],parameters={backgrounds:{default:index_esm.a.colors.base,grid:{disable:!0}},docs:{theme:Object(create.create)({base:index_esm.a.colors.base})}};function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":case"argTypes":return esm.logger.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify(value));case"decorators":return value.forEach((function(decorator){return Object(client_api.c)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return Object(client_api.d)(loader,!1)}));case"parameters":return Object(client_api.e)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return Object(client_api.a)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return Object(client_api.b)(enhancer)}));case"render":return Object(types.setGlobalRender)(value);case"globals":case"globalTypes":var v={};return v[key]=value,Object(client_api.e)(v,!1);default:return console.log(key+" was not supported :( !")}}))},418:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return useSelection}));__webpack_require__(1121),__webpack_require__(550),__webpack_require__(1717);var react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__),_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(10),prop_types__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(2),prop_types__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_5__);function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}var _excluded$1=["role"],_excluded2=["selectedAriaKey","role","onFocus","onKeyDown","onClick","item","focusRef","refKey"];function stateReducer(state,action){switch(action.type){case"END":case"HOME":case"FOCUS":case"INCREMENT":case"DECREMENT":return _extends({},state,{focusedItem:action.payload});case"MOUSE_SELECT":return _extends({},state,{selectedItem:action.payload,focusedItem:void 0});case"KEYBOARD_SELECT":return _extends({},state,{selectedItem:action.payload});case"EXIT_WIDGET":return _extends({},state,{focusedItem:void 0});default:return state}}function useSelection(_temp){var _ref=void 0===_temp?{}:_temp,_ref$direction=_ref.direction,direction=void 0===_ref$direction?"horizontal":_ref$direction,_ref$defaultFocusedIn=_ref.defaultFocusedIndex,defaultFocusedIndex=void 0===_ref$defaultFocusedIn?0:_ref$defaultFocusedIn,defaultSelectedIndex=_ref.defaultSelectedIndex,rtl=_ref.rtl,selectedItem=_ref.selectedItem,focusedItem=_ref.focusedItem,onSelect=_ref.onSelect,onFocus=_ref.onFocus,isSelectedItemControlled=void 0!==selectedItem,isFocusedItemControlled=void 0!==focusedItem,refs=[],items=[],_useReducer=Object(react__WEBPACK_IMPORTED_MODULE_3__.useReducer)(stateReducer,{selectedItem:selectedItem,focusedItem:focusedItem}),state=_useReducer[0],dispatch=_useReducer[1],controlledFocusedItem=Object(_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_4__.c)(focusedItem,state.focusedItem),controlledSelectedItem=Object(_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_4__.c)(selectedItem,state.selectedItem);Object(react__WEBPACK_IMPORTED_MODULE_3__.useEffect)((function(){if(void 0!==controlledFocusedItem){var focusedIndex=items.indexOf(controlledFocusedItem);refs[focusedIndex]&&refs[focusedIndex].current.focus()}}),[controlledFocusedItem]),Object(react__WEBPACK_IMPORTED_MODULE_3__.useEffect)((function(){void 0===selectedItem&&void 0!==defaultSelectedIndex&&(onSelect&&onSelect(items[defaultSelectedIndex]),isSelectedItemControlled||dispatch({type:"KEYBOARD_SELECT",payload:items[defaultSelectedIndex]}))}),[]);return{focusedItem:controlledFocusedItem,selectedItem:controlledSelectedItem,getItemProps:function getItemProps(_temp3,propGetterName){var _extends2,_ref3=void 0===_temp3?{}:_temp3,_ref3$selectedAriaKey=_ref3.selectedAriaKey,selectedAriaKey=void 0===_ref3$selectedAriaKey?"aria-selected":_ref3$selectedAriaKey,_ref3$role=_ref3.role,role=void 0===_ref3$role?"option":_ref3$role,onFocusCallback=_ref3.onFocus,onKeyDown=_ref3.onKeyDown,onClick=_ref3.onClick,item=_ref3.item,focusRef=_ref3.focusRef,_ref3$refKey=_ref3.refKey,refKey=void 0===_ref3$refKey?"ref":_ref3$refKey,other=_objectWithoutPropertiesLoose(_ref3,_excluded2);if(void 0===propGetterName&&(propGetterName="getItemProps"),void 0===item)throw new Error('Accessibility Error: You must provide an "item" option to "'+propGetterName+'()"');if(void 0===focusRef)throw new Error('Accessibility Error: You must provide a "focusRef" option to "'+propGetterName+'()"');refs.push(focusRef),items.push(item);var isSelected=controlledSelectedItem===item,tabIndex=(void 0===controlledFocusedItem?isSelected:controlledFocusedItem===item)||void 0===controlledSelectedItem&&void 0===controlledFocusedItem&&items.indexOf(item)===defaultFocusedIndex?0:-1,verticalDirection="vertical"===direction||"both"===direction,horizontalDirection="horizontal"===direction||"both"===direction;return _extends(((_extends2={role:role,tabIndex:tabIndex})[selectedAriaKey]=selectedAriaKey?isSelected:void 0,_extends2[refKey]=focusRef,_extends2.onFocus=Object(_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_4__.b)(onFocusCallback,(function(){onFocus&&onFocus(item),isFocusedItemControlled||dispatch({type:"FOCUS",payload:item})})),_extends2.onBlur=function onBlur(e){0===e.target.tabIndex&&(isFocusedItemControlled||dispatch({type:"EXIT_WIDGET"}),onFocus&&onFocus())},_extends2.onClick=Object(_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_4__.b)(onClick,(function(){onSelect&&onSelect(item),onFocus&&onFocus(),isSelectedItemControlled||dispatch({type:"MOUSE_SELECT",payload:item})})),_extends2.onKeyDown=Object(_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_4__.b)(onKeyDown,(function(e){var nextIndex,currentIndex;currentIndex=isFocusedItemControlled?items.indexOf(focusedItem):items.indexOf(state.focusedItem||state.selectedItem);var onIncrement=function onIncrement(){nextIndex=currentIndex+1,currentIndex===items.length-1&&(nextIndex=0),!isFocusedItemControlled&&dispatch({type:"INCREMENT",payload:items[nextIndex]}),onFocus&&onFocus(items[nextIndex])},onDecrement=function onDecrement(){nextIndex=currentIndex-1,0===currentIndex&&(nextIndex=items.length-1),!isFocusedItemControlled&&dispatch({type:"DECREMENT",payload:items[nextIndex]}),onFocus&&onFocus(items[nextIndex])};e.ctrlKey||e.metaKey||e.shiftKey||e.altKey||(e.keyCode===_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_4__.a.UP&&verticalDirection||e.keyCode===_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_4__.a.LEFT&&horizontalDirection?(rtl&&!verticalDirection?onIncrement():onDecrement(),e.preventDefault()):e.keyCode===_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_4__.a.DOWN&&verticalDirection||e.keyCode===_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_4__.a.RIGHT&&horizontalDirection?(rtl&&!verticalDirection?onDecrement():onIncrement(),e.preventDefault()):e.keyCode===_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_4__.a.HOME?(isFocusedItemControlled||dispatch({type:"HOME",payload:items[0]}),onFocus&&onFocus(items[0]),e.preventDefault()):e.keyCode===_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_4__.a.END?(isFocusedItemControlled||dispatch({type:"END",payload:items[items.length-1]}),onFocus&&onFocus(items[items.length-1]),e.preventDefault()):e.keyCode!==_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_4__.a.SPACE&&e.keyCode!==_zendeskgarden_container_utilities__WEBPACK_IMPORTED_MODULE_4__.a.ENTER||(onSelect&&onSelect(item),isSelectedItemControlled||dispatch({type:"KEYBOARD_SELECT",payload:item}),e.preventDefault()))})),_extends2),other)},getContainerProps:function getContainerProps(_temp2){var _ref2=void 0===_temp2?{}:_temp2,_ref2$role=_ref2.role;return _extends({role:void 0===_ref2$role?"listbox":_ref2$role,"data-garden-container-id":"containers.selection","data-garden-container-version":"1.3.10"},_objectWithoutPropertiesLoose(_ref2,_excluded$1))}}}var _excluded=["children","render"],SelectionContainer=function SelectionContainer(_ref){var children=_ref.children,_ref$render=_ref.render,render=void 0===_ref$render?children:_ref$render,options=_objectWithoutPropertiesLoose(_ref,_excluded);return react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment,null,render(useSelection(options)))};SelectionContainer.defaultProps={direction:"horizontal",defaultFocusedIndex:0},SelectionContainer.propTypes={children:prop_types__WEBPACK_IMPORTED_MODULE_5___default.a.func,render:prop_types__WEBPACK_IMPORTED_MODULE_5___default.a.func,rtl:prop_types__WEBPACK_IMPORTED_MODULE_5___default.a.bool,direction:prop_types__WEBPACK_IMPORTED_MODULE_5___default.a.oneOf(["horizontal","vertical","both"]),defaultFocusedIndex:prop_types__WEBPACK_IMPORTED_MODULE_5___default.a.number,focusedItem:prop_types__WEBPACK_IMPORTED_MODULE_5___default.a.any,selectedItem:prop_types__WEBPACK_IMPORTED_MODULE_5___default.a.any,onSelect:prop_types__WEBPACK_IMPORTED_MODULE_5___default.a.func,onFocus:prop_types__WEBPACK_IMPORTED_MODULE_5___default.a.func},SelectionContainer.__docgenInfo={description:"",methods:[],displayName:"SelectionContainer",props:{direction:{defaultValue:{value:"'horizontal'",computed:!1},type:{name:"enum",value:[{value:"'horizontal'",computed:!1},{value:"'vertical'",computed:!1},{value:"'both'",computed:!1}]},required:!1,description:""},defaultFocusedIndex:{defaultValue:{value:"0",computed:!1},type:{name:"number"},required:!1,description:""},children:{type:{name:"func"},required:!1,description:""},render:{type:{name:"func"},required:!1,description:""},rtl:{type:{name:"bool"},required:!1,description:""},focusedItem:{type:{name:"any"},required:!1,description:""},selectedItem:{type:{name:"any"},required:!1,description:""},onSelect:{type:{name:"func"},required:!1,description:""},onFocus:{type:{name:"func"},required:!1,description:""}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/selection/dist/index.esm.js"]={name:"SelectionContainer",docgenInfo:SelectionContainer.__docgenInfo,path:"packages/selection/dist/index.esm.js"})},756:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Container",(function(){return selection_stories_Container})),__webpack_require__.d(__webpack_exports__,"Hook",(function(){return selection_stories_Hook}));__webpack_require__(290);var _parameters,esm_extends=__webpack_require__(232),react=__webpack_require__(0),react_default=__webpack_require__.n(react),objectWithoutPropertiesLoose=__webpack_require__(557),prop_types=__webpack_require__(2),prop_types_default=__webpack_require__.n(prop_types),useSelection=__webpack_require__(1749),_excluded=["children","render"],SelectionContainer_SelectionContainer=function SelectionContainer(_ref){var children=_ref.children,_ref$render=_ref.render,render=void 0===_ref$render?children:_ref$render,options=Object(objectWithoutPropertiesLoose.a)(_ref,_excluded);return react_default.a.createElement(react_default.a.Fragment,null,render(Object(useSelection.a)(options)))};SelectionContainer_SelectionContainer.defaultProps={direction:"horizontal",defaultFocusedIndex:0},SelectionContainer_SelectionContainer.propTypes={children:prop_types_default.a.func,render:prop_types_default.a.func,rtl:prop_types_default.a.bool,direction:prop_types_default.a.oneOf(["horizontal","vertical","both"]),defaultFocusedIndex:prop_types_default.a.number,focusedItem:prop_types_default.a.any,selectedItem:prop_types_default.a.any,onSelect:prop_types_default.a.func,onFocus:prop_types_default.a.func};try{SelectionContainer_SelectionContainer.displayName="SelectionContainer",SelectionContainer_SelectionContainer.__docgenInfo={description:"",displayName:"SelectionContainer",props:{render:{defaultValue:null,description:"A render prop function which receives selection state",name:"render",required:!1,type:{name:"((options: UseSelectionReturnValue<any>) => ReactNode)"}},children:{defaultValue:null,description:"A children render prop function which receives selection state",name:"children",required:!1,type:{name:"(((options: UseSelectionReturnValue<any>) => ReactNode) & (boolean | ReactChild | ReactFragment | ReactPortal | null))"}},direction:{defaultValue:{value:"horizontal"},description:"Determines the orientation of the selection",name:"direction",required:!1,type:{name:"enum",value:[{value:'"vertical"'},{value:'"horizontal"'},{value:'"both"'}]}},defaultFocusedIndex:{defaultValue:{value:"0"},description:"Sets the initial focused item",name:"defaultFocusedIndex",required:!1,type:{name:"number"}},defaultSelectedIndex:{defaultValue:null,description:"Sets the initial selected item",name:"defaultSelectedIndex",required:!1,type:{name:"number"}},rtl:{defaultValue:null,description:"Determines if selection uses right-to-left writing direction",name:"rtl",required:!1,type:{name:"boolean"}},selectedItem:{defaultValue:null,description:"Sets the selected item in a controlled selection",name:"selectedItem",required:!1,type:{name:"any"}},focusedItem:{defaultValue:null,description:"Sets the focused item in a controlled selection",name:"focusedItem",required:!1,type:{name:"any"}},onSelect:{defaultValue:null,description:"A callback function that receives the selected item",name:"onSelect",required:!1,type:{name:"((selectedItem: any) => void)"}},onFocus:{defaultValue:null,description:"A callback function that receives the focused item",name:"onFocus",required:!1,type:{name:"((focusedItem?: any) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/selection/src/SelectionContainer.tsx#SelectionContainer"]={docgenInfo:SelectionContainer_SelectionContainer.__docgenInfo,name:"SelectionContainer",path:"packages/selection/src/SelectionContainer.tsx#SelectionContainer"})}catch(__react_docgen_typescript_loader_error){}var selection_stories_Container=function Container(_ref){var defaultFocusedIndex=_ref.defaultFocusedIndex,items=["Item 1","Item 2","Item 3"];return react_default.a.createElement(SelectionContainer_SelectionContainer,{direction:"vertical",defaultFocusedIndex:defaultFocusedIndex},(function(_ref2){var selectedItem=_ref2.selectedItem,focusedItem=_ref2.focusedItem,getContainerProps=_ref2.getContainerProps,getItemProps=_ref2.getItemProps;return react_default.a.createElement("ul",getContainerProps(),items.map((function(item){var ref=react_default.a.createRef(),isSelected=item===selectedItem,isFocused=item===focusedItem;return react_default.a.createElement("li",getItemProps({key:item,item:item,focusRef:ref}),item,isSelected&&react_default.a.createElement("span",null," - Selected"),isFocused&&react_default.a.createElement("span",null," - Focused"))})))}))},selection_stories_Hook=function Hook(_ref3){var direction=_ref3.direction,defaultSelectedIndex=_ref3.defaultSelectedIndex,rtl=_ref3.rtl,items=["One","Two","Three"],Selection=function Selection(){var _useSelection=Object(useSelection.a)({direction:direction,defaultSelectedIndex:defaultSelectedIndex,rtl:rtl}),focusedItem=_useSelection.focusedItem,selectedItem=_useSelection.selectedItem,getContainerProps=_useSelection.getContainerProps,getItemProps=_useSelection.getItemProps;return react_default.a.createElement("ul",getContainerProps({style:{display:"flex"}}),items.map((function(item){var itemRef=react_default.a.createRef(),isSelected=selectedItem===item,isFocused=focusedItem===item;return react_default.a.createElement("li",getItemProps({key:item,item:item,focusRef:itemRef,style:{listStyle:"none",margin:16,padding:8,textAlign:"center"}}),item,isSelected&&react_default.a.createElement("div",null,"[Selected]"),isFocused&&react_default.a.createElement("div",null,"(Focused)"))})))};return react_default.a.createElement(Selection,null)};selection_stories_Container.storyName="SelectionContainer",selection_stories_Hook.storyName="useSelection",selection_stories_Hook.args={defaultSelectedIndex:0},selection_stories_Hook.parameters={docs:{description:{story:"The `useSelection` hook manages an items focus state including keyboard controls,\n      aria attributes and RTL support. It uses the \n      [roving tab index strategy](https://www.w3.org/TR/wai-aria-practices/#kbd_roving_tabindex)."}}};__webpack_exports__.default={title:"Selection Container",component:SelectionContainer_SelectionContainer,parameters:(_parameters={storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React from \'react\';\\nimport { SelectionContainer, useSelection } from \'./src\';\\n\\nexport const Container = ({ defaultFocusedIndex }) => {\\n  const items = [\'Item 1\', \'Item 2\', \'Item 3\'];\\n\\n  return (\\n    <SelectionContainer direction=\\"vertical\\" defaultFocusedIndex={defaultFocusedIndex}>\\n      {({ selectedItem, focusedItem, getContainerProps, getItemProps }) => (\\n        <ul {...getContainerProps()}>\\n          {items.map(item => {\\n            const ref = React.createRef();\\n            const isSelected = item === selectedItem;\\n            const isFocused = item === focusedItem;\\n\\n            return (\\n              <li\\n                {...getItemProps({\\n                  key: item,\\n                  item,\\n                  focusRef: ref\\n                })}\\n              >\\n                {item}\\n                {isSelected && <span> - Selected</span>}\\n                {isFocused && <span> - Focused</span>}\\n              </li>\\n            );\\n          })}\\n        </ul>\\n      )}\\n    </SelectionContainer>\\n  );\\n};\\n\\nexport const Hook = ({ direction, defaultSelectedIndex, rtl }) => {\\n  const items = [\'One\', \'Two\', \'Three\'];\\n\\n  const Selection = () => {\\n    const { focusedItem, selectedItem, getContainerProps, getItemProps } = useSelection<string>({\\n      direction,\\n      defaultSelectedIndex,\\n      rtl\\n    });\\n\\n    return (\\n      <ul {...getContainerProps({ style: { display: \'flex\' } })}>\\n        {items.map(item => {\\n          const itemRef = React.createRef<HTMLLIElement>();\\n          const isSelected = selectedItem === item;\\n          const isFocused = focusedItem === item;\\n\\n          return (\\n            <li\\n              {...getItemProps({\\n                key: item,\\n                item,\\n                focusRef: itemRef,\\n                style: {\\n                  listStyle: \'none\',\\n                  margin: 16,\\n                  padding: 8,\\n                  textAlign: \'center\'\\n                }\\n              })}\\n            >\\n              {item}\\n              {isSelected && <div>[Selected]</div>}\\n              {isFocused && <div>(Focused)</div>}\\n            </li>\\n          );\\n        })}\\n      </ul>\\n    );\\n  };\\n\\n  return <Selection />;\\n};\\n\\nContainer.storyName = \'SelectionContainer\';\\n\\nHook.storyName = \'useSelection\';\\n\\nHook.args = {\\n  defaultSelectedIndex: 0\\n};\\n\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`useSelection\\\\` hook manages an items focus state including keyboard controls,\\n      aria attributes and RTL support. It uses the \\n      [roving tab index strategy](https://www.w3.org/TR/wai-aria-practices/#kbd_roving_tabindex).`\\n    }\\n  }\\n};\\n\\nexport default {\\n  title: \'Selection Container\',\\n  component: SelectionContainer,\\n  parameters: {\\n    layout: \'centered\',\\n    componentSubtitle: `A container component which wraps the useSelection hook.`\\n  }\\n};\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Container":{"startLoc":{"col":25,"line":11},"endLoc":{"col":1,"line":41},"startBody":{"col":25,"line":11},"endBody":{"col":1,"line":41}},"Hook":{"startLoc":{"col":20,"line":43},"endLoc":{"col":1,"line":85},"startBody":{"col":20,"line":43},"endBody":{"col":1,"line":85}}};\n    \n/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React from \'react\';\nimport { SelectionContainer, useSelection } from \'./src\';\n\nexport const Container = ({ defaultFocusedIndex }) => {\n  const items = [\'Item 1\', \'Item 2\', \'Item 3\'];\n\n  return (\n    <SelectionContainer direction="vertical" defaultFocusedIndex={defaultFocusedIndex}>\n      {({ selectedItem, focusedItem, getContainerProps, getItemProps }) => (\n        <ul {...getContainerProps()}>\n          {items.map(item => {\n            const ref = React.createRef();\n            const isSelected = item === selectedItem;\n            const isFocused = item === focusedItem;\n\n            return (\n              <li\n                {...getItemProps({\n                  key: item,\n                  item,\n                  focusRef: ref\n                })}\n              >\n                {item}\n                {isSelected && <span> - Selected</span>}\n                {isFocused && <span> - Focused</span>}\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </SelectionContainer>\n  );\n};;\n\nexport const Hook = ({ direction, defaultSelectedIndex, rtl }) => {\n  const items = [\'One\', \'Two\', \'Three\'];\n\n  const Selection = () => {\n    const { focusedItem, selectedItem, getContainerProps, getItemProps } = useSelection<string>({\n      direction,\n      defaultSelectedIndex,\n      rtl\n    });\n\n    return (\n      <ul {...getContainerProps({ style: { display: \'flex\' } })}>\n        {items.map(item => {\n          const itemRef = React.createRef<HTMLLIElement>();\n          const isSelected = selectedItem === item;\n          const isFocused = focusedItem === item;\n\n          return (\n            <li\n              {...getItemProps({\n                key: item,\n                item,\n                focusRef: itemRef,\n                style: {\n                  listStyle: \'none\',\n                  margin: 16,\n                  padding: 8,\n                  textAlign: \'center\'\n                }\n              })}\n            >\n              {item}\n              {isSelected && <div>[Selected]</div>}\n              {isFocused && <div>(Focused)</div>}\n            </li>\n          );\n        })}\n      </ul>\n    );\n  };\n\n  return <Selection />;\n};\n\nContainer.storyName = \'SelectionContainer\';\n\nHook.storyName = \'useSelection\';\n\nHook.args = {\n  defaultSelectedIndex: 0\n};\n\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`useSelection\\` hook manages an items focus state including keyboard controls,\n      aria attributes and RTL support. It uses the \n      [roving tab index strategy](https://www.w3.org/TR/wai-aria-practices/#kbd_roving_tabindex).`\n    }\n  }\n};\n\nexport default {\n  title: \'Selection Container\',\n  component: SelectionContainer,\n  parameters: {"storySource":{"source":"/**\\n * Copyright Zendesk, Inc.\\n *\\n * Use of this source code is governed under the Apache License, Version 2.0\\n * found at http://www.apache.org/licenses/LICENSE-2.0.\\n */\\n\\nimport React from \'react\';\\nimport { SelectionContainer, useSelection } from \'./src\';\\n\\nexport const Container = ({ defaultFocusedIndex }) => {\\n  const items = [\'Item 1\', \'Item 2\', \'Item 3\'];\\n\\n  return (\\n    <SelectionContainer direction=\\"vertical\\" defaultFocusedIndex={defaultFocusedIndex}>\\n      {({ selectedItem, focusedItem, getContainerProps, getItemProps }) => (\\n        <ul {...getContainerProps()}>\\n          {items.map(item => {\\n            const ref = React.createRef();\\n            const isSelected = item === selectedItem;\\n            const isFocused = item === focusedItem;\\n\\n            return (\\n              <li\\n                {...getItemProps({\\n                  key: item,\\n                  item,\\n                  focusRef: ref\\n                })}\\n              >\\n                {item}\\n                {isSelected && <span> - Selected</span>}\\n                {isFocused && <span> - Focused</span>}\\n              </li>\\n            );\\n          })}\\n        </ul>\\n      )}\\n    </SelectionContainer>\\n  );\\n};\\n\\nexport const Hook = ({ direction, defaultSelectedIndex, rtl }) => {\\n  const items = [\'One\', \'Two\', \'Three\'];\\n\\n  const Selection = () => {\\n    const { focusedItem, selectedItem, getContainerProps, getItemProps } = useSelection<string>({\\n      direction,\\n      defaultSelectedIndex,\\n      rtl\\n    });\\n\\n    return (\\n      <ul {...getContainerProps({ style: { display: \'flex\' } })}>\\n        {items.map(item => {\\n          const itemRef = React.createRef<HTMLLIElement>();\\n          const isSelected = selectedItem === item;\\n          const isFocused = focusedItem === item;\\n\\n          return (\\n            <li\\n              {...getItemProps({\\n                key: item,\\n                item,\\n                focusRef: itemRef,\\n                style: {\\n                  listStyle: \'none\',\\n                  margin: 16,\\n                  padding: 8,\\n                  textAlign: \'center\'\\n                }\\n              })}\\n            >\\n              {item}\\n              {isSelected && <div>[Selected]</div>}\\n              {isFocused && <div>(Focused)</div>}\\n            </li>\\n          );\\n        })}\\n      </ul>\\n    );\\n  };\\n\\n  return <Selection />;\\n};\\n\\nContainer.storyName = \'SelectionContainer\';\\n\\nHook.storyName = \'useSelection\';\\n\\nHook.args = {\\n  defaultSelectedIndex: 0\\n};\\n\\nHook.parameters = {\\n  docs: {\\n    description: {\\n      story: `The \\\\`useSelection\\\\` hook manages an items focus state including keyboard controls,\\n      aria attributes and RTL support. It uses the \\n      [roving tab index strategy](https://www.w3.org/TR/wai-aria-practices/#kbd_roving_tabindex).`\\n    }\\n  }\\n};\\n\\nexport default {\\n  title: \'Selection Container\',\\n  component: SelectionContainer,\\n  parameters: {\\n    layout: \'centered\',\\n    componentSubtitle: `A container component which wraps the useSelection hook.`\\n  }\\n};\\n","locationsMap":{"container":{"startLoc":{"col":25,"line":11},"endLoc":{"col":1,"line":41},"startBody":{"col":25,"line":11},"endBody":{"col":1,"line":41}},"hook":{"startLoc":{"col":20,"line":43},"endLoc":{"col":1,"line":85},"startBody":{"col":20,"line":43},"endBody":{"col":1,"line":85}}}},\n    layout: \'centered\',\n    componentSubtitle: `A container component which wraps the useSelection hook.`\n  },};\n',locationsMap:{container:{startLoc:{col:25,line:19},endLoc:{col:1,line:49},startBody:{col:25,line:19},endBody:{col:1,line:49}},hook:{startLoc:{col:20,line:51},endLoc:{col:1,line:93},startBody:{col:20,line:51},endBody:{col:1,line:93}}}}},_parameters.storySource={source:"/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React from 'react';\nimport { SelectionContainer, useSelection } from './src';\n\nexport const Container = ({ defaultFocusedIndex }) => {\n  const items = ['Item 1', 'Item 2', 'Item 3'];\n\n  return (\n    <SelectionContainer direction=\"vertical\" defaultFocusedIndex={defaultFocusedIndex}>\n      {({ selectedItem, focusedItem, getContainerProps, getItemProps }) => (\n        <ul {...getContainerProps()}>\n          {items.map(item => {\n            const ref = React.createRef();\n            const isSelected = item === selectedItem;\n            const isFocused = item === focusedItem;\n\n            return (\n              <li\n                {...getItemProps({\n                  key: item,\n                  item,\n                  focusRef: ref\n                })}\n              >\n                {item}\n                {isSelected && <span> - Selected</span>}\n                {isFocused && <span> - Focused</span>}\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </SelectionContainer>\n  );\n};\n\nexport const Hook = ({ direction, defaultSelectedIndex, rtl }) => {\n  const items = ['One', 'Two', 'Three'];\n\n  const Selection = () => {\n    const { focusedItem, selectedItem, getContainerProps, getItemProps } = useSelection<string>({\n      direction,\n      defaultSelectedIndex,\n      rtl\n    });\n\n    return (\n      <ul {...getContainerProps({ style: { display: 'flex' } })}>\n        {items.map(item => {\n          const itemRef = React.createRef<HTMLLIElement>();\n          const isSelected = selectedItem === item;\n          const isFocused = focusedItem === item;\n\n          return (\n            <li\n              {...getItemProps({\n                key: item,\n                item,\n                focusRef: itemRef,\n                style: {\n                  listStyle: 'none',\n                  margin: 16,\n                  padding: 8,\n                  textAlign: 'center'\n                }\n              })}\n            >\n              {item}\n              {isSelected && <div>[Selected]</div>}\n              {isFocused && <div>(Focused)</div>}\n            </li>\n          );\n        })}\n      </ul>\n    );\n  };\n\n  return <Selection />;\n};\n\nContainer.storyName = 'SelectionContainer';\n\nHook.storyName = 'useSelection';\n\nHook.args = {\n  defaultSelectedIndex: 0\n};\n\nHook.parameters = {\n  docs: {\n    description: {\n      story: `The \\`useSelection\\` hook manages an items focus state including keyboard controls,\n      aria attributes and RTL support. It uses the \n      [roving tab index strategy](https://www.w3.org/TR/wai-aria-practices/#kbd_roving_tabindex).`\n    }\n  }\n};\n\nexport default {\n  title: 'Selection Container',\n  component: SelectionContainer,\n  parameters: {\n    layout: 'centered',\n    componentSubtitle: `A container component which wraps the useSelection hook.`\n  }\n};\n",locationsMap:{container:{startLoc:{col:25,line:11},endLoc:{col:1,line:41},startBody:{col:25,line:11},endBody:{col:1,line:41}},hook:{startLoc:{col:20,line:43},endLoc:{col:1,line:85},startBody:{col:20,line:43},endBody:{col:1,line:85}}}},_parameters.layout="centered",_parameters.componentSubtitle="A container component which wraps the useSelection hook.",_parameters)};selection_stories_Container.parameters=Object(esm_extends.a)({storySource:{source:"({ defaultFocusedIndex }) => {\n  const items = ['Item 1', 'Item 2', 'Item 3'];\n\n  return (\n    <SelectionContainer direction=\"vertical\" defaultFocusedIndex={defaultFocusedIndex}>\n      {({ selectedItem, focusedItem, getContainerProps, getItemProps }) => (\n        <ul {...getContainerProps()}>\n          {items.map(item => {\n            const ref = React.createRef();\n            const isSelected = item === selectedItem;\n            const isFocused = item === focusedItem;\n\n            return (\n              <li\n                {...getItemProps({\n                  key: item,\n                  item,\n                  focusRef: ref\n                })}\n              >\n                {item}\n                {isSelected && <span> - Selected</span>}\n                {isFocused && <span> - Focused</span>}\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </SelectionContainer>\n  );\n}"}},selection_stories_Container.parameters),selection_stories_Hook.parameters=Object(esm_extends.a)({storySource:{source:"({ direction, defaultSelectedIndex, rtl }) => {\n  const items = ['One', 'Two', 'Three'];\n\n  const Selection = () => {\n    const { focusedItem, selectedItem, getContainerProps, getItemProps } = useSelection<string>({\n      direction,\n      defaultSelectedIndex,\n      rtl\n    });\n\n    return (\n      <ul {...getContainerProps({ style: { display: 'flex' } })}>\n        {items.map(item => {\n          const itemRef = React.createRef<HTMLLIElement>();\n          const isSelected = selectedItem === item;\n          const isFocused = focusedItem === item;\n\n          return (\n            <li\n              {...getItemProps({\n                key: item,\n                item,\n                focusRef: itemRef,\n                style: {\n                  listStyle: 'none',\n                  margin: 16,\n                  padding: 8,\n                  textAlign: 'center'\n                }\n              })}\n            >\n              {item}\n              {isSelected && <div>[Selected]</div>}\n              {isFocused && <div>(Focused)</div>}\n            </li>\n          );\n        })}\n      </ul>\n    );\n  };\n\n  return <Selection />;\n}"}},selection_stories_Hook.parameters);try{selection_stories_Container.displayName="Container",selection_stories_Container.__docgenInfo={description:"",displayName:"Container",props:{defaultFocusedIndex:{defaultValue:null,description:"",name:"defaultFocusedIndex",required:!0,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/selection/selection.stories.tsx#Container"]={docgenInfo:selection_stories_Container.__docgenInfo,name:"Container",path:"packages/selection/selection.stories.tsx#Container"})}catch(__react_docgen_typescript_loader_error){}try{selection_stories_Hook.displayName="Hook",selection_stories_Hook.__docgenInfo={description:"",displayName:"Hook",props:{direction:{defaultValue:null,description:"",name:"direction",required:!0,type:{name:"any"}},defaultSelectedIndex:{defaultValue:null,description:"",name:"defaultSelectedIndex",required:!0,type:{name:"any"}},rtl:{defaultValue:null,description:"",name:"rtl",required:!0,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/selection/selection.stories.tsx#Hook"]={docgenInfo:selection_stories_Hook.__docgenInfo,name:"Hook",path:"packages/selection/selection.stories.tsx#Hook"})}catch(__react_docgen_typescript_loader_error){}}},[[1784,2,3]]]);